INFO  10:26:54,454 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  10:26:54,676 - #2 program
INFO  10:26:54,676 - #50 test302
INFO  10:26:54,676 - #7 const
INFO  10:26:54,684 - #50 int
INFO  10:26:54,684 - #50 jedan
INFO  10:26:54,688 - #8 =
INFO  10:26:54,688 - #48 1
INFO  10:26:54,688 - #17 ;
INFO  10:26:54,692 - #50 int
INFO  10:26:54,695 - #50 i
INFO  10:26:54,695 - #17 ;
INFO  10:26:54,696 - #50 bool
INFO  10:26:54,696 - #50 ibool
INFO  10:26:54,696 - #17 ;
INFO  10:26:54,696 - #50 int
INFO  10:26:54,696 - #50 niz2
INFO  10:26:54,697 - #17 ;
INFO  10:26:54,697 - #50 int
INFO  10:26:54,697 - #50 niz
INFO  10:26:54,697 - #13 [
INFO  10:26:54,697 - #14 ]
INFO  10:26:54,697 - #17 ;
INFO  10:26:54,697 - #50 int
INFO  10:26:54,698 - #50 a
INFO  10:26:54,698 - #20 ,
INFO  10:26:54,698 - #50 curr
INFO  10:26:54,698 - #17 ;
INFO  10:26:54,698 - #11 {
INFO  10:26:54,698 - #50 int
INFO  10:26:54,700 - #50 sum
INFO  10:26:54,700 - #15 (
INFO  10:26:54,702 - #50 int
INFO  10:26:54,702 - #50 z
INFO  10:26:54,702 - #20 ,
INFO  10:26:54,702 - #50 int
INFO  10:26:54,703 - #50 d
INFO  10:26:54,703 - #16 )
INFO  10:26:54,703 - #11 {
INFO  10:26:54,705 - #3 return
INFO  10:26:54,706 - #50 z
INFO  10:26:54,706 - #25 +
INFO  10:26:54,707 - #50 d
INFO  10:26:54,710 - #17 ;
INFO  10:26:54,710 - #12 }
INFO  10:26:54,711 - #50 int
INFO  10:26:54,711 - #50 inkrement
INFO  10:26:54,711 - #15 (
INFO  10:26:54,711 - #50 int
INFO  10:26:54,711 - #50 a
INFO  10:26:54,712 - #20 ,
INFO  10:26:54,715 - #50 int
INFO  10:26:54,715 - #50 inc
INFO  10:26:54,715 - #16 )
INFO  10:26:54,715 - #50 int
INFO  10:26:54,715 - #50 pom
INFO  10:26:54,715 - #17 ;
INFO  10:26:54,716 - #11 {
INFO  10:26:54,716 - #37 if
INFO  10:26:54,716 - #15 (
INFO  10:26:54,716 - #50 inc
INFO  10:26:54,716 - #31 ==
INFO  10:26:54,716 - #50 jedan
INFO  10:26:54,720 - #16 )
INFO  10:26:54,721 - #50 pom
INFO  10:26:54,721 - #8 =
INFO  10:26:54,721 - #48 1
INFO  10:26:54,723 - #17 ;
INFO  10:26:54,723 - #38 else
INFO  10:26:54,724 - #37 if
INFO  10:26:54,724 - #15 (
INFO  10:26:54,724 - #50 inc
INFO  10:26:54,724 - #31 ==
INFO  10:26:54,724 - #48 2
INFO  10:26:54,724 - #16 )
INFO  10:26:54,724 - #50 pom
INFO  10:26:54,724 - #8 =
INFO  10:26:54,724 - #50 a
INFO  10:26:54,724 - #17 ;
INFO  10:26:54,724 - #3 return
INFO  10:26:54,725 - #50 sum
INFO  10:26:54,725 - #15 (
INFO  10:26:54,725 - #50 a
INFO  10:26:54,725 - #20 ,
INFO  10:26:54,725 - #50 pom
INFO  10:26:54,725 - #16 )
INFO  10:26:54,726 - #17 ;
INFO  10:26:54,726 - #12 }
INFO  10:26:54,726 - #50 bool
INFO  10:26:54,726 - #50 verify
INFO  10:26:54,726 - #15 (
INFO  10:26:54,727 - #16 )
INFO  10:26:54,727 - #11 {
INFO  10:26:54,727 - #5 print
INFO  10:26:54,727 - #15 (
INFO  10:26:54,727 - #49 v
INFO  10:26:54,727 - #16 )
INFO  10:26:54,727 - #17 ;
INFO  10:26:54,727 - #3 return
INFO  10:26:54,728 - #47 false
INFO  10:26:54,728 - #17 ;
INFO  10:26:54,728 - #12 }
INFO  10:26:54,728 - #4 void
INFO  10:26:54,728 - #50 main
INFO  10:26:54,730 - #15 (
INFO  10:26:54,730 - #16 )
INFO  10:26:54,731 - #11 {
INFO  10:26:54,731 - #37 if
INFO  10:26:54,731 - #15 (
INFO  10:26:54,731 - #48 1
INFO  10:26:54,731 - #32 !=
INFO  10:26:54,731 - #48 1
INFO  10:26:54,732 - #16 )
INFO  10:26:54,733 - #5 print
INFO  10:26:54,733 - #15 (
INFO  10:26:54,733 - #26 -
INFO  10:26:54,733 - #48 6
INFO  10:26:54,733 - #16 )
INFO  10:26:54,733 - #17 ;
INFO  10:26:54,733 - #38 else
INFO  10:26:54,733 - #5 print
INFO  10:26:54,733 - #15 (
INFO  10:26:54,733 - #48 0
INFO  10:26:54,733 - #16 )
INFO  10:26:54,734 - #17 ;
INFO  10:26:54,734 - #50 ibool
INFO  10:26:54,734 - #8 =
INFO  10:26:54,734 - #47 false
INFO  10:26:54,734 - #17 ;
INFO  10:26:54,734 - #50 i
INFO  10:26:54,734 - #8 =
INFO  10:26:54,734 - #48 0
INFO  10:26:54,734 - #17 ;
INFO  10:26:54,734 - #40 while
INFO  10:26:54,735 - #15 (
INFO  10:26:54,735 - #50 i
INFO  10:26:54,735 - #35 <
INFO  10:26:54,735 - #48 5
INFO  10:26:54,737 - #16 )
INFO  10:26:54,737 - #11 {
INFO  10:26:54,737 - #37 if
INFO  10:26:54,738 - #15 (
INFO  10:26:54,738 - #50 i
INFO  10:26:54,738 - #31 ==
INFO  10:26:54,738 - #48 2
INFO  10:26:54,738 - #16 )
INFO  10:26:54,738 - #50 ibool
INFO  10:26:54,738 - #8 =
INFO  10:26:54,738 - #47 true
INFO  10:26:54,738 - #17 ;
INFO  10:26:54,738 - #50 i
INFO  10:26:54,738 - #27 ++
INFO  10:26:54,738 - #17 ;
INFO  10:26:54,739 - #12 }
INFO  10:26:54,740 - #37 if
INFO  10:26:54,740 - #15 (
INFO  10:26:54,740 - #50 ibool
INFO  10:26:54,740 - #16 )
INFO  10:26:54,740 - #37 if
INFO  10:26:54,740 - #15 (
INFO  10:26:54,740 - #50 i
INFO  10:26:54,741 - #31 ==
INFO  10:26:54,741 - #48 5
INFO  10:26:54,741 - #16 )
INFO  10:26:54,741 - #5 print
INFO  10:26:54,741 - #15 (
INFO  10:26:54,741 - #48 1
INFO  10:26:54,741 - #16 )
INFO  10:26:54,741 - #17 ;
INFO  10:26:54,741 - #38 else
INFO  10:26:54,741 - #5 print
INFO  10:26:54,741 - #15 (
INFO  10:26:54,741 - #26 -
INFO  10:26:54,741 - #48 1
INFO  10:26:54,742 - #16 )
INFO  10:26:54,742 - #17 ;
INFO  10:26:54,742 - #50 a
INFO  10:26:54,742 - #8 =
INFO  10:26:54,742 - #48 2
INFO  10:26:54,742 - #17 ;
INFO  10:26:54,742 - #50 niz
INFO  10:26:54,742 - #8 =
INFO  10:26:54,742 - #46 new
INFO  10:26:54,742 - #50 int
INFO  10:26:54,742 - #13 [
INFO  10:26:54,742 - #48 3
INFO  10:26:54,742 - #14 ]
INFO  10:26:54,742 - #17 ;
INFO  10:26:54,743 - #50 niz
INFO  10:26:54,743 - #13 [
INFO  10:26:54,743 - #48 0
INFO  10:26:54,743 - #14 ]
INFO  10:26:54,743 - #8 =
INFO  10:26:54,743 - #48 1
INFO  10:26:54,743 - #22 *
INFO  10:26:54,743 - #50 a
INFO  10:26:54,747 - #17 ;
INFO  10:26:54,747 - #50 niz
INFO  10:26:54,747 - #13 [
INFO  10:26:54,747 - #48 1
INFO  10:26:54,748 - #14 ]
INFO  10:26:54,748 - #8 =
INFO  10:26:54,748 - #48 2
INFO  10:26:54,748 - #22 *
INFO  10:26:54,748 - #50 a
INFO  10:26:54,748 - #17 ;
INFO  10:26:54,748 - #50 niz
INFO  10:26:54,748 - #13 [
INFO  10:26:54,748 - #48 2
INFO  10:26:54,748 - #14 ]
INFO  10:26:54,748 - #8 =
INFO  10:26:54,748 - #50 sum
INFO  10:26:54,748 - #15 (
INFO  10:26:54,748 - #50 niz
INFO  10:26:54,748 - #13 [
INFO  10:26:54,748 - #48 1
INFO  10:26:54,749 - #14 ]
INFO  10:26:54,749 - #20 ,
INFO  10:26:54,749 - #50 niz
INFO  10:26:54,749 - #13 [
INFO  10:26:54,749 - #48 0
INFO  10:26:54,749 - #14 ]
INFO  10:26:54,749 - #16 )
INFO  10:26:54,749 - #22 *
INFO  10:26:54,749 - #50 a
INFO  10:26:54,749 - #25 +
INFO  10:26:54,749 - #48 1
INFO  10:26:54,749 - #17 ;
INFO  10:26:54,749 - #37 if
INFO  10:26:54,750 - #15 (
INFO  10:26:54,750 - #50 verify
INFO  10:26:54,750 - #15 (
INFO  10:26:54,750 - #16 )
INFO  10:26:54,750 - #30 ||
INFO  10:26:54,750 - #50 niz
INFO  10:26:54,750 - #13 [
INFO  10:26:54,750 - #48 2
INFO  10:26:54,750 - #14 ]
INFO  10:26:54,750 - #31 ==
INFO  10:26:54,750 - #48 4
INFO  10:26:54,751 - #16 )
INFO  10:26:54,751 - #5 print
INFO  10:26:54,751 - #15 (
INFO  10:26:54,751 - #50 ord
INFO  10:26:54,751 - #15 (
INFO  10:26:54,751 - #49 A
INFO  10:26:54,751 - #16 )
INFO  10:26:54,751 - #16 )
INFO  10:26:54,751 - #17 ;
INFO  10:26:54,751 - #38 else
INFO  10:26:54,752 - #5 print
INFO  10:26:54,752 - #15 (
INFO  10:26:54,752 - #50 ord
INFO  10:26:54,752 - #15 (
INFO  10:26:54,752 - #49 a
INFO  10:26:54,752 - #16 )
INFO  10:26:54,753 - #16 )
INFO  10:26:54,753 - #17 ;
INFO  10:26:54,753 - #5 print
INFO  10:26:54,753 - #15 (
INFO  10:26:54,753 - #50 eol
INFO  10:26:54,753 - #16 )
INFO  10:26:54,753 - #17 ;
INFO  10:26:54,753 - #50 i
INFO  10:26:54,753 - #8 =
INFO  10:26:54,754 - #48 0
INFO  10:26:54,754 - #17 ;
INFO  10:26:54,754 - #40 while
INFO  10:26:54,754 - #15 (
INFO  10:26:54,754 - #50 i
INFO  10:26:54,754 - #35 <
INFO  10:26:54,754 - #48 10
INFO  10:26:54,754 - #16 )
INFO  10:26:54,754 - #11 {
INFO  10:26:54,755 - #37 if
INFO  10:26:54,755 - #15 (
INFO  10:26:54,755 - #50 i
INFO  10:26:54,755 - #31 ==
INFO  10:26:54,755 - #48 3
INFO  10:26:54,755 - #16 )
INFO  10:26:54,755 - #11 {
INFO  10:26:54,755 - #50 i
INFO  10:26:54,755 - #27 ++
INFO  10:26:54,755 - #17 ;
INFO  10:26:54,755 - #42 continue
INFO  10:26:54,755 - #17 ;
INFO  10:26:54,755 - #12 }
INFO  10:26:54,757 - #37 if
INFO  10:26:54,758 - #15 (
INFO  10:26:54,758 - #50 i
INFO  10:26:54,758 - #31 ==
INFO  10:26:54,758 - #48 4
INFO  10:26:54,758 - #16 )
INFO  10:26:54,758 - #41 break
INFO  10:26:54,758 - #17 ;
INFO  10:26:54,758 - #50 i
INFO  10:26:54,760 - #8 =
INFO  10:26:54,760 - #50 inkrement
INFO  10:26:54,760 - #15 (
INFO  10:26:54,761 - #50 i
INFO  10:26:54,761 - #20 ,
INFO  10:26:54,761 - #48 1
INFO  10:26:54,761 - #16 )
INFO  10:26:54,761 - #17 ;
INFO  10:26:54,761 - #12 }
INFO  10:26:54,761 - #37 if
INFO  10:26:54,761 - #15 (
INFO  10:26:54,761 - #50 i
INFO  10:26:54,761 - #31 ==
INFO  10:26:54,761 - #48 3
INFO  10:26:54,761 - #29 &&
INFO  10:26:54,761 - #50 verify
INFO  10:26:54,761 - #15 (
INFO  10:26:54,761 - #16 )
INFO  10:26:54,761 - #16 )
INFO  10:26:54,761 - #5 print
INFO  10:26:54,761 - #15 (
INFO  10:26:54,761 - #26 -
INFO  10:26:54,761 - #48 4
INFO  10:26:54,761 - #16 )
INFO  10:26:54,761 - #17 ;
INFO  10:26:54,762 - #38 else
INFO  10:26:54,762 - #5 print
INFO  10:26:54,762 - #15 (
INFO  10:26:54,762 - #48 4
INFO  10:26:54,762 - #16 )
INFO  10:26:54,762 - #17 ;
INFO  10:26:54,762 - #6 read
INFO  10:26:54,763 - #15 (
INFO  10:26:54,763 - #50 niz
INFO  10:26:54,763 - #13 [
INFO  10:26:54,763 - #48 0
INFO  10:26:54,763 - #14 ]
INFO  10:26:54,763 - #16 )
INFO  10:26:54,763 - #17 ;
INFO  10:26:54,763 - #6 read
INFO  10:26:54,763 - #15 (
INFO  10:26:54,763 - #50 niz
INFO  10:26:54,763 - #13 [
INFO  10:26:54,763 - #48 1
INFO  10:26:54,763 - #14 ]
INFO  10:26:54,763 - #16 )
INFO  10:26:54,763 - #17 ;
INFO  10:26:54,763 - #6 read
INFO  10:26:54,763 - #15 (
INFO  10:26:54,763 - #50 niz
INFO  10:26:54,763 - #13 [
INFO  10:26:54,764 - #48 2
INFO  10:26:54,764 - #14 ]
INFO  10:26:54,764 - #16 )
INFO  10:26:54,764 - #17 ;
INFO  10:26:54,764 - #5 print
INFO  10:26:54,764 - #15 (
INFO  10:26:54,764 - #50 eol
INFO  10:26:54,764 - #16 )
INFO  10:26:54,764 - #17 ;
INFO  10:26:54,764 - #5 print
INFO  10:26:54,764 - #15 (
INFO  10:26:54,764 - #50 sum
INFO  10:26:54,764 - #15 (
INFO  10:26:54,764 - #50 sum
INFO  10:26:54,764 - #15 (
INFO  10:26:54,765 - #50 niz
INFO  10:26:54,765 - #13 [
INFO  10:26:54,765 - #48 0
INFO  10:26:54,765 - #14 ]
INFO  10:26:54,765 - #20 ,
INFO  10:26:54,765 - #50 niz
INFO  10:26:54,765 - #13 [
INFO  10:26:54,765 - #48 1
INFO  10:26:54,765 - #14 ]
INFO  10:26:54,765 - #16 )
INFO  10:26:54,765 - #20 ,
INFO  10:26:54,765 - #50 niz
INFO  10:26:54,765 - #13 [
INFO  10:26:54,765 - #48 2
INFO  10:26:54,765 - #14 ]
INFO  10:26:54,765 - #16 )
INFO  10:26:54,766 - #16 )
INFO  10:26:54,766 - #17 ;
INFO  10:26:54,766 - #5 print
INFO  10:26:54,766 - #15 (
INFO  10:26:54,766 - #50 eol
INFO  10:26:54,766 - #16 )
INFO  10:26:54,766 - #17 ;
INFO  10:26:54,766 - #5 print
INFO  10:26:54,767 - #15 (
INFO  10:26:54,767 - #50 inkrement
INFO  10:26:54,767 - #15 (
INFO  10:26:54,767 - #50 niz
INFO  10:26:54,767 - #13 [
INFO  10:26:54,767 - #48 2
INFO  10:26:54,767 - #14 ]
INFO  10:26:54,767 - #20 ,
INFO  10:26:54,767 - #48 2
INFO  10:26:54,767 - #16 )
INFO  10:26:54,767 - #16 )
INFO  10:26:54,767 - #17 ;
INFO  10:26:54,767 - #50 a
INFO  10:26:54,767 - #8 =
INFO  10:26:54,768 - #48 3
INFO  10:26:54,768 - #17 ;
INFO  10:26:54,768 - #50 i
INFO  10:26:54,768 - #8 =
INFO  10:26:54,768 - #48 0
INFO  10:26:54,768 - #17 ;
INFO  10:26:54,768 - #40 while
INFO  10:26:54,768 - #15 (
INFO  10:26:54,768 - #50 i
INFO  10:26:54,768 - #35 <
INFO  10:26:54,768 - #48 3
INFO  10:26:54,769 - #16 )
INFO  10:26:54,769 - #11 {
INFO  10:26:54,769 - #50 niz
INFO  10:26:54,769 - #13 [
INFO  10:26:54,769 - #50 i
INFO  10:26:54,769 - #14 ]
INFO  10:26:54,770 - #8 =
INFO  10:26:54,770 - #50 niz
INFO  10:26:54,770 - #13 [
INFO  10:26:54,770 - #50 i
INFO  10:26:54,770 - #14 ]
INFO  10:26:54,770 - #22 *
INFO  10:26:54,770 - #48 2
INFO  10:26:54,770 - #22 *
INFO  10:26:54,770 - #50 a
INFO  10:26:54,770 - #17 ;
INFO  10:26:54,770 - #50 i
INFO  10:26:54,770 - #27 ++
INFO  10:26:54,770 - #17 ;
INFO  10:26:54,771 - #12 }
INFO  10:26:54,771 - #50 niz
INFO  10:26:54,771 - #19 .
INFO  10:26:54,771 - #10 foreach
INFO  10:26:54,771 - #15 (
INFO  10:26:54,771 - #50 curr
INFO  10:26:54,771 - #8 =
ERROR 10:26:54,772 - 
Syntax error on line 92
INFO  10:26:54,772 - #33 >
INFO  10:26:54,772 - #5 print
INFO  10:26:54,772 - #15 (
INFO  10:26:54,773 - #50 curr
INFO  10:26:54,773 - #16 )
INFO  10:26:54,773 - #17 ;
INFO  10:26:54,774 - #16 )
INFO  10:26:54,774 - #17 ;
INFO  10:26:54,774 - #5 print
INFO  10:26:54,774 - #15 (
INFO  10:26:54,774 - #50 eol
ERROR 10:26:54,774 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  10:26:54,780 - #16 )
INFO  10:26:54,780 - #17 ;
INFO  10:26:54,780 - #50 niz2
INFO  10:26:54,780 - #8 =
INFO  10:26:54,780 - #48 0
INFO  10:26:54,780 - #17 ;
INFO  10:26:54,780 - #50 niz
INFO  10:26:54,781 - #19 .
INFO  10:26:54,781 - #10 foreach
INFO  10:26:54,781 - #15 (
INFO  10:26:54,781 - #50 curr
INFO  10:26:54,781 - #8 =
ERROR 10:26:54,781 - 
Syntax error on line 96
INFO  10:26:54,781 - #33 >
INFO  10:26:54,781 - #11 {
INFO  10:26:54,781 - #50 niz2
INFO  10:26:54,781 - #8 =
INFO  10:26:54,781 - #50 niz2
INFO  10:26:54,781 - #25 +
INFO  10:26:54,781 - #50 curr
INFO  10:26:54,781 - #22 *
INFO  10:26:54,781 - #50 curr
INFO  10:26:54,781 - #17 ;
INFO  10:26:54,781 - #12 }
INFO  10:26:54,781 - #16 )
INFO  10:26:54,781 - #17 ;
INFO  10:26:54,781 - #5 print
INFO  10:26:54,781 - #15 (
INFO  10:26:54,781 - #50 niz2
ERROR 10:26:54,781 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  10:26:54,781 - #16 )
INFO  10:26:54,782 - #17 ;
INFO  10:26:54,782 - #12 }
INFO  10:26:54,782 - #12 }
INFO  10:26:54,803 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  10:26:54,803 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  10:26:54,803 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  10:26:54,803 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  10:26:54,803 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  10:26:54,804 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  10:26:54,804 - Detektovana deklaracija globalne promenljive curr Linija: 13
