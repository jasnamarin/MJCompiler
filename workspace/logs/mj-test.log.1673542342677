INFO  17:51:26,910 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:51:27,145 - #2 program
INFO  17:51:27,146 - #50 test302
INFO  17:51:27,146 - #7 const
INFO  17:51:27,150 - #50 int
INFO  17:51:27,150 - #50 jedan
INFO  17:51:27,153 - #8 =
INFO  17:51:27,153 - #48 1
INFO  17:51:27,153 - #17 ;
INFO  17:51:27,157 - #50 int
INFO  17:51:27,160 - #50 i
INFO  17:51:27,160 - #17 ;
INFO  17:51:27,161 - #50 bool
INFO  17:51:27,162 - #50 ibool
INFO  17:51:27,162 - #17 ;
INFO  17:51:27,162 - #50 int
INFO  17:51:27,162 - #50 niz2
INFO  17:51:27,162 - #17 ;
INFO  17:51:27,163 - #50 int
INFO  17:51:27,163 - #50 niz
INFO  17:51:27,163 - #13 [
INFO  17:51:27,163 - #14 ]
INFO  17:51:27,163 - #17 ;
INFO  17:51:27,164 - #50 int
INFO  17:51:27,164 - #50 a
INFO  17:51:27,164 - #20 ,
INFO  17:51:27,164 - #50 curr
INFO  17:51:27,164 - #17 ;
INFO  17:51:27,165 - #11 {
INFO  17:51:27,165 - #50 int
INFO  17:51:27,167 - #50 sum
INFO  17:51:27,168 - #15 (
INFO  17:51:27,170 - #50 int
INFO  17:51:27,170 - #50 z
INFO  17:51:27,170 - #20 ,
INFO  17:51:27,170 - #50 int
INFO  17:51:27,171 - #50 d
INFO  17:51:27,171 - #16 )
INFO  17:51:27,171 - #11 {
INFO  17:51:27,173 - #3 return
INFO  17:51:27,175 - #50 z
INFO  17:51:27,176 - #25 +
INFO  17:51:27,177 - #50 d
INFO  17:51:27,181 - #17 ;
INFO  17:51:27,182 - #12 }
INFO  17:51:27,182 - #50 int
INFO  17:51:27,183 - #50 inkrement
INFO  17:51:27,183 - #15 (
INFO  17:51:27,184 - #50 int
INFO  17:51:27,184 - #50 a
INFO  17:51:27,184 - #20 ,
INFO  17:51:27,184 - #50 int
INFO  17:51:27,184 - #50 inc
INFO  17:51:27,184 - #16 )
INFO  17:51:27,189 - #50 int
INFO  17:51:27,189 - #50 pom
INFO  17:51:27,189 - #17 ;
INFO  17:51:27,189 - #11 {
INFO  17:51:27,190 - #37 if
INFO  17:51:27,190 - #15 (
INFO  17:51:27,190 - #50 inc
INFO  17:51:27,190 - #31 ==
INFO  17:51:27,191 - #50 jedan
INFO  17:51:27,196 - #16 )
INFO  17:51:27,197 - #50 pom
INFO  17:51:27,197 - #8 =
INFO  17:51:27,198 - #48 1
INFO  17:51:27,201 - #17 ;
INFO  17:51:27,202 - #38 else
INFO  17:51:27,203 - #37 if
INFO  17:51:27,203 - #15 (
INFO  17:51:27,203 - #50 inc
INFO  17:51:27,203 - #31 ==
INFO  17:51:27,203 - #48 2
INFO  17:51:27,203 - #16 )
INFO  17:51:27,203 - #50 pom
INFO  17:51:27,203 - #8 =
INFO  17:51:27,204 - #50 a
INFO  17:51:27,204 - #17 ;
INFO  17:51:27,204 - #3 return
INFO  17:51:27,205 - #50 sum
INFO  17:51:27,205 - #15 (
INFO  17:51:27,205 - #50 a
INFO  17:51:27,205 - #20 ,
INFO  17:51:27,206 - #50 pom
INFO  17:51:27,206 - #16 )
INFO  17:51:27,206 - #17 ;
INFO  17:51:27,207 - #12 }
INFO  17:51:27,207 - #50 bool
INFO  17:51:27,207 - #50 verify
INFO  17:51:27,207 - #15 (
INFO  17:51:27,207 - #16 )
INFO  17:51:27,207 - #11 {
INFO  17:51:27,208 - #5 print
INFO  17:51:27,208 - #15 (
INFO  17:51:27,208 - #49 v
INFO  17:51:27,208 - #16 )
INFO  17:51:27,209 - #17 ;
INFO  17:51:27,209 - #3 return
INFO  17:51:27,209 - #47 false
INFO  17:51:27,209 - #17 ;
INFO  17:51:27,210 - #12 }
INFO  17:51:27,210 - #4 void
INFO  17:51:27,210 - #50 main
INFO  17:51:27,212 - #15 (
INFO  17:51:27,213 - #16 )
INFO  17:51:27,213 - #11 {
INFO  17:51:27,213 - #37 if
INFO  17:51:27,213 - #15 (
INFO  17:51:27,213 - #48 1
INFO  17:51:27,213 - #32 !=
INFO  17:51:27,213 - #48 1
INFO  17:51:27,215 - #16 )
INFO  17:51:27,216 - #5 print
INFO  17:51:27,216 - #15 (
INFO  17:51:27,216 - #26 -
INFO  17:51:27,216 - #48 6
INFO  17:51:27,216 - #16 )
INFO  17:51:27,217 - #17 ;
INFO  17:51:27,217 - #38 else
INFO  17:51:27,217 - #5 print
INFO  17:51:27,217 - #15 (
INFO  17:51:27,217 - #48 0
INFO  17:51:27,217 - #16 )
INFO  17:51:27,217 - #17 ;
INFO  17:51:27,218 - #50 ibool
INFO  17:51:27,218 - #8 =
INFO  17:51:27,218 - #47 false
INFO  17:51:27,218 - #17 ;
INFO  17:51:27,219 - #50 i
INFO  17:51:27,219 - #8 =
INFO  17:51:27,219 - #48 0
INFO  17:51:27,219 - #17 ;
INFO  17:51:27,219 - #40 while
INFO  17:51:27,220 - #15 (
INFO  17:51:27,220 - #50 i
INFO  17:51:27,220 - #35 <
INFO  17:51:27,220 - #48 5
INFO  17:51:27,222 - #16 )
INFO  17:51:27,222 - #11 {
INFO  17:51:27,223 - #37 if
INFO  17:51:27,223 - #15 (
INFO  17:51:27,223 - #50 i
INFO  17:51:27,223 - #31 ==
INFO  17:51:27,223 - #48 2
INFO  17:51:27,223 - #16 )
INFO  17:51:27,223 - #50 ibool
INFO  17:51:27,223 - #8 =
INFO  17:51:27,223 - #47 true
INFO  17:51:27,224 - #17 ;
INFO  17:51:27,224 - #50 i
INFO  17:51:27,224 - #27 ++
INFO  17:51:27,224 - #17 ;
INFO  17:51:27,226 - #12 }
INFO  17:51:27,226 - #37 if
INFO  17:51:27,227 - #15 (
INFO  17:51:27,227 - #50 ibool
INFO  17:51:27,227 - #16 )
INFO  17:51:27,227 - #37 if
INFO  17:51:27,227 - #15 (
INFO  17:51:27,228 - #50 i
INFO  17:51:27,228 - #31 ==
INFO  17:51:27,228 - #48 5
INFO  17:51:27,228 - #16 )
INFO  17:51:27,228 - #5 print
INFO  17:51:27,228 - #15 (
INFO  17:51:27,228 - #48 1
INFO  17:51:27,228 - #16 )
INFO  17:51:27,228 - #17 ;
INFO  17:51:27,229 - #38 else
INFO  17:51:27,229 - #5 print
INFO  17:51:27,229 - #15 (
INFO  17:51:27,229 - #26 -
INFO  17:51:27,229 - #48 1
INFO  17:51:27,229 - #16 )
INFO  17:51:27,229 - #17 ;
INFO  17:51:27,229 - #50 a
INFO  17:51:27,230 - #8 =
INFO  17:51:27,230 - #48 2
INFO  17:51:27,230 - #17 ;
INFO  17:51:27,230 - #50 niz
INFO  17:51:27,230 - #8 =
INFO  17:51:27,230 - #46 new
INFO  17:51:27,230 - #50 int
INFO  17:51:27,230 - #13 [
INFO  17:51:27,230 - #48 3
INFO  17:51:27,231 - #14 ]
INFO  17:51:27,231 - #17 ;
INFO  17:51:27,231 - #50 niz
INFO  17:51:27,232 - #13 [
INFO  17:51:27,232 - #48 0
INFO  17:51:27,232 - #14 ]
INFO  17:51:27,232 - #8 =
INFO  17:51:27,233 - #48 1
INFO  17:51:27,233 - #22 *
INFO  17:51:27,233 - #50 a
INFO  17:51:27,237 - #17 ;
INFO  17:51:27,238 - #50 niz
INFO  17:51:27,238 - #13 [
INFO  17:51:27,238 - #48 1
INFO  17:51:27,238 - #14 ]
INFO  17:51:27,238 - #8 =
INFO  17:51:27,239 - #48 2
INFO  17:51:27,239 - #22 *
INFO  17:51:27,239 - #50 a
INFO  17:51:27,239 - #17 ;
INFO  17:51:27,239 - #50 niz
INFO  17:51:27,239 - #13 [
INFO  17:51:27,239 - #48 2
INFO  17:51:27,239 - #14 ]
INFO  17:51:27,239 - #8 =
INFO  17:51:27,239 - #50 sum
INFO  17:51:27,239 - #15 (
INFO  17:51:27,240 - #50 niz
INFO  17:51:27,240 - #13 [
INFO  17:51:27,240 - #48 1
INFO  17:51:27,240 - #14 ]
INFO  17:51:27,240 - #20 ,
INFO  17:51:27,240 - #50 niz
INFO  17:51:27,240 - #13 [
INFO  17:51:27,240 - #48 0
INFO  17:51:27,240 - #14 ]
INFO  17:51:27,240 - #16 )
INFO  17:51:27,240 - #22 *
INFO  17:51:27,240 - #50 a
INFO  17:51:27,241 - #25 +
INFO  17:51:27,241 - #48 1
INFO  17:51:27,241 - #17 ;
INFO  17:51:27,241 - #37 if
INFO  17:51:27,241 - #15 (
INFO  17:51:27,241 - #50 verify
INFO  17:51:27,241 - #15 (
INFO  17:51:27,241 - #16 )
INFO  17:51:27,241 - #30 ||
INFO  17:51:27,242 - #50 niz
INFO  17:51:27,242 - #13 [
INFO  17:51:27,242 - #48 2
INFO  17:51:27,242 - #14 ]
INFO  17:51:27,242 - #31 ==
INFO  17:51:27,242 - #48 4
INFO  17:51:27,242 - #16 )
INFO  17:51:27,243 - #5 print
INFO  17:51:27,243 - #15 (
INFO  17:51:27,243 - #50 ord
INFO  17:51:27,243 - #15 (
INFO  17:51:27,243 - #49 A
INFO  17:51:27,243 - #16 )
INFO  17:51:27,243 - #16 )
INFO  17:51:27,243 - #17 ;
INFO  17:51:27,243 - #38 else
INFO  17:51:27,243 - #5 print
INFO  17:51:27,243 - #15 (
INFO  17:51:27,243 - #50 ord
INFO  17:51:27,244 - #15 (
INFO  17:51:27,244 - #49 a
INFO  17:51:27,244 - #16 )
INFO  17:51:27,244 - #16 )
INFO  17:51:27,245 - #17 ;
INFO  17:51:27,245 - #5 print
INFO  17:51:27,245 - #15 (
INFO  17:51:27,245 - #50 eol
INFO  17:51:27,245 - #16 )
INFO  17:51:27,245 - #17 ;
INFO  17:51:27,245 - #50 i
INFO  17:51:27,245 - #8 =
INFO  17:51:27,245 - #48 0
INFO  17:51:27,245 - #17 ;
INFO  17:51:27,245 - #40 while
INFO  17:51:27,246 - #15 (
INFO  17:51:27,246 - #50 i
INFO  17:51:27,246 - #35 <
INFO  17:51:27,246 - #48 10
INFO  17:51:27,246 - #16 )
INFO  17:51:27,246 - #11 {
INFO  17:51:27,246 - #37 if
INFO  17:51:27,246 - #15 (
INFO  17:51:27,246 - #50 i
INFO  17:51:27,246 - #31 ==
INFO  17:51:27,247 - #48 3
INFO  17:51:27,247 - #16 )
INFO  17:51:27,247 - #11 {
INFO  17:51:27,247 - #50 i
INFO  17:51:27,247 - #27 ++
INFO  17:51:27,247 - #17 ;
INFO  17:51:27,247 - #42 continue
INFO  17:51:27,247 - #17 ;
INFO  17:51:27,247 - #12 }
INFO  17:51:27,250 - #37 if
INFO  17:51:27,250 - #15 (
INFO  17:51:27,250 - #50 i
INFO  17:51:27,250 - #31 ==
INFO  17:51:27,251 - #48 4
INFO  17:51:27,251 - #16 )
INFO  17:51:27,251 - #41 break
INFO  17:51:27,251 - #17 ;
INFO  17:51:27,251 - #50 i
INFO  17:51:27,253 - #8 =
INFO  17:51:27,253 - #50 inkrement
INFO  17:51:27,253 - #15 (
INFO  17:51:27,254 - #50 i
INFO  17:51:27,254 - #20 ,
INFO  17:51:27,254 - #48 1
INFO  17:51:27,254 - #16 )
INFO  17:51:27,254 - #17 ;
INFO  17:51:27,254 - #12 }
INFO  17:51:27,254 - #37 if
INFO  17:51:27,254 - #15 (
INFO  17:51:27,254 - #50 i
INFO  17:51:27,254 - #31 ==
INFO  17:51:27,254 - #48 3
INFO  17:51:27,254 - #29 &&
INFO  17:51:27,254 - #50 verify
INFO  17:51:27,254 - #15 (
INFO  17:51:27,254 - #16 )
INFO  17:51:27,255 - #16 )
INFO  17:51:27,255 - #5 print
INFO  17:51:27,255 - #15 (
INFO  17:51:27,255 - #26 -
INFO  17:51:27,255 - #48 4
INFO  17:51:27,255 - #16 )
INFO  17:51:27,256 - #17 ;
INFO  17:51:27,256 - #38 else
INFO  17:51:27,256 - #5 print
INFO  17:51:27,256 - #15 (
INFO  17:51:27,256 - #48 4
INFO  17:51:27,256 - #16 )
INFO  17:51:27,256 - #17 ;
INFO  17:51:27,256 - #6 read
INFO  17:51:27,256 - #15 (
INFO  17:51:27,256 - #50 niz
INFO  17:51:27,256 - #13 [
INFO  17:51:27,257 - #48 0
INFO  17:51:27,257 - #14 ]
INFO  17:51:27,257 - #16 )
INFO  17:51:27,257 - #17 ;
INFO  17:51:27,257 - #6 read
INFO  17:51:27,257 - #15 (
INFO  17:51:27,257 - #50 niz
INFO  17:51:27,257 - #13 [
INFO  17:51:27,258 - #48 1
INFO  17:51:27,258 - #14 ]
INFO  17:51:27,258 - #16 )
INFO  17:51:27,258 - #17 ;
INFO  17:51:27,258 - #6 read
INFO  17:51:27,258 - #15 (
INFO  17:51:27,258 - #50 niz
INFO  17:51:27,258 - #13 [
INFO  17:51:27,258 - #48 2
INFO  17:51:27,258 - #14 ]
INFO  17:51:27,258 - #16 )
INFO  17:51:27,258 - #17 ;
INFO  17:51:27,258 - #5 print
INFO  17:51:27,258 - #15 (
INFO  17:51:27,258 - #50 eol
INFO  17:51:27,258 - #16 )
INFO  17:51:27,259 - #17 ;
INFO  17:51:27,259 - #5 print
INFO  17:51:27,259 - #15 (
INFO  17:51:27,259 - #50 sum
INFO  17:51:27,259 - #15 (
INFO  17:51:27,259 - #50 sum
INFO  17:51:27,259 - #15 (
INFO  17:51:27,259 - #50 niz
INFO  17:51:27,259 - #13 [
INFO  17:51:27,259 - #48 0
INFO  17:51:27,259 - #14 ]
INFO  17:51:27,259 - #20 ,
INFO  17:51:27,259 - #50 niz
INFO  17:51:27,259 - #13 [
INFO  17:51:27,260 - #48 1
INFO  17:51:27,260 - #14 ]
INFO  17:51:27,260 - #16 )
INFO  17:51:27,260 - #20 ,
INFO  17:51:27,260 - #50 niz
INFO  17:51:27,260 - #13 [
INFO  17:51:27,260 - #48 2
INFO  17:51:27,260 - #14 ]
INFO  17:51:27,260 - #16 )
INFO  17:51:27,260 - #16 )
INFO  17:51:27,260 - #17 ;
INFO  17:51:27,260 - #5 print
INFO  17:51:27,260 - #15 (
INFO  17:51:27,261 - #50 eol
INFO  17:51:27,261 - #16 )
INFO  17:51:27,261 - #17 ;
INFO  17:51:27,261 - #5 print
INFO  17:51:27,261 - #15 (
INFO  17:51:27,261 - #50 inkrement
INFO  17:51:27,261 - #15 (
INFO  17:51:27,261 - #50 niz
INFO  17:51:27,261 - #13 [
INFO  17:51:27,261 - #48 2
INFO  17:51:27,261 - #14 ]
INFO  17:51:27,261 - #20 ,
INFO  17:51:27,262 - #48 2
INFO  17:51:27,262 - #16 )
INFO  17:51:27,262 - #16 )
INFO  17:51:27,262 - #17 ;
INFO  17:51:27,262 - #50 a
INFO  17:51:27,262 - #8 =
INFO  17:51:27,262 - #48 3
INFO  17:51:27,262 - #17 ;
INFO  17:51:27,262 - #50 i
INFO  17:51:27,262 - #8 =
INFO  17:51:27,262 - #48 0
INFO  17:51:27,262 - #17 ;
INFO  17:51:27,262 - #40 while
INFO  17:51:27,262 - #15 (
INFO  17:51:27,263 - #50 i
INFO  17:51:27,263 - #35 <
INFO  17:51:27,263 - #48 3
INFO  17:51:27,263 - #16 )
INFO  17:51:27,263 - #11 {
INFO  17:51:27,263 - #50 niz
INFO  17:51:27,263 - #13 [
INFO  17:51:27,263 - #50 i
INFO  17:51:27,263 - #14 ]
INFO  17:51:27,263 - #8 =
INFO  17:51:27,263 - #50 niz
INFO  17:51:27,263 - #13 [
INFO  17:51:27,263 - #50 i
INFO  17:51:27,263 - #14 ]
INFO  17:51:27,263 - #22 *
INFO  17:51:27,263 - #48 2
INFO  17:51:27,264 - #22 *
INFO  17:51:27,264 - #50 a
INFO  17:51:27,264 - #17 ;
INFO  17:51:27,264 - #50 i
INFO  17:51:27,264 - #27 ++
INFO  17:51:27,264 - #17 ;
INFO  17:51:27,264 - #12 }
INFO  17:51:27,264 - #50 niz
INFO  17:51:27,264 - #19 .
INFO  17:51:27,264 - #10 foreach
INFO  17:51:27,264 - #15 (
INFO  17:51:27,264 - #50 curr
INFO  17:51:27,265 - #8 =
ERROR 17:51:27,265 - 
Syntax error on line 92
INFO  17:51:27,265 - #33 >
INFO  17:51:27,265 - #5 print
INFO  17:51:27,265 - #15 (
INFO  17:51:27,267 - #50 curr
INFO  17:51:27,267 - #16 )
INFO  17:51:27,267 - #17 ;
INFO  17:51:27,267 - #16 )
INFO  17:51:27,267 - #17 ;
INFO  17:51:27,267 - #5 print
INFO  17:51:27,267 - #15 (
INFO  17:51:27,268 - #50 eol
ERROR 17:51:27,268 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:51:27,275 - #16 )
INFO  17:51:27,275 - #17 ;
INFO  17:51:27,275 - #50 niz2
INFO  17:51:27,275 - #8 =
INFO  17:51:27,275 - #48 0
INFO  17:51:27,276 - #17 ;
INFO  17:51:27,276 - #50 niz
INFO  17:51:27,276 - #19 .
INFO  17:51:27,276 - #10 foreach
INFO  17:51:27,276 - #15 (
INFO  17:51:27,276 - #50 curr
INFO  17:51:27,276 - #8 =
ERROR 17:51:27,276 - 
Syntax error on line 96
INFO  17:51:27,276 - #33 >
INFO  17:51:27,276 - #11 {
INFO  17:51:27,276 - #50 niz2
INFO  17:51:27,276 - #8 =
INFO  17:51:27,276 - #50 niz2
INFO  17:51:27,276 - #25 +
INFO  17:51:27,277 - #50 curr
INFO  17:51:27,277 - #22 *
INFO  17:51:27,277 - #50 curr
INFO  17:51:27,277 - #17 ;
INFO  17:51:27,277 - #12 }
INFO  17:51:27,277 - #16 )
INFO  17:51:27,277 - #17 ;
INFO  17:51:27,277 - #5 print
INFO  17:51:27,277 - #15 (
INFO  17:51:27,277 - #50 niz2
ERROR 17:51:27,277 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:51:27,277 - #16 )
INFO  17:51:27,277 - #17 ;
INFO  17:51:27,278 - #12 }
INFO  17:51:27,278 - #12 }
INFO  17:51:27,336 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:51:27,337 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:51:27,337 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:51:27,337 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:51:27,337 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:51:27,337 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:51:27,337 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 17:51:56,478 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  17:51:56,481 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:51:56,481 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:51:56,486 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
INFO  17:51:56,487 - Detektovan poziv globalne funkcije programa sum Linija: 29
ERROR 17:51:56,487 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 17:51:56,487 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 17:51:56,487 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:51:56,487 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:51:56,487 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:51:56,488 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
INFO  17:51:56,488 - Detektovan poziv globalne funkcije programa sum Linija: 57
ERROR 17:51:56,488 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 58
ERROR 17:51:56,488 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
ERROR 17:51:56,488 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
INFO  17:51:56,489 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  17:51:56,489 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 17:51:56,489 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 63
ERROR 17:51:56,489 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 64
ERROR 17:51:56,489 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 17:51:56,489 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 69
ERROR 17:51:56,489 - Greska - break moze da se koristi samo unutar while / foreach petlji!
INFO  17:51:56,489 - Detektovan poziv globalne funkcije programa inkrement Linija: 70
ERROR 17:51:56,489 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
ERROR 17:51:56,489 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 73
ERROR 17:51:56,489 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
INFO  17:51:56,489 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:51:56,490 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:51:56,490 - Detektovan poziv globalne funkcije programa inkrement Linija: 83
ERROR 17:51:56,490 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 87
ERROR 17:51:56,491 - Parsiranje NIJE uspesno zavrseno!
