INFO  17:53:19,994 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:53:20,253 - #2 program
INFO  17:53:20,253 - #50 test302
INFO  17:53:20,254 - #7 const
INFO  17:53:20,259 - #50 int
INFO  17:53:20,260 - #50 jedan
INFO  17:53:20,261 - #8 =
INFO  17:53:20,262 - #48 1
INFO  17:53:20,262 - #17 ;
INFO  17:53:20,268 - #50 int
INFO  17:53:20,271 - #50 i
INFO  17:53:20,271 - #17 ;
INFO  17:53:20,271 - #50 bool
INFO  17:53:20,272 - #50 ibool
INFO  17:53:20,272 - #17 ;
INFO  17:53:20,272 - #50 int
INFO  17:53:20,272 - #50 niz2
INFO  17:53:20,272 - #17 ;
INFO  17:53:20,273 - #50 int
INFO  17:53:20,273 - #50 niz
INFO  17:53:20,273 - #13 [
INFO  17:53:20,275 - #14 ]
INFO  17:53:20,275 - #17 ;
INFO  17:53:20,276 - #50 int
INFO  17:53:20,276 - #50 a
INFO  17:53:20,276 - #20 ,
INFO  17:53:20,276 - #50 curr
INFO  17:53:20,276 - #17 ;
INFO  17:53:20,277 - #11 {
INFO  17:53:20,277 - #50 int
INFO  17:53:20,279 - #50 sum
INFO  17:53:20,280 - #15 (
INFO  17:53:20,282 - #50 int
INFO  17:53:20,283 - #50 z
INFO  17:53:20,283 - #20 ,
INFO  17:53:20,283 - #50 int
INFO  17:53:20,283 - #50 d
INFO  17:53:20,283 - #16 )
INFO  17:53:20,284 - #11 {
INFO  17:53:20,287 - #3 return
INFO  17:53:20,289 - #50 z
INFO  17:53:20,289 - #25 +
INFO  17:53:20,290 - #50 d
INFO  17:53:20,297 - #17 ;
INFO  17:53:20,297 - #12 }
INFO  17:53:20,298 - #50 int
INFO  17:53:20,299 - #50 inkrement
INFO  17:53:20,300 - #15 (
INFO  17:53:20,300 - #50 int
INFO  17:53:20,300 - #50 a
INFO  17:53:20,300 - #20 ,
INFO  17:53:20,300 - #50 int
INFO  17:53:20,301 - #50 inc
INFO  17:53:20,301 - #16 )
INFO  17:53:20,306 - #50 int
INFO  17:53:20,306 - #50 pom
INFO  17:53:20,306 - #17 ;
INFO  17:53:20,307 - #11 {
INFO  17:53:20,307 - #37 if
INFO  17:53:20,307 - #15 (
INFO  17:53:20,307 - #50 inc
INFO  17:53:20,308 - #31 ==
INFO  17:53:20,308 - #50 jedan
INFO  17:53:20,313 - #16 )
INFO  17:53:20,314 - #50 pom
INFO  17:53:20,314 - #8 =
INFO  17:53:20,314 - #48 1
INFO  17:53:20,317 - #17 ;
INFO  17:53:20,318 - #38 else
INFO  17:53:20,318 - #37 if
INFO  17:53:20,319 - #15 (
INFO  17:53:20,319 - #50 inc
INFO  17:53:20,319 - #31 ==
INFO  17:53:20,319 - #48 2
INFO  17:53:20,319 - #16 )
INFO  17:53:20,319 - #50 pom
INFO  17:53:20,319 - #8 =
INFO  17:53:20,319 - #50 a
INFO  17:53:20,320 - #17 ;
INFO  17:53:20,320 - #3 return
INFO  17:53:20,320 - #50 sum
INFO  17:53:20,321 - #15 (
INFO  17:53:20,321 - #50 a
INFO  17:53:20,321 - #20 ,
INFO  17:53:20,322 - #50 pom
INFO  17:53:20,324 - #16 )
INFO  17:53:20,324 - #17 ;
INFO  17:53:20,325 - #12 }
INFO  17:53:20,325 - #50 bool
INFO  17:53:20,325 - #50 verify
INFO  17:53:20,325 - #15 (
INFO  17:53:20,325 - #16 )
INFO  17:53:20,325 - #11 {
INFO  17:53:20,325 - #5 print
INFO  17:53:20,326 - #15 (
INFO  17:53:20,326 - #49 v
INFO  17:53:20,326 - #16 )
INFO  17:53:20,327 - #17 ;
INFO  17:53:20,327 - #3 return
INFO  17:53:20,327 - #47 false
INFO  17:53:20,327 - #17 ;
INFO  17:53:20,328 - #12 }
INFO  17:53:20,328 - #4 void
INFO  17:53:20,328 - #50 main
INFO  17:53:20,331 - #15 (
INFO  17:53:20,331 - #16 )
INFO  17:53:20,332 - #11 {
INFO  17:53:20,332 - #37 if
INFO  17:53:20,332 - #15 (
INFO  17:53:20,332 - #48 1
INFO  17:53:20,332 - #32 !=
INFO  17:53:20,332 - #48 1
INFO  17:53:20,334 - #16 )
INFO  17:53:20,334 - #5 print
INFO  17:53:20,334 - #15 (
INFO  17:53:20,335 - #26 -
INFO  17:53:20,335 - #48 6
INFO  17:53:20,335 - #16 )
INFO  17:53:20,335 - #17 ;
INFO  17:53:20,335 - #38 else
INFO  17:53:20,335 - #5 print
INFO  17:53:20,335 - #15 (
INFO  17:53:20,336 - #48 0
INFO  17:53:20,336 - #16 )
INFO  17:53:20,336 - #17 ;
INFO  17:53:20,336 - #50 ibool
INFO  17:53:20,336 - #8 =
INFO  17:53:20,336 - #47 false
INFO  17:53:20,336 - #17 ;
INFO  17:53:20,337 - #50 i
INFO  17:53:20,337 - #8 =
INFO  17:53:20,337 - #48 0
INFO  17:53:20,337 - #17 ;
INFO  17:53:20,337 - #40 while
INFO  17:53:20,337 - #15 (
INFO  17:53:20,337 - #50 i
INFO  17:53:20,337 - #35 <
INFO  17:53:20,338 - #48 5
INFO  17:53:20,340 - #16 )
INFO  17:53:20,341 - #11 {
INFO  17:53:20,341 - #37 if
INFO  17:53:20,341 - #15 (
INFO  17:53:20,341 - #50 i
INFO  17:53:20,341 - #31 ==
INFO  17:53:20,341 - #48 2
INFO  17:53:20,341 - #16 )
INFO  17:53:20,341 - #50 ibool
INFO  17:53:20,341 - #8 =
INFO  17:53:20,341 - #47 true
INFO  17:53:20,341 - #17 ;
INFO  17:53:20,341 - #50 i
INFO  17:53:20,342 - #27 ++
INFO  17:53:20,343 - #17 ;
INFO  17:53:20,344 - #12 }
INFO  17:53:20,344 - #37 if
INFO  17:53:20,345 - #15 (
INFO  17:53:20,345 - #50 ibool
INFO  17:53:20,345 - #16 )
INFO  17:53:20,345 - #37 if
INFO  17:53:20,345 - #15 (
INFO  17:53:20,345 - #50 i
INFO  17:53:20,345 - #31 ==
INFO  17:53:20,346 - #48 5
INFO  17:53:20,346 - #16 )
INFO  17:53:20,346 - #5 print
INFO  17:53:20,346 - #15 (
INFO  17:53:20,346 - #48 1
INFO  17:53:20,346 - #16 )
INFO  17:53:20,346 - #17 ;
INFO  17:53:20,346 - #38 else
INFO  17:53:20,346 - #5 print
INFO  17:53:20,347 - #15 (
INFO  17:53:20,347 - #26 -
INFO  17:53:20,347 - #48 1
INFO  17:53:20,347 - #16 )
INFO  17:53:20,347 - #17 ;
INFO  17:53:20,347 - #50 a
INFO  17:53:20,347 - #8 =
INFO  17:53:20,347 - #48 2
INFO  17:53:20,347 - #17 ;
INFO  17:53:20,347 - #50 niz
INFO  17:53:20,348 - #8 =
INFO  17:53:20,348 - #46 new
INFO  17:53:20,348 - #50 int
INFO  17:53:20,348 - #13 [
INFO  17:53:20,348 - #48 3
INFO  17:53:20,348 - #14 ]
INFO  17:53:20,348 - #17 ;
INFO  17:53:20,348 - #50 niz
INFO  17:53:20,350 - #13 [
INFO  17:53:20,350 - #48 0
INFO  17:53:20,350 - #14 ]
INFO  17:53:20,350 - #8 =
INFO  17:53:20,350 - #48 1
INFO  17:53:20,350 - #22 *
INFO  17:53:20,350 - #50 a
INFO  17:53:20,354 - #17 ;
INFO  17:53:20,355 - #50 niz
INFO  17:53:20,355 - #13 [
INFO  17:53:20,355 - #48 1
INFO  17:53:20,355 - #14 ]
INFO  17:53:20,355 - #8 =
INFO  17:53:20,355 - #48 2
INFO  17:53:20,355 - #22 *
INFO  17:53:20,355 - #50 a
INFO  17:53:20,355 - #17 ;
INFO  17:53:20,356 - #50 niz
INFO  17:53:20,356 - #13 [
INFO  17:53:20,356 - #48 2
INFO  17:53:20,356 - #14 ]
INFO  17:53:20,356 - #8 =
INFO  17:53:20,356 - #50 sum
INFO  17:53:20,357 - #15 (
INFO  17:53:20,357 - #50 niz
INFO  17:53:20,357 - #13 [
INFO  17:53:20,357 - #48 1
INFO  17:53:20,357 - #14 ]
INFO  17:53:20,357 - #20 ,
INFO  17:53:20,357 - #50 niz
INFO  17:53:20,357 - #13 [
INFO  17:53:20,357 - #48 0
INFO  17:53:20,357 - #14 ]
INFO  17:53:20,357 - #16 )
INFO  17:53:20,357 - #22 *
INFO  17:53:20,357 - #50 a
INFO  17:53:20,357 - #25 +
INFO  17:53:20,358 - #48 1
INFO  17:53:20,358 - #17 ;
INFO  17:53:20,358 - #37 if
INFO  17:53:20,358 - #15 (
INFO  17:53:20,358 - #50 verify
INFO  17:53:20,358 - #15 (
INFO  17:53:20,358 - #16 )
INFO  17:53:20,358 - #30 ||
INFO  17:53:20,359 - #50 niz
INFO  17:53:20,359 - #13 [
INFO  17:53:20,359 - #48 2
INFO  17:53:20,359 - #14 ]
INFO  17:53:20,359 - #31 ==
INFO  17:53:20,359 - #48 4
INFO  17:53:20,359 - #16 )
INFO  17:53:20,360 - #5 print
INFO  17:53:20,360 - #15 (
INFO  17:53:20,360 - #50 ord
INFO  17:53:20,360 - #15 (
INFO  17:53:20,360 - #49 A
INFO  17:53:20,360 - #16 )
INFO  17:53:20,360 - #16 )
INFO  17:53:20,360 - #17 ;
INFO  17:53:20,360 - #38 else
INFO  17:53:20,360 - #5 print
INFO  17:53:20,361 - #15 (
INFO  17:53:20,361 - #50 ord
INFO  17:53:20,361 - #15 (
INFO  17:53:20,361 - #49 a
INFO  17:53:20,361 - #16 )
INFO  17:53:20,362 - #16 )
INFO  17:53:20,362 - #17 ;
INFO  17:53:20,362 - #5 print
INFO  17:53:20,362 - #15 (
INFO  17:53:20,362 - #50 eol
INFO  17:53:20,362 - #16 )
INFO  17:53:20,362 - #17 ;
INFO  17:53:20,362 - #50 i
INFO  17:53:20,363 - #8 =
INFO  17:53:20,363 - #48 0
INFO  17:53:20,363 - #17 ;
INFO  17:53:20,363 - #40 while
INFO  17:53:20,363 - #15 (
INFO  17:53:20,363 - #50 i
INFO  17:53:20,363 - #35 <
INFO  17:53:20,363 - #48 10
INFO  17:53:20,363 - #16 )
INFO  17:53:20,364 - #11 {
INFO  17:53:20,364 - #37 if
INFO  17:53:20,364 - #15 (
INFO  17:53:20,364 - #50 i
INFO  17:53:20,364 - #31 ==
INFO  17:53:20,364 - #48 3
INFO  17:53:20,364 - #16 )
INFO  17:53:20,364 - #11 {
INFO  17:53:20,365 - #50 i
INFO  17:53:20,365 - #27 ++
INFO  17:53:20,365 - #17 ;
INFO  17:53:20,365 - #42 continue
INFO  17:53:20,365 - #17 ;
INFO  17:53:20,365 - #12 }
INFO  17:53:20,368 - #37 if
INFO  17:53:20,368 - #15 (
INFO  17:53:20,368 - #50 i
INFO  17:53:20,368 - #31 ==
INFO  17:53:20,368 - #48 4
INFO  17:53:20,369 - #16 )
INFO  17:53:20,369 - #41 break
INFO  17:53:20,369 - #17 ;
INFO  17:53:20,369 - #50 i
INFO  17:53:20,372 - #8 =
INFO  17:53:20,372 - #50 inkrement
INFO  17:53:20,372 - #15 (
INFO  17:53:20,372 - #50 i
INFO  17:53:20,372 - #20 ,
INFO  17:53:20,372 - #48 1
INFO  17:53:20,372 - #16 )
INFO  17:53:20,372 - #17 ;
INFO  17:53:20,373 - #12 }
INFO  17:53:20,373 - #37 if
INFO  17:53:20,373 - #15 (
INFO  17:53:20,373 - #50 i
INFO  17:53:20,373 - #31 ==
INFO  17:53:20,373 - #48 3
INFO  17:53:20,373 - #29 &&
INFO  17:53:20,373 - #50 verify
INFO  17:53:20,374 - #15 (
INFO  17:53:20,374 - #16 )
INFO  17:53:20,374 - #16 )
INFO  17:53:20,374 - #5 print
INFO  17:53:20,374 - #15 (
INFO  17:53:20,374 - #26 -
INFO  17:53:20,374 - #48 4
INFO  17:53:20,374 - #16 )
INFO  17:53:20,375 - #17 ;
INFO  17:53:20,375 - #38 else
INFO  17:53:20,375 - #5 print
INFO  17:53:20,375 - #15 (
INFO  17:53:20,375 - #48 4
INFO  17:53:20,375 - #16 )
INFO  17:53:20,375 - #17 ;
INFO  17:53:20,375 - #6 read
INFO  17:53:20,376 - #15 (
INFO  17:53:20,376 - #50 niz
INFO  17:53:20,376 - #13 [
INFO  17:53:20,376 - #48 0
INFO  17:53:20,376 - #14 ]
INFO  17:53:20,376 - #16 )
INFO  17:53:20,376 - #17 ;
INFO  17:53:20,376 - #6 read
INFO  17:53:20,377 - #15 (
INFO  17:53:20,377 - #50 niz
INFO  17:53:20,377 - #13 [
INFO  17:53:20,377 - #48 1
INFO  17:53:20,377 - #14 ]
INFO  17:53:20,377 - #16 )
INFO  17:53:20,377 - #17 ;
INFO  17:53:20,377 - #6 read
INFO  17:53:20,378 - #15 (
INFO  17:53:20,378 - #50 niz
INFO  17:53:20,378 - #13 [
INFO  17:53:20,378 - #48 2
INFO  17:53:20,378 - #14 ]
INFO  17:53:20,378 - #16 )
INFO  17:53:20,378 - #17 ;
INFO  17:53:20,378 - #5 print
INFO  17:53:20,378 - #15 (
INFO  17:53:20,378 - #50 eol
INFO  17:53:20,378 - #16 )
INFO  17:53:20,378 - #17 ;
INFO  17:53:20,379 - #5 print
INFO  17:53:20,379 - #15 (
INFO  17:53:20,379 - #50 sum
INFO  17:53:20,379 - #15 (
INFO  17:53:20,379 - #50 sum
INFO  17:53:20,379 - #15 (
INFO  17:53:20,379 - #50 niz
INFO  17:53:20,379 - #13 [
INFO  17:53:20,379 - #48 0
INFO  17:53:20,379 - #14 ]
INFO  17:53:20,379 - #20 ,
INFO  17:53:20,379 - #50 niz
INFO  17:53:20,379 - #13 [
INFO  17:53:20,381 - #48 1
INFO  17:53:20,381 - #14 ]
INFO  17:53:20,381 - #16 )
INFO  17:53:20,381 - #20 ,
INFO  17:53:20,381 - #50 niz
INFO  17:53:20,381 - #13 [
INFO  17:53:20,381 - #48 2
INFO  17:53:20,381 - #14 ]
INFO  17:53:20,381 - #16 )
INFO  17:53:20,381 - #16 )
INFO  17:53:20,381 - #17 ;
INFO  17:53:20,381 - #5 print
INFO  17:53:20,382 - #15 (
INFO  17:53:20,382 - #50 eol
INFO  17:53:20,382 - #16 )
INFO  17:53:20,382 - #17 ;
INFO  17:53:20,382 - #5 print
INFO  17:53:20,382 - #15 (
INFO  17:53:20,382 - #50 inkrement
INFO  17:53:20,382 - #15 (
INFO  17:53:20,382 - #50 niz
INFO  17:53:20,382 - #13 [
INFO  17:53:20,382 - #48 2
INFO  17:53:20,382 - #14 ]
INFO  17:53:20,382 - #20 ,
INFO  17:53:20,382 - #48 2
INFO  17:53:20,382 - #16 )
INFO  17:53:20,382 - #16 )
INFO  17:53:20,382 - #17 ;
INFO  17:53:20,382 - #50 a
INFO  17:53:20,382 - #8 =
INFO  17:53:20,382 - #48 3
INFO  17:53:20,383 - #17 ;
INFO  17:53:20,383 - #50 i
INFO  17:53:20,383 - #8 =
INFO  17:53:20,383 - #48 0
INFO  17:53:20,383 - #17 ;
INFO  17:53:20,383 - #40 while
INFO  17:53:20,383 - #15 (
INFO  17:53:20,383 - #50 i
INFO  17:53:20,383 - #35 <
INFO  17:53:20,383 - #48 3
INFO  17:53:20,383 - #16 )
INFO  17:53:20,384 - #11 {
INFO  17:53:20,384 - #50 niz
INFO  17:53:20,384 - #13 [
INFO  17:53:20,384 - #50 i
INFO  17:53:20,384 - #14 ]
INFO  17:53:20,384 - #8 =
INFO  17:53:20,384 - #50 niz
INFO  17:53:20,384 - #13 [
INFO  17:53:20,384 - #50 i
INFO  17:53:20,384 - #14 ]
INFO  17:53:20,384 - #22 *
INFO  17:53:20,384 - #48 2
INFO  17:53:20,385 - #22 *
INFO  17:53:20,385 - #50 a
INFO  17:53:20,385 - #17 ;
INFO  17:53:20,385 - #50 i
INFO  17:53:20,385 - #27 ++
INFO  17:53:20,385 - #17 ;
INFO  17:53:20,385 - #12 }
INFO  17:53:20,385 - #50 niz
INFO  17:53:20,385 - #19 .
INFO  17:53:20,386 - #10 foreach
INFO  17:53:20,386 - #15 (
INFO  17:53:20,386 - #50 curr
INFO  17:53:20,386 - #8 =
ERROR 17:53:20,386 - 
Syntax error on line 92
INFO  17:53:20,386 - #33 >
INFO  17:53:20,386 - #5 print
INFO  17:53:20,386 - #15 (
INFO  17:53:20,388 - #50 curr
INFO  17:53:20,389 - #16 )
INFO  17:53:20,389 - #17 ;
INFO  17:53:20,389 - #16 )
INFO  17:53:20,389 - #17 ;
INFO  17:53:20,389 - #5 print
INFO  17:53:20,389 - #15 (
INFO  17:53:20,389 - #50 eol
ERROR 17:53:20,389 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:53:20,397 - #16 )
INFO  17:53:20,397 - #17 ;
INFO  17:53:20,397 - #50 niz2
INFO  17:53:20,397 - #8 =
INFO  17:53:20,397 - #48 0
INFO  17:53:20,397 - #17 ;
INFO  17:53:20,397 - #50 niz
INFO  17:53:20,397 - #19 .
INFO  17:53:20,397 - #10 foreach
INFO  17:53:20,397 - #15 (
INFO  17:53:20,397 - #50 curr
INFO  17:53:20,397 - #8 =
ERROR 17:53:20,397 - 
Syntax error on line 96
INFO  17:53:20,397 - #33 >
INFO  17:53:20,397 - #11 {
INFO  17:53:20,397 - #50 niz2
INFO  17:53:20,397 - #8 =
INFO  17:53:20,397 - #50 niz2
INFO  17:53:20,397 - #25 +
INFO  17:53:20,397 - #50 curr
INFO  17:53:20,398 - #22 *
INFO  17:53:20,398 - #50 curr
INFO  17:53:20,398 - #17 ;
INFO  17:53:20,398 - #12 }
INFO  17:53:20,398 - #16 )
INFO  17:53:20,398 - #17 ;
INFO  17:53:20,398 - #5 print
INFO  17:53:20,398 - #15 (
INFO  17:53:20,398 - #50 niz2
ERROR 17:53:20,398 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:53:20,398 - #16 )
INFO  17:53:20,398 - #17 ;
INFO  17:53:20,398 - #12 }
INFO  17:53:20,398 - #12 }
INFO  17:53:20,441 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:53:20,442 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:53:20,442 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:53:20,442 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:53:20,442 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:53:20,443 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:53:20,443 - Detektovana deklaracija globalne promenljive curr Linija: 13
INFO  17:53:20,443 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 18:04:39,634 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 18:04:39,642 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
INFO  18:04:39,643 - Detektovan poziv globalne funkcije programa sum Linija: 29
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
INFO  18:04:39,643 - Detektovan poziv globalne funkcije programa sum Linija: 57
ERROR 18:04:39,643 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 58
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
ERROR 18:04:39,643 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
INFO  18:04:39,643 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  18:04:39,643 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 63
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 64
ERROR 18:04:39,644 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 69
ERROR 18:04:39,644 - Greska - break moze da se koristi samo unutar while / foreach petlji!
INFO  18:04:39,644 - Detektovan poziv globalne funkcije programa inkrement Linija: 70
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
ERROR 18:04:39,644 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 73
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
INFO  18:04:39,644 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  18:04:39,644 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  18:04:39,644 - Detektovan poziv globalne funkcije programa inkrement Linija: 83
ERROR 18:04:39,644 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 87
ERROR 18:04:39,646 - Parsiranje NIJE uspesno zavrseno!
