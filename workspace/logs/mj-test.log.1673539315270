INFO  16:55:18,594 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  16:55:18,818 - #2 program
INFO  16:55:18,819 - #50 test302
INFO  16:55:18,819 - #7 const
INFO  16:55:18,823 - #50 int
INFO  16:55:18,823 - #50 jedan
INFO  16:55:18,825 - #8 =
INFO  16:55:18,825 - #48 1
INFO  16:55:18,826 - #17 ;
INFO  16:55:18,830 - #50 int
INFO  16:55:18,833 - #50 i
INFO  16:55:18,833 - #17 ;
INFO  16:55:18,834 - #50 bool
INFO  16:55:18,834 - #50 ibool
INFO  16:55:18,835 - #17 ;
INFO  16:55:18,835 - #50 int
INFO  16:55:18,835 - #50 niz2
INFO  16:55:18,835 - #17 ;
INFO  16:55:18,835 - #50 int
INFO  16:55:18,835 - #50 niz
INFO  16:55:18,835 - #13 [
INFO  16:55:18,837 - #14 ]
INFO  16:55:18,837 - #17 ;
INFO  16:55:18,838 - #50 int
INFO  16:55:18,838 - #50 a
INFO  16:55:18,838 - #20 ,
INFO  16:55:18,838 - #50 curr
INFO  16:55:18,838 - #17 ;
INFO  16:55:18,839 - #11 {
INFO  16:55:18,839 - #50 int
INFO  16:55:18,841 - #50 sum
INFO  16:55:18,841 - #15 (
INFO  16:55:18,843 - #50 int
INFO  16:55:18,843 - #50 z
INFO  16:55:18,844 - #20 ,
INFO  16:55:18,844 - #50 int
INFO  16:55:18,844 - #50 d
INFO  16:55:18,844 - #16 )
INFO  16:55:18,845 - #11 {
INFO  16:55:18,847 - #3 return
INFO  16:55:18,849 - #50 z
INFO  16:55:18,849 - #25 +
INFO  16:55:18,850 - #50 d
INFO  16:55:18,854 - #17 ;
INFO  16:55:18,855 - #12 }
INFO  16:55:18,855 - #50 int
INFO  16:55:18,856 - #50 inkrement
INFO  16:55:18,856 - #15 (
INFO  16:55:18,856 - #50 int
INFO  16:55:18,857 - #50 a
INFO  16:55:18,857 - #20 ,
INFO  16:55:18,857 - #50 int
INFO  16:55:18,857 - #50 inc
INFO  16:55:18,857 - #16 )
INFO  16:55:18,861 - #50 int
INFO  16:55:18,861 - #50 pom
INFO  16:55:18,861 - #17 ;
INFO  16:55:18,861 - #11 {
INFO  16:55:18,862 - #37 if
INFO  16:55:18,862 - #15 (
INFO  16:55:18,862 - #50 inc
INFO  16:55:18,862 - #31 ==
INFO  16:55:18,862 - #50 jedan
INFO  16:55:18,866 - #16 )
INFO  16:55:18,867 - #50 pom
INFO  16:55:18,867 - #8 =
INFO  16:55:18,867 - #48 1
INFO  16:55:18,870 - #17 ;
INFO  16:55:18,871 - #38 else
INFO  16:55:18,871 - #37 if
INFO  16:55:18,871 - #15 (
INFO  16:55:18,871 - #50 inc
INFO  16:55:18,871 - #31 ==
INFO  16:55:18,871 - #48 2
INFO  16:55:18,871 - #16 )
INFO  16:55:18,871 - #50 pom
INFO  16:55:18,871 - #8 =
INFO  16:55:18,871 - #50 a
INFO  16:55:18,871 - #17 ;
INFO  16:55:18,871 - #3 return
INFO  16:55:18,872 - #50 sum
INFO  16:55:18,872 - #15 (
INFO  16:55:18,872 - #50 a
INFO  16:55:18,872 - #20 ,
INFO  16:55:18,873 - #50 pom
INFO  16:55:18,873 - #16 )
INFO  16:55:18,873 - #17 ;
INFO  16:55:18,874 - #12 }
INFO  16:55:18,874 - #50 bool
INFO  16:55:18,874 - #50 verify
INFO  16:55:18,874 - #15 (
INFO  16:55:18,874 - #16 )
INFO  16:55:18,874 - #11 {
INFO  16:55:18,875 - #5 print
INFO  16:55:18,875 - #15 (
INFO  16:55:18,875 - #49 v
INFO  16:55:18,875 - #16 )
INFO  16:55:18,875 - #17 ;
INFO  16:55:18,876 - #3 return
INFO  16:55:18,876 - #47 false
INFO  16:55:18,876 - #17 ;
INFO  16:55:18,876 - #12 }
INFO  16:55:18,877 - #4 void
INFO  16:55:18,877 - #50 main
INFO  16:55:18,879 - #15 (
INFO  16:55:18,880 - #16 )
INFO  16:55:18,880 - #11 {
INFO  16:55:18,880 - #37 if
INFO  16:55:18,880 - #15 (
INFO  16:55:18,880 - #48 1
INFO  16:55:18,880 - #32 !=
INFO  16:55:18,880 - #48 1
INFO  16:55:18,882 - #16 )
INFO  16:55:18,882 - #5 print
INFO  16:55:18,883 - #15 (
INFO  16:55:18,883 - #26 -
INFO  16:55:18,883 - #48 6
INFO  16:55:18,883 - #16 )
INFO  16:55:18,883 - #17 ;
INFO  16:55:18,883 - #38 else
INFO  16:55:18,884 - #5 print
INFO  16:55:18,884 - #15 (
INFO  16:55:18,884 - #48 0
INFO  16:55:18,884 - #16 )
INFO  16:55:18,884 - #17 ;
INFO  16:55:18,884 - #50 ibool
INFO  16:55:18,884 - #8 =
INFO  16:55:18,884 - #47 false
INFO  16:55:18,885 - #17 ;
INFO  16:55:18,885 - #50 i
INFO  16:55:18,885 - #8 =
INFO  16:55:18,885 - #48 0
INFO  16:55:18,885 - #17 ;
INFO  16:55:18,885 - #40 while
INFO  16:55:18,885 - #15 (
INFO  16:55:18,885 - #50 i
INFO  16:55:18,886 - #35 <
INFO  16:55:18,886 - #48 5
INFO  16:55:18,888 - #16 )
INFO  16:55:18,888 - #11 {
INFO  16:55:18,888 - #37 if
INFO  16:55:18,888 - #15 (
INFO  16:55:18,888 - #50 i
INFO  16:55:18,889 - #31 ==
INFO  16:55:18,889 - #48 2
INFO  16:55:18,889 - #16 )
INFO  16:55:18,889 - #50 ibool
INFO  16:55:18,889 - #8 =
INFO  16:55:18,889 - #47 true
INFO  16:55:18,889 - #17 ;
INFO  16:55:18,889 - #50 i
INFO  16:55:18,890 - #27 ++
INFO  16:55:18,890 - #17 ;
INFO  16:55:18,892 - #12 }
INFO  16:55:18,892 - #37 if
INFO  16:55:18,893 - #15 (
INFO  16:55:18,893 - #50 ibool
INFO  16:55:18,893 - #16 )
INFO  16:55:18,893 - #37 if
INFO  16:55:18,893 - #15 (
INFO  16:55:18,894 - #50 i
INFO  16:55:18,894 - #31 ==
INFO  16:55:18,894 - #48 5
INFO  16:55:18,894 - #16 )
INFO  16:55:18,894 - #5 print
INFO  16:55:18,894 - #15 (
INFO  16:55:18,894 - #48 1
INFO  16:55:18,894 - #16 )
INFO  16:55:18,895 - #17 ;
INFO  16:55:18,895 - #38 else
INFO  16:55:18,895 - #5 print
INFO  16:55:18,895 - #15 (
INFO  16:55:18,895 - #26 -
INFO  16:55:18,895 - #48 1
INFO  16:55:18,895 - #16 )
INFO  16:55:18,895 - #17 ;
INFO  16:55:18,895 - #50 a
INFO  16:55:18,896 - #8 =
INFO  16:55:18,896 - #48 2
INFO  16:55:18,896 - #17 ;
INFO  16:55:18,896 - #50 niz
INFO  16:55:18,896 - #8 =
INFO  16:55:18,896 - #46 new
INFO  16:55:18,896 - #50 int
INFO  16:55:18,896 - #13 [
INFO  16:55:18,896 - #48 3
INFO  16:55:18,897 - #14 ]
INFO  16:55:18,897 - #17 ;
INFO  16:55:18,897 - #50 niz
INFO  16:55:18,897 - #13 [
INFO  16:55:18,897 - #48 0
INFO  16:55:18,897 - #14 ]
INFO  16:55:18,898 - #8 =
INFO  16:55:18,898 - #48 1
INFO  16:55:18,898 - #22 *
INFO  16:55:18,898 - #50 a
INFO  16:55:18,903 - #17 ;
INFO  16:55:18,904 - #50 niz
INFO  16:55:18,904 - #13 [
INFO  16:55:18,904 - #48 1
INFO  16:55:18,904 - #14 ]
INFO  16:55:18,904 - #8 =
INFO  16:55:18,904 - #48 2
INFO  16:55:18,905 - #22 *
INFO  16:55:18,905 - #50 a
INFO  16:55:18,905 - #17 ;
INFO  16:55:18,905 - #50 niz
INFO  16:55:18,905 - #13 [
INFO  16:55:18,905 - #48 2
INFO  16:55:18,905 - #14 ]
INFO  16:55:18,905 - #8 =
INFO  16:55:18,905 - #50 sum
INFO  16:55:18,905 - #15 (
INFO  16:55:18,906 - #50 niz
INFO  16:55:18,906 - #13 [
INFO  16:55:18,906 - #48 1
INFO  16:55:18,906 - #14 ]
INFO  16:55:18,906 - #20 ,
INFO  16:55:18,906 - #50 niz
INFO  16:55:18,906 - #13 [
INFO  16:55:18,906 - #48 0
INFO  16:55:18,906 - #14 ]
INFO  16:55:18,906 - #16 )
INFO  16:55:18,906 - #22 *
INFO  16:55:18,907 - #50 a
INFO  16:55:18,907 - #25 +
INFO  16:55:18,907 - #48 1
INFO  16:55:18,907 - #17 ;
INFO  16:55:18,907 - #37 if
INFO  16:55:18,907 - #15 (
INFO  16:55:18,907 - #50 verify
INFO  16:55:18,907 - #15 (
INFO  16:55:18,908 - #16 )
INFO  16:55:18,908 - #30 ||
INFO  16:55:18,908 - #50 niz
INFO  16:55:18,908 - #13 [
INFO  16:55:18,908 - #48 2
INFO  16:55:18,908 - #14 ]
INFO  16:55:18,908 - #31 ==
INFO  16:55:18,909 - #48 4
INFO  16:55:18,909 - #16 )
INFO  16:55:18,909 - #5 print
INFO  16:55:18,909 - #15 (
INFO  16:55:18,909 - #50 ord
INFO  16:55:18,909 - #15 (
INFO  16:55:18,909 - #49 A
INFO  16:55:18,909 - #16 )
INFO  16:55:18,910 - #16 )
INFO  16:55:18,910 - #17 ;
INFO  16:55:18,910 - #38 else
INFO  16:55:18,910 - #5 print
INFO  16:55:18,910 - #15 (
INFO  16:55:18,910 - #50 ord
INFO  16:55:18,910 - #15 (
INFO  16:55:18,910 - #49 a
INFO  16:55:18,910 - #16 )
INFO  16:55:18,911 - #16 )
INFO  16:55:18,911 - #17 ;
INFO  16:55:18,911 - #5 print
INFO  16:55:18,911 - #15 (
INFO  16:55:18,911 - #50 eol
INFO  16:55:18,911 - #16 )
INFO  16:55:18,912 - #17 ;
INFO  16:55:18,912 - #50 i
INFO  16:55:18,912 - #8 =
INFO  16:55:18,912 - #48 0
INFO  16:55:18,912 - #17 ;
INFO  16:55:18,912 - #40 while
INFO  16:55:18,912 - #15 (
INFO  16:55:18,912 - #50 i
INFO  16:55:18,912 - #35 <
INFO  16:55:18,912 - #48 10
INFO  16:55:18,912 - #16 )
INFO  16:55:18,912 - #11 {
INFO  16:55:18,912 - #37 if
INFO  16:55:18,913 - #15 (
INFO  16:55:18,913 - #50 i
INFO  16:55:18,913 - #31 ==
INFO  16:55:18,913 - #48 3
INFO  16:55:18,913 - #16 )
INFO  16:55:18,913 - #11 {
INFO  16:55:18,913 - #50 i
INFO  16:55:18,913 - #27 ++
INFO  16:55:18,913 - #17 ;
INFO  16:55:18,913 - #42 continue
INFO  16:55:18,914 - #17 ;
INFO  16:55:18,914 - #12 }
INFO  16:55:18,917 - #37 if
INFO  16:55:18,917 - #15 (
INFO  16:55:18,917 - #50 i
INFO  16:55:18,917 - #31 ==
INFO  16:55:18,917 - #48 4
INFO  16:55:18,917 - #16 )
INFO  16:55:18,917 - #41 break
INFO  16:55:18,917 - #17 ;
INFO  16:55:18,917 - #50 i
INFO  16:55:18,920 - #8 =
INFO  16:55:18,921 - #50 inkrement
INFO  16:55:18,921 - #15 (
INFO  16:55:18,921 - #50 i
INFO  16:55:18,921 - #20 ,
INFO  16:55:18,921 - #48 1
INFO  16:55:18,921 - #16 )
INFO  16:55:18,921 - #17 ;
INFO  16:55:18,921 - #12 }
INFO  16:55:18,921 - #37 if
INFO  16:55:18,921 - #15 (
INFO  16:55:18,921 - #50 i
INFO  16:55:18,921 - #31 ==
INFO  16:55:18,921 - #48 3
INFO  16:55:18,921 - #29 &&
INFO  16:55:18,921 - #50 verify
INFO  16:55:18,921 - #15 (
INFO  16:55:18,921 - #16 )
INFO  16:55:18,921 - #16 )
INFO  16:55:18,922 - #5 print
INFO  16:55:18,922 - #15 (
INFO  16:55:18,922 - #26 -
INFO  16:55:18,922 - #48 4
INFO  16:55:18,922 - #16 )
INFO  16:55:18,923 - #17 ;
INFO  16:55:18,923 - #38 else
INFO  16:55:18,923 - #5 print
INFO  16:55:18,923 - #15 (
INFO  16:55:18,923 - #48 4
INFO  16:55:18,923 - #16 )
INFO  16:55:18,923 - #17 ;
INFO  16:55:18,923 - #6 read
INFO  16:55:18,923 - #15 (
INFO  16:55:18,923 - #50 niz
INFO  16:55:18,923 - #13 [
INFO  16:55:18,924 - #48 0
INFO  16:55:18,924 - #14 ]
INFO  16:55:18,924 - #16 )
INFO  16:55:18,924 - #17 ;
INFO  16:55:18,924 - #6 read
INFO  16:55:18,924 - #15 (
INFO  16:55:18,924 - #50 niz
INFO  16:55:18,924 - #13 [
INFO  16:55:18,925 - #48 1
INFO  16:55:18,925 - #14 ]
INFO  16:55:18,925 - #16 )
INFO  16:55:18,925 - #17 ;
INFO  16:55:18,925 - #6 read
INFO  16:55:18,925 - #15 (
INFO  16:55:18,925 - #50 niz
INFO  16:55:18,925 - #13 [
INFO  16:55:18,925 - #48 2
INFO  16:55:18,925 - #14 ]
INFO  16:55:18,925 - #16 )
INFO  16:55:18,925 - #17 ;
INFO  16:55:18,926 - #5 print
INFO  16:55:18,926 - #15 (
INFO  16:55:18,926 - #50 eol
INFO  16:55:18,926 - #16 )
INFO  16:55:18,926 - #17 ;
INFO  16:55:18,926 - #5 print
INFO  16:55:18,926 - #15 (
INFO  16:55:18,926 - #50 sum
INFO  16:55:18,926 - #15 (
INFO  16:55:18,926 - #50 sum
INFO  16:55:18,926 - #15 (
INFO  16:55:18,926 - #50 niz
INFO  16:55:18,926 - #13 [
INFO  16:55:18,926 - #48 0
INFO  16:55:18,927 - #14 ]
INFO  16:55:18,927 - #20 ,
INFO  16:55:18,927 - #50 niz
INFO  16:55:18,927 - #13 [
INFO  16:55:18,927 - #48 1
INFO  16:55:18,927 - #14 ]
INFO  16:55:18,927 - #16 )
INFO  16:55:18,927 - #20 ,
INFO  16:55:18,927 - #50 niz
INFO  16:55:18,927 - #13 [
INFO  16:55:18,927 - #48 2
INFO  16:55:18,927 - #14 ]
INFO  16:55:18,927 - #16 )
INFO  16:55:18,928 - #16 )
INFO  16:55:18,928 - #17 ;
INFO  16:55:18,928 - #5 print
INFO  16:55:18,928 - #15 (
INFO  16:55:18,928 - #50 eol
INFO  16:55:18,928 - #16 )
INFO  16:55:18,928 - #17 ;
INFO  16:55:18,928 - #5 print
INFO  16:55:18,928 - #15 (
INFO  16:55:18,928 - #50 inkrement
INFO  16:55:18,928 - #15 (
INFO  16:55:18,928 - #50 niz
INFO  16:55:18,928 - #13 [
INFO  16:55:18,928 - #48 2
INFO  16:55:18,929 - #14 ]
INFO  16:55:18,929 - #20 ,
INFO  16:55:18,929 - #48 2
INFO  16:55:18,929 - #16 )
INFO  16:55:18,929 - #16 )
INFO  16:55:18,929 - #17 ;
INFO  16:55:18,929 - #50 a
INFO  16:55:18,929 - #8 =
INFO  16:55:18,929 - #48 3
INFO  16:55:18,929 - #17 ;
INFO  16:55:18,929 - #50 i
INFO  16:55:18,929 - #8 =
INFO  16:55:18,930 - #48 0
INFO  16:55:18,930 - #17 ;
INFO  16:55:18,930 - #40 while
INFO  16:55:18,930 - #15 (
INFO  16:55:18,930 - #50 i
INFO  16:55:18,930 - #35 <
INFO  16:55:18,930 - #48 3
INFO  16:55:18,930 - #16 )
INFO  16:55:18,930 - #11 {
INFO  16:55:18,930 - #50 niz
INFO  16:55:18,930 - #13 [
INFO  16:55:18,930 - #50 i
INFO  16:55:18,930 - #14 ]
INFO  16:55:18,930 - #8 =
INFO  16:55:18,930 - #50 niz
INFO  16:55:18,931 - #13 [
INFO  16:55:18,931 - #50 i
INFO  16:55:18,931 - #14 ]
INFO  16:55:18,931 - #22 *
INFO  16:55:18,931 - #48 2
INFO  16:55:18,932 - #22 *
INFO  16:55:18,932 - #50 a
INFO  16:55:18,932 - #17 ;
INFO  16:55:18,932 - #50 i
INFO  16:55:18,932 - #27 ++
INFO  16:55:18,932 - #17 ;
INFO  16:55:18,932 - #12 }
INFO  16:55:18,932 - #50 niz
INFO  16:55:18,932 - #19 .
INFO  16:55:18,932 - #10 foreach
INFO  16:55:18,932 - #15 (
INFO  16:55:18,932 - #50 curr
INFO  16:55:18,932 - #8 =
ERROR 16:55:18,932 - 
Syntax error on line 92
INFO  16:55:18,932 - #33 >
INFO  16:55:18,932 - #5 print
INFO  16:55:18,932 - #15 (
INFO  16:55:18,933 - #50 curr
INFO  16:55:18,934 - #16 )
INFO  16:55:18,934 - #17 ;
INFO  16:55:18,934 - #16 )
INFO  16:55:18,934 - #17 ;
INFO  16:55:18,934 - #5 print
INFO  16:55:18,934 - #15 (
INFO  16:55:18,934 - #50 eol
ERROR 16:55:18,934 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  16:55:18,941 - #16 )
INFO  16:55:18,941 - #17 ;
INFO  16:55:18,941 - #50 niz2
INFO  16:55:18,941 - #8 =
INFO  16:55:18,941 - #48 0
INFO  16:55:18,941 - #17 ;
INFO  16:55:18,941 - #50 niz
INFO  16:55:18,941 - #19 .
INFO  16:55:18,942 - #10 foreach
INFO  16:55:18,942 - #15 (
INFO  16:55:18,942 - #50 curr
INFO  16:55:18,942 - #8 =
ERROR 16:55:18,942 - 
Syntax error on line 96
INFO  16:55:18,942 - #33 >
INFO  16:55:18,942 - #11 {
INFO  16:55:18,942 - #50 niz2
INFO  16:55:18,942 - #8 =
INFO  16:55:18,942 - #50 niz2
INFO  16:55:18,942 - #25 +
INFO  16:55:18,942 - #50 curr
INFO  16:55:18,942 - #22 *
INFO  16:55:18,942 - #50 curr
INFO  16:55:18,943 - #17 ;
INFO  16:55:18,943 - #12 }
INFO  16:55:18,943 - #16 )
INFO  16:55:18,943 - #17 ;
INFO  16:55:18,943 - #5 print
INFO  16:55:18,943 - #15 (
INFO  16:55:18,943 - #50 niz2
ERROR 16:55:18,943 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  16:55:18,943 - #16 )
INFO  16:55:18,943 - #17 ;
INFO  16:55:18,943 - #12 }
INFO  16:55:18,943 - #12 }
INFO  16:55:18,977 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  16:55:18,978 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  16:55:18,978 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  16:55:18,978 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  16:55:18,978 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  16:55:18,978 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  16:55:18,978 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 16:55:18,979 - Greska - korisceno ime nikada nije deklarisano! Linija: 19
ERROR 16:55:18,979 - Greska - jedini tip dozvoljen kod operacije sabiranja je int! Linija: 19
ERROR 16:55:18,979 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  16:55:18,979 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 16:55:18,979 - Greska - korisceno ime nikada nije deklarisano! Linija: 26
ERROR 16:55:18,979 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 16:55:18,983 - Greska - korisceno ime nikada nije deklarisano! Linija: 27
ERROR 16:55:18,983 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
ERROR 16:55:18,984 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 29
ERROR 16:55:18,984 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 16:55:18,985 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 16:55:18,985 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 16:55:18,985 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 16:55:18,985 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 16:55:18,985 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
ERROR 16:55:18,985 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 57
