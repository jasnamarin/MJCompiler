INFO  17:33:59,520 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:33:59,735 - #2 program
INFO  17:33:59,735 - #50 test302
INFO  17:33:59,736 - #7 const
INFO  17:33:59,741 - #50 int
INFO  17:33:59,741 - #50 jedan
INFO  17:33:59,743 - #8 =
INFO  17:33:59,744 - #48 1
INFO  17:33:59,744 - #17 ;
INFO  17:33:59,749 - #50 int
INFO  17:33:59,751 - #50 i
INFO  17:33:59,751 - #17 ;
INFO  17:33:59,752 - #50 bool
INFO  17:33:59,752 - #50 ibool
INFO  17:33:59,753 - #17 ;
INFO  17:33:59,753 - #50 int
INFO  17:33:59,753 - #50 niz2
INFO  17:33:59,753 - #17 ;
INFO  17:33:59,753 - #50 int
INFO  17:33:59,753 - #50 niz
INFO  17:33:59,754 - #13 [
INFO  17:33:59,756 - #14 ]
INFO  17:33:59,756 - #17 ;
INFO  17:33:59,756 - #50 int
INFO  17:33:59,757 - #50 a
INFO  17:33:59,757 - #20 ,
INFO  17:33:59,757 - #50 curr
INFO  17:33:59,757 - #17 ;
INFO  17:33:59,757 - #11 {
INFO  17:33:59,758 - #50 int
INFO  17:33:59,760 - #50 sum
INFO  17:33:59,761 - #15 (
INFO  17:33:59,762 - #50 int
INFO  17:33:59,763 - #50 z
INFO  17:33:59,763 - #20 ,
INFO  17:33:59,763 - #50 int
INFO  17:33:59,764 - #50 d
INFO  17:33:59,764 - #16 )
INFO  17:33:59,764 - #11 {
INFO  17:33:59,767 - #3 return
INFO  17:33:59,769 - #50 z
INFO  17:33:59,770 - #25 +
INFO  17:33:59,770 - #50 d
INFO  17:33:59,775 - #17 ;
INFO  17:33:59,776 - #12 }
INFO  17:33:59,776 - #50 int
INFO  17:33:59,777 - #50 inkrement
INFO  17:33:59,777 - #15 (
INFO  17:33:59,778 - #50 int
INFO  17:33:59,778 - #50 a
INFO  17:33:59,778 - #20 ,
INFO  17:33:59,778 - #50 int
INFO  17:33:59,778 - #50 inc
INFO  17:33:59,778 - #16 )
INFO  17:33:59,784 - #50 int
INFO  17:33:59,784 - #50 pom
INFO  17:33:59,784 - #17 ;
INFO  17:33:59,784 - #11 {
INFO  17:33:59,785 - #37 if
INFO  17:33:59,785 - #15 (
INFO  17:33:59,785 - #50 inc
INFO  17:33:59,785 - #31 ==
INFO  17:33:59,785 - #50 jedan
INFO  17:33:59,791 - #16 )
INFO  17:33:59,792 - #50 pom
INFO  17:33:59,793 - #8 =
INFO  17:33:59,793 - #48 1
INFO  17:33:59,795 - #17 ;
INFO  17:33:59,797 - #38 else
INFO  17:33:59,797 - #37 if
INFO  17:33:59,797 - #15 (
INFO  17:33:59,797 - #50 inc
INFO  17:33:59,797 - #31 ==
INFO  17:33:59,798 - #48 2
INFO  17:33:59,798 - #16 )
INFO  17:33:59,798 - #50 pom
INFO  17:33:59,798 - #8 =
INFO  17:33:59,798 - #50 a
INFO  17:33:59,798 - #17 ;
INFO  17:33:59,799 - #3 return
INFO  17:33:59,800 - #50 sum
INFO  17:33:59,800 - #15 (
INFO  17:33:59,801 - #50 a
INFO  17:33:59,801 - #20 ,
INFO  17:33:59,801 - #50 pom
INFO  17:33:59,802 - #16 )
INFO  17:33:59,802 - #17 ;
INFO  17:33:59,804 - #12 }
INFO  17:33:59,804 - #50 bool
INFO  17:33:59,804 - #50 verify
INFO  17:33:59,804 - #15 (
INFO  17:33:59,804 - #16 )
INFO  17:33:59,804 - #11 {
INFO  17:33:59,804 - #5 print
INFO  17:33:59,805 - #15 (
INFO  17:33:59,805 - #49 v
INFO  17:33:59,805 - #16 )
INFO  17:33:59,806 - #17 ;
INFO  17:33:59,806 - #3 return
INFO  17:33:59,807 - #47 false
INFO  17:33:59,807 - #17 ;
INFO  17:33:59,807 - #12 }
INFO  17:33:59,807 - #4 void
INFO  17:33:59,808 - #50 main
INFO  17:33:59,810 - #15 (
INFO  17:33:59,811 - #16 )
INFO  17:33:59,811 - #11 {
INFO  17:33:59,811 - #37 if
INFO  17:33:59,811 - #15 (
INFO  17:33:59,811 - #48 1
INFO  17:33:59,811 - #32 !=
INFO  17:33:59,811 - #48 1
INFO  17:33:59,814 - #16 )
INFO  17:33:59,814 - #5 print
INFO  17:33:59,815 - #15 (
INFO  17:33:59,815 - #26 -
INFO  17:33:59,815 - #48 6
INFO  17:33:59,815 - #16 )
INFO  17:33:59,815 - #17 ;
INFO  17:33:59,816 - #38 else
INFO  17:33:59,816 - #5 print
INFO  17:33:59,816 - #15 (
INFO  17:33:59,816 - #48 0
INFO  17:33:59,816 - #16 )
INFO  17:33:59,816 - #17 ;
INFO  17:33:59,816 - #50 ibool
INFO  17:33:59,816 - #8 =
INFO  17:33:59,817 - #47 false
INFO  17:33:59,817 - #17 ;
INFO  17:33:59,817 - #50 i
INFO  17:33:59,817 - #8 =
INFO  17:33:59,817 - #48 0
INFO  17:33:59,817 - #17 ;
INFO  17:33:59,817 - #40 while
INFO  17:33:59,817 - #15 (
INFO  17:33:59,818 - #50 i
INFO  17:33:59,818 - #35 <
INFO  17:33:59,818 - #48 5
INFO  17:33:59,820 - #16 )
INFO  17:33:59,821 - #11 {
INFO  17:33:59,821 - #37 if
INFO  17:33:59,821 - #15 (
INFO  17:33:59,821 - #50 i
INFO  17:33:59,821 - #31 ==
INFO  17:33:59,821 - #48 2
INFO  17:33:59,821 - #16 )
INFO  17:33:59,821 - #50 ibool
INFO  17:33:59,821 - #8 =
INFO  17:33:59,821 - #47 true
INFO  17:33:59,822 - #17 ;
INFO  17:33:59,822 - #50 i
INFO  17:33:59,822 - #27 ++
INFO  17:33:59,822 - #17 ;
INFO  17:33:59,824 - #12 }
INFO  17:33:59,825 - #37 if
INFO  17:33:59,825 - #15 (
INFO  17:33:59,825 - #50 ibool
INFO  17:33:59,825 - #16 )
INFO  17:33:59,826 - #37 if
INFO  17:33:59,826 - #15 (
INFO  17:33:59,826 - #50 i
INFO  17:33:59,826 - #31 ==
INFO  17:33:59,826 - #48 5
INFO  17:33:59,826 - #16 )
INFO  17:33:59,826 - #5 print
INFO  17:33:59,827 - #15 (
INFO  17:33:59,827 - #48 1
INFO  17:33:59,827 - #16 )
INFO  17:33:59,827 - #17 ;
INFO  17:33:59,827 - #38 else
INFO  17:33:59,827 - #5 print
INFO  17:33:59,828 - #15 (
INFO  17:33:59,828 - #26 -
INFO  17:33:59,828 - #48 1
INFO  17:33:59,828 - #16 )
INFO  17:33:59,828 - #17 ;
INFO  17:33:59,828 - #50 a
INFO  17:33:59,828 - #8 =
INFO  17:33:59,828 - #48 2
INFO  17:33:59,828 - #17 ;
INFO  17:33:59,828 - #50 niz
INFO  17:33:59,829 - #8 =
INFO  17:33:59,829 - #46 new
INFO  17:33:59,829 - #50 int
INFO  17:33:59,829 - #13 [
INFO  17:33:59,829 - #48 3
INFO  17:33:59,829 - #14 ]
INFO  17:33:59,829 - #17 ;
INFO  17:33:59,830 - #50 niz
INFO  17:33:59,830 - #13 [
INFO  17:33:59,830 - #48 0
INFO  17:33:59,830 - #14 ]
INFO  17:33:59,831 - #8 =
INFO  17:33:59,831 - #48 1
INFO  17:33:59,832 - #22 *
INFO  17:33:59,832 - #50 a
INFO  17:33:59,837 - #17 ;
INFO  17:33:59,838 - #50 niz
INFO  17:33:59,838 - #13 [
INFO  17:33:59,838 - #48 1
INFO  17:33:59,839 - #14 ]
INFO  17:33:59,839 - #8 =
INFO  17:33:59,839 - #48 2
INFO  17:33:59,839 - #22 *
INFO  17:33:59,839 - #50 a
INFO  17:33:59,839 - #17 ;
INFO  17:33:59,839 - #50 niz
INFO  17:33:59,839 - #13 [
INFO  17:33:59,840 - #48 2
INFO  17:33:59,840 - #14 ]
INFO  17:33:59,840 - #8 =
INFO  17:33:59,840 - #50 sum
INFO  17:33:59,840 - #15 (
INFO  17:33:59,840 - #50 niz
INFO  17:33:59,840 - #13 [
INFO  17:33:59,840 - #48 1
INFO  17:33:59,840 - #14 ]
INFO  17:33:59,840 - #20 ,
INFO  17:33:59,841 - #50 niz
INFO  17:33:59,841 - #13 [
INFO  17:33:59,841 - #48 0
INFO  17:33:59,841 - #14 ]
INFO  17:33:59,841 - #16 )
INFO  17:33:59,841 - #22 *
INFO  17:33:59,841 - #50 a
INFO  17:33:59,842 - #25 +
INFO  17:33:59,842 - #48 1
INFO  17:33:59,842 - #17 ;
INFO  17:33:59,842 - #37 if
INFO  17:33:59,842 - #15 (
INFO  17:33:59,842 - #50 verify
INFO  17:33:59,842 - #15 (
INFO  17:33:59,842 - #16 )
INFO  17:33:59,842 - #30 ||
INFO  17:33:59,843 - #50 niz
INFO  17:33:59,843 - #13 [
INFO  17:33:59,843 - #48 2
INFO  17:33:59,843 - #14 ]
INFO  17:33:59,843 - #31 ==
INFO  17:33:59,843 - #48 4
INFO  17:33:59,843 - #16 )
INFO  17:33:59,844 - #5 print
INFO  17:33:59,844 - #15 (
INFO  17:33:59,844 - #50 ord
INFO  17:33:59,844 - #15 (
INFO  17:33:59,844 - #49 A
INFO  17:33:59,844 - #16 )
INFO  17:33:59,844 - #16 )
INFO  17:33:59,845 - #17 ;
INFO  17:33:59,845 - #38 else
INFO  17:33:59,845 - #5 print
INFO  17:33:59,845 - #15 (
INFO  17:33:59,845 - #50 ord
INFO  17:33:59,845 - #15 (
INFO  17:33:59,845 - #49 a
INFO  17:33:59,845 - #16 )
INFO  17:33:59,846 - #16 )
INFO  17:33:59,846 - #17 ;
INFO  17:33:59,846 - #5 print
INFO  17:33:59,846 - #15 (
INFO  17:33:59,846 - #50 eol
INFO  17:33:59,847 - #16 )
INFO  17:33:59,847 - #17 ;
INFO  17:33:59,847 - #50 i
INFO  17:33:59,848 - #8 =
INFO  17:33:59,848 - #48 0
INFO  17:33:59,848 - #17 ;
INFO  17:33:59,848 - #40 while
INFO  17:33:59,848 - #15 (
INFO  17:33:59,848 - #50 i
INFO  17:33:59,848 - #35 <
INFO  17:33:59,848 - #48 10
INFO  17:33:59,848 - #16 )
INFO  17:33:59,848 - #11 {
INFO  17:33:59,848 - #37 if
INFO  17:33:59,848 - #15 (
INFO  17:33:59,848 - #50 i
INFO  17:33:59,848 - #31 ==
INFO  17:33:59,849 - #48 3
INFO  17:33:59,849 - #16 )
INFO  17:33:59,849 - #11 {
INFO  17:33:59,849 - #50 i
INFO  17:33:59,849 - #27 ++
INFO  17:33:59,849 - #17 ;
INFO  17:33:59,849 - #42 continue
INFO  17:33:59,850 - #17 ;
INFO  17:33:59,850 - #12 }
INFO  17:33:59,853 - #37 if
INFO  17:33:59,853 - #15 (
INFO  17:33:59,853 - #50 i
INFO  17:33:59,853 - #31 ==
INFO  17:33:59,853 - #48 4
INFO  17:33:59,853 - #16 )
INFO  17:33:59,854 - #41 break
INFO  17:33:59,854 - #17 ;
INFO  17:33:59,854 - #50 i
INFO  17:33:59,857 - #8 =
INFO  17:33:59,857 - #50 inkrement
INFO  17:33:59,857 - #15 (
INFO  17:33:59,857 - #50 i
INFO  17:33:59,857 - #20 ,
INFO  17:33:59,857 - #48 1
INFO  17:33:59,857 - #16 )
INFO  17:33:59,857 - #17 ;
INFO  17:33:59,858 - #12 }
INFO  17:33:59,858 - #37 if
INFO  17:33:59,858 - #15 (
INFO  17:33:59,858 - #50 i
INFO  17:33:59,858 - #31 ==
INFO  17:33:59,858 - #48 3
INFO  17:33:59,858 - #29 &&
INFO  17:33:59,858 - #50 verify
INFO  17:33:59,858 - #15 (
INFO  17:33:59,859 - #16 )
INFO  17:33:59,859 - #16 )
INFO  17:33:59,859 - #5 print
INFO  17:33:59,859 - #15 (
INFO  17:33:59,859 - #26 -
INFO  17:33:59,859 - #48 4
INFO  17:33:59,859 - #16 )
INFO  17:33:59,860 - #17 ;
INFO  17:33:59,860 - #38 else
INFO  17:33:59,860 - #5 print
INFO  17:33:59,860 - #15 (
INFO  17:33:59,860 - #48 4
INFO  17:33:59,860 - #16 )
INFO  17:33:59,860 - #17 ;
INFO  17:33:59,861 - #6 read
INFO  17:33:59,861 - #15 (
INFO  17:33:59,861 - #50 niz
INFO  17:33:59,861 - #13 [
INFO  17:33:59,862 - #48 0
INFO  17:33:59,862 - #14 ]
INFO  17:33:59,862 - #16 )
INFO  17:33:59,862 - #17 ;
INFO  17:33:59,862 - #6 read
INFO  17:33:59,862 - #15 (
INFO  17:33:59,862 - #50 niz
INFO  17:33:59,862 - #13 [
INFO  17:33:59,863 - #48 1
INFO  17:33:59,863 - #14 ]
INFO  17:33:59,863 - #16 )
INFO  17:33:59,863 - #17 ;
INFO  17:33:59,863 - #6 read
INFO  17:33:59,863 - #15 (
INFO  17:33:59,863 - #50 niz
INFO  17:33:59,863 - #13 [
INFO  17:33:59,864 - #48 2
INFO  17:33:59,864 - #14 ]
INFO  17:33:59,864 - #16 )
INFO  17:33:59,864 - #17 ;
INFO  17:33:59,864 - #5 print
INFO  17:33:59,864 - #15 (
INFO  17:33:59,864 - #50 eol
INFO  17:33:59,865 - #16 )
INFO  17:33:59,865 - #17 ;
INFO  17:33:59,865 - #5 print
INFO  17:33:59,865 - #15 (
INFO  17:33:59,865 - #50 sum
INFO  17:33:59,865 - #15 (
INFO  17:33:59,865 - #50 sum
INFO  17:33:59,865 - #15 (
INFO  17:33:59,865 - #50 niz
INFO  17:33:59,865 - #13 [
INFO  17:33:59,866 - #48 0
INFO  17:33:59,866 - #14 ]
INFO  17:33:59,866 - #20 ,
INFO  17:33:59,866 - #50 niz
INFO  17:33:59,866 - #13 [
INFO  17:33:59,866 - #48 1
INFO  17:33:59,866 - #14 ]
INFO  17:33:59,866 - #16 )
INFO  17:33:59,866 - #20 ,
INFO  17:33:59,866 - #50 niz
INFO  17:33:59,866 - #13 [
INFO  17:33:59,866 - #48 2
INFO  17:33:59,867 - #14 ]
INFO  17:33:59,867 - #16 )
INFO  17:33:59,867 - #16 )
INFO  17:33:59,867 - #17 ;
INFO  17:33:59,867 - #5 print
INFO  17:33:59,867 - #15 (
INFO  17:33:59,867 - #50 eol
INFO  17:33:59,867 - #16 )
INFO  17:33:59,868 - #17 ;
INFO  17:33:59,868 - #5 print
INFO  17:33:59,868 - #15 (
INFO  17:33:59,868 - #50 inkrement
INFO  17:33:59,868 - #15 (
INFO  17:33:59,868 - #50 niz
INFO  17:33:59,869 - #13 [
INFO  17:33:59,869 - #48 2
INFO  17:33:59,869 - #14 ]
INFO  17:33:59,869 - #20 ,
INFO  17:33:59,869 - #48 2
INFO  17:33:59,869 - #16 )
INFO  17:33:59,869 - #16 )
INFO  17:33:59,869 - #17 ;
INFO  17:33:59,869 - #50 a
INFO  17:33:59,869 - #8 =
INFO  17:33:59,870 - #48 3
INFO  17:33:59,870 - #17 ;
INFO  17:33:59,870 - #50 i
INFO  17:33:59,870 - #8 =
INFO  17:33:59,870 - #48 0
INFO  17:33:59,870 - #17 ;
INFO  17:33:59,870 - #40 while
INFO  17:33:59,870 - #15 (
INFO  17:33:59,870 - #50 i
INFO  17:33:59,870 - #35 <
INFO  17:33:59,870 - #48 3
INFO  17:33:59,870 - #16 )
INFO  17:33:59,871 - #11 {
INFO  17:33:59,871 - #50 niz
INFO  17:33:59,871 - #13 [
INFO  17:33:59,871 - #50 i
INFO  17:33:59,871 - #14 ]
INFO  17:33:59,871 - #8 =
INFO  17:33:59,871 - #50 niz
INFO  17:33:59,871 - #13 [
INFO  17:33:59,871 - #50 i
INFO  17:33:59,871 - #14 ]
INFO  17:33:59,872 - #22 *
INFO  17:33:59,872 - #48 2
INFO  17:33:59,872 - #22 *
INFO  17:33:59,872 - #50 a
INFO  17:33:59,872 - #17 ;
INFO  17:33:59,872 - #50 i
INFO  17:33:59,873 - #27 ++
INFO  17:33:59,873 - #17 ;
INFO  17:33:59,873 - #12 }
INFO  17:33:59,873 - #50 niz
INFO  17:33:59,873 - #19 .
INFO  17:33:59,873 - #10 foreach
INFO  17:33:59,873 - #15 (
INFO  17:33:59,873 - #50 curr
INFO  17:33:59,873 - #8 =
ERROR 17:33:59,874 - 
Syntax error on line 92
INFO  17:33:59,874 - #33 >
INFO  17:33:59,874 - #5 print
INFO  17:33:59,874 - #15 (
INFO  17:33:59,876 - #50 curr
INFO  17:33:59,876 - #16 )
INFO  17:33:59,876 - #17 ;
INFO  17:33:59,876 - #16 )
INFO  17:33:59,876 - #17 ;
INFO  17:33:59,876 - #5 print
INFO  17:33:59,877 - #15 (
INFO  17:33:59,877 - #50 eol
ERROR 17:33:59,877 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:33:59,887 - #16 )
INFO  17:33:59,887 - #17 ;
INFO  17:33:59,887 - #50 niz2
INFO  17:33:59,887 - #8 =
INFO  17:33:59,887 - #48 0
INFO  17:33:59,887 - #17 ;
INFO  17:33:59,888 - #50 niz
INFO  17:33:59,888 - #19 .
INFO  17:33:59,888 - #10 foreach
INFO  17:33:59,888 - #15 (
INFO  17:33:59,888 - #50 curr
INFO  17:33:59,888 - #8 =
ERROR 17:33:59,888 - 
Syntax error on line 96
INFO  17:33:59,888 - #33 >
INFO  17:33:59,888 - #11 {
INFO  17:33:59,888 - #50 niz2
INFO  17:33:59,888 - #8 =
INFO  17:33:59,888 - #50 niz2
INFO  17:33:59,888 - #25 +
INFO  17:33:59,888 - #50 curr
INFO  17:33:59,888 - #22 *
INFO  17:33:59,888 - #50 curr
INFO  17:33:59,888 - #17 ;
INFO  17:33:59,888 - #12 }
INFO  17:33:59,888 - #16 )
INFO  17:33:59,888 - #17 ;
INFO  17:33:59,888 - #5 print
INFO  17:33:59,888 - #15 (
INFO  17:33:59,889 - #50 niz2
ERROR 17:33:59,889 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:33:59,889 - #16 )
INFO  17:33:59,889 - #17 ;
INFO  17:33:59,889 - #12 }
INFO  17:33:59,889 - #12 }
INFO  17:33:59,929 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:33:59,930 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:33:59,930 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:33:59,930 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:33:59,931 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:33:59,931 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:33:59,931 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 17:33:59,931 - Greska - korisceno ime nikada nije deklarisano! Linija: 19
ERROR 17:33:59,932 - Greska - jedini tip dozvoljen kod operacije sabiranja je int! Linija: 19
ERROR 17:33:59,932 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  17:33:59,932 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:33:59,932 - Greska - korisceno ime nikada nije deklarisano! Linija: 26
ERROR 17:33:59,932 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:33:59,937 - Greska - korisceno ime nikada nije deklarisano! Linija: 27
ERROR 17:33:59,937 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
ERROR 17:35:21,685 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 29
ERROR 17:35:21,686 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 17:35:21,687 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 17:35:21,688 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:35:21,688 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:35:21,688 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:35:21,688 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
ERROR 17:35:21,689 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 57
