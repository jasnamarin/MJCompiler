INFO  17:52:22,685 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:52:22,982 - #2 program
INFO  17:52:22,983 - #50 test302
INFO  17:52:22,983 - #7 const
INFO  17:52:22,991 - #50 int
INFO  17:52:22,992 - #50 jedan
INFO  17:52:22,995 - #8 =
INFO  17:52:22,995 - #48 1
INFO  17:52:22,995 - #17 ;
INFO  17:52:23,000 - #50 int
INFO  17:52:23,003 - #50 i
INFO  17:52:23,004 - #17 ;
INFO  17:52:23,004 - #50 bool
INFO  17:52:23,005 - #50 ibool
INFO  17:52:23,005 - #17 ;
INFO  17:52:23,005 - #50 int
INFO  17:52:23,006 - #50 niz2
INFO  17:52:23,006 - #17 ;
INFO  17:52:23,006 - #50 int
INFO  17:52:23,006 - #50 niz
INFO  17:52:23,006 - #13 [
INFO  17:52:23,008 - #14 ]
INFO  17:52:23,008 - #17 ;
INFO  17:52:23,009 - #50 int
INFO  17:52:23,009 - #50 a
INFO  17:52:23,009 - #20 ,
INFO  17:52:23,009 - #50 curr
INFO  17:52:23,009 - #17 ;
INFO  17:52:23,009 - #11 {
INFO  17:52:23,010 - #50 int
INFO  17:52:23,011 - #50 sum
INFO  17:52:23,012 - #15 (
INFO  17:52:23,014 - #50 int
INFO  17:52:23,014 - #50 z
INFO  17:52:23,014 - #20 ,
INFO  17:52:23,014 - #50 int
INFO  17:52:23,014 - #50 d
INFO  17:52:23,015 - #16 )
INFO  17:52:23,015 - #11 {
INFO  17:52:23,017 - #3 return
INFO  17:52:23,019 - #50 z
INFO  17:52:23,020 - #25 +
INFO  17:52:23,020 - #50 d
INFO  17:52:23,024 - #17 ;
INFO  17:52:23,024 - #12 }
INFO  17:52:23,025 - #50 int
INFO  17:52:23,025 - #50 inkrement
INFO  17:52:23,026 - #15 (
INFO  17:52:23,026 - #50 int
INFO  17:52:23,026 - #50 a
INFO  17:52:23,026 - #20 ,
INFO  17:52:23,030 - #50 int
INFO  17:52:23,031 - #50 inc
INFO  17:52:23,031 - #16 )
INFO  17:52:23,031 - #50 int
INFO  17:52:23,031 - #50 pom
INFO  17:52:23,031 - #17 ;
INFO  17:52:23,031 - #11 {
INFO  17:52:23,032 - #37 if
INFO  17:52:23,032 - #15 (
INFO  17:52:23,032 - #50 inc
INFO  17:52:23,032 - #31 ==
INFO  17:52:23,032 - #50 jedan
INFO  17:52:23,037 - #16 )
INFO  17:52:23,038 - #50 pom
INFO  17:52:23,038 - #8 =
INFO  17:52:23,038 - #48 1
INFO  17:52:23,040 - #17 ;
INFO  17:52:23,041 - #38 else
INFO  17:52:23,041 - #37 if
INFO  17:52:23,041 - #15 (
INFO  17:52:23,041 - #50 inc
INFO  17:52:23,041 - #31 ==
INFO  17:52:23,041 - #48 2
INFO  17:52:23,041 - #16 )
INFO  17:52:23,042 - #50 pom
INFO  17:52:23,042 - #8 =
INFO  17:52:23,042 - #50 a
INFO  17:52:23,042 - #17 ;
INFO  17:52:23,042 - #3 return
INFO  17:52:23,042 - #50 sum
INFO  17:52:23,043 - #15 (
INFO  17:52:23,043 - #50 a
INFO  17:52:23,043 - #20 ,
INFO  17:52:23,043 - #50 pom
INFO  17:52:23,043 - #16 )
INFO  17:52:23,044 - #17 ;
INFO  17:52:23,044 - #12 }
INFO  17:52:23,044 - #50 bool
INFO  17:52:23,045 - #50 verify
INFO  17:52:23,045 - #15 (
INFO  17:52:23,045 - #16 )
INFO  17:52:23,045 - #11 {
INFO  17:52:23,045 - #5 print
INFO  17:52:23,045 - #15 (
INFO  17:52:23,045 - #49 v
INFO  17:52:23,045 - #16 )
INFO  17:52:23,046 - #17 ;
INFO  17:52:23,046 - #3 return
INFO  17:52:23,046 - #47 false
INFO  17:52:23,046 - #17 ;
INFO  17:52:23,047 - #12 }
INFO  17:52:23,047 - #4 void
INFO  17:52:23,047 - #50 main
INFO  17:52:23,052 - #15 (
INFO  17:52:23,052 - #16 )
INFO  17:52:23,053 - #11 {
INFO  17:52:23,053 - #37 if
INFO  17:52:23,053 - #15 (
INFO  17:52:23,053 - #48 1
INFO  17:52:23,053 - #32 !=
INFO  17:52:23,053 - #48 1
INFO  17:52:23,055 - #16 )
INFO  17:52:23,056 - #5 print
INFO  17:52:23,056 - #15 (
INFO  17:52:23,056 - #26 -
INFO  17:52:23,056 - #48 6
INFO  17:52:23,056 - #16 )
INFO  17:52:23,056 - #17 ;
INFO  17:52:23,056 - #38 else
INFO  17:52:23,057 - #5 print
INFO  17:52:23,057 - #15 (
INFO  17:52:23,057 - #48 0
INFO  17:52:23,057 - #16 )
INFO  17:52:23,057 - #17 ;
INFO  17:52:23,057 - #50 ibool
INFO  17:52:23,057 - #8 =
INFO  17:52:23,057 - #47 false
INFO  17:52:23,058 - #17 ;
INFO  17:52:23,058 - #50 i
INFO  17:52:23,058 - #8 =
INFO  17:52:23,058 - #48 0
INFO  17:52:23,058 - #17 ;
INFO  17:52:23,058 - #40 while
INFO  17:52:23,058 - #15 (
INFO  17:52:23,058 - #50 i
INFO  17:52:23,058 - #35 <
INFO  17:52:23,059 - #48 5
INFO  17:52:23,061 - #16 )
INFO  17:52:23,061 - #11 {
INFO  17:52:23,061 - #37 if
INFO  17:52:23,062 - #15 (
INFO  17:52:23,062 - #50 i
INFO  17:52:23,062 - #31 ==
INFO  17:52:23,062 - #48 2
INFO  17:52:23,062 - #16 )
INFO  17:52:23,062 - #50 ibool
INFO  17:52:23,062 - #8 =
INFO  17:52:23,062 - #47 true
INFO  17:52:23,062 - #17 ;
INFO  17:52:23,062 - #50 i
INFO  17:52:23,062 - #27 ++
INFO  17:52:23,063 - #17 ;
INFO  17:52:23,065 - #12 }
INFO  17:52:23,065 - #37 if
INFO  17:52:23,066 - #15 (
INFO  17:52:23,066 - #50 ibool
INFO  17:52:23,066 - #16 )
INFO  17:52:23,067 - #37 if
INFO  17:52:23,067 - #15 (
INFO  17:52:23,067 - #50 i
INFO  17:52:23,067 - #31 ==
INFO  17:52:23,067 - #48 5
INFO  17:52:23,067 - #16 )
INFO  17:52:23,068 - #5 print
INFO  17:52:23,068 - #15 (
INFO  17:52:23,068 - #48 1
INFO  17:52:23,068 - #16 )
INFO  17:52:23,068 - #17 ;
INFO  17:52:23,068 - #38 else
INFO  17:52:23,068 - #5 print
INFO  17:52:23,068 - #15 (
INFO  17:52:23,068 - #26 -
INFO  17:52:23,068 - #48 1
INFO  17:52:23,069 - #16 )
INFO  17:52:23,069 - #17 ;
INFO  17:52:23,069 - #50 a
INFO  17:52:23,069 - #8 =
INFO  17:52:23,069 - #48 2
INFO  17:52:23,069 - #17 ;
INFO  17:52:23,069 - #50 niz
INFO  17:52:23,069 - #8 =
INFO  17:52:23,069 - #46 new
INFO  17:52:23,070 - #50 int
INFO  17:52:23,070 - #13 [
INFO  17:52:23,070 - #48 3
INFO  17:52:23,070 - #14 ]
INFO  17:52:23,070 - #17 ;
INFO  17:52:23,070 - #50 niz
INFO  17:52:23,071 - #13 [
INFO  17:52:23,071 - #48 0
INFO  17:52:23,071 - #14 ]
INFO  17:52:23,071 - #8 =
INFO  17:52:23,071 - #48 1
INFO  17:52:23,071 - #22 *
INFO  17:52:23,071 - #50 a
INFO  17:52:23,075 - #17 ;
INFO  17:52:23,076 - #50 niz
INFO  17:52:23,076 - #13 [
INFO  17:52:23,076 - #48 1
INFO  17:52:23,076 - #14 ]
INFO  17:52:23,076 - #8 =
INFO  17:52:23,076 - #48 2
INFO  17:52:23,077 - #22 *
INFO  17:52:23,077 - #50 a
INFO  17:52:23,077 - #17 ;
INFO  17:52:23,077 - #50 niz
INFO  17:52:23,077 - #13 [
INFO  17:52:23,077 - #48 2
INFO  17:52:23,077 - #14 ]
INFO  17:52:23,077 - #8 =
INFO  17:52:23,077 - #50 sum
INFO  17:52:23,077 - #15 (
INFO  17:52:23,078 - #50 niz
INFO  17:52:23,078 - #13 [
INFO  17:52:23,078 - #48 1
INFO  17:52:23,078 - #14 ]
INFO  17:52:23,078 - #20 ,
INFO  17:52:23,078 - #50 niz
INFO  17:52:23,078 - #13 [
INFO  17:52:23,078 - #48 0
INFO  17:52:23,078 - #14 ]
INFO  17:52:23,078 - #16 )
INFO  17:52:23,078 - #22 *
INFO  17:52:23,079 - #50 a
INFO  17:52:23,079 - #25 +
INFO  17:52:23,079 - #48 1
INFO  17:52:23,079 - #17 ;
INFO  17:52:23,079 - #37 if
INFO  17:52:23,079 - #15 (
INFO  17:52:23,079 - #50 verify
INFO  17:52:23,079 - #15 (
INFO  17:52:23,079 - #16 )
INFO  17:52:23,079 - #30 ||
INFO  17:52:23,080 - #50 niz
INFO  17:52:23,080 - #13 [
INFO  17:52:23,080 - #48 2
INFO  17:52:23,080 - #14 ]
INFO  17:52:23,080 - #31 ==
INFO  17:52:23,080 - #48 4
INFO  17:52:23,080 - #16 )
INFO  17:52:23,081 - #5 print
INFO  17:52:23,081 - #15 (
INFO  17:52:23,081 - #50 ord
INFO  17:52:23,082 - #15 (
INFO  17:52:23,082 - #49 A
INFO  17:52:23,082 - #16 )
INFO  17:52:23,082 - #16 )
INFO  17:52:23,082 - #17 ;
INFO  17:52:23,082 - #38 else
INFO  17:52:23,082 - #5 print
INFO  17:52:23,082 - #15 (
INFO  17:52:23,082 - #50 ord
INFO  17:52:23,082 - #15 (
INFO  17:52:23,083 - #49 a
INFO  17:52:23,083 - #16 )
INFO  17:52:23,084 - #16 )
INFO  17:52:23,084 - #17 ;
INFO  17:52:23,084 - #5 print
INFO  17:52:23,084 - #15 (
INFO  17:52:23,084 - #50 eol
INFO  17:52:23,084 - #16 )
INFO  17:52:23,085 - #17 ;
INFO  17:52:23,085 - #50 i
INFO  17:52:23,085 - #8 =
INFO  17:52:23,085 - #48 0
INFO  17:52:23,085 - #17 ;
INFO  17:52:23,085 - #40 while
INFO  17:52:23,085 - #15 (
INFO  17:52:23,085 - #50 i
INFO  17:52:23,086 - #35 <
INFO  17:52:23,086 - #48 10
INFO  17:52:23,086 - #16 )
INFO  17:52:23,086 - #11 {
INFO  17:52:23,086 - #37 if
INFO  17:52:23,086 - #15 (
INFO  17:52:23,086 - #50 i
INFO  17:52:23,086 - #31 ==
INFO  17:52:23,086 - #48 3
INFO  17:52:23,086 - #16 )
INFO  17:52:23,087 - #11 {
INFO  17:52:23,087 - #50 i
INFO  17:52:23,087 - #27 ++
INFO  17:52:23,087 - #17 ;
INFO  17:52:23,087 - #42 continue
INFO  17:52:23,087 - #17 ;
INFO  17:52:23,087 - #12 }
INFO  17:52:23,091 - #37 if
INFO  17:52:23,091 - #15 (
INFO  17:52:23,091 - #50 i
INFO  17:52:23,092 - #31 ==
INFO  17:52:23,092 - #48 4
INFO  17:52:23,092 - #16 )
INFO  17:52:23,092 - #41 break
INFO  17:52:23,092 - #17 ;
INFO  17:52:23,092 - #50 i
INFO  17:52:23,095 - #8 =
INFO  17:52:23,095 - #50 inkrement
INFO  17:52:23,095 - #15 (
INFO  17:52:23,095 - #50 i
INFO  17:52:23,095 - #20 ,
INFO  17:52:23,095 - #48 1
INFO  17:52:23,095 - #16 )
INFO  17:52:23,095 - #17 ;
INFO  17:52:23,095 - #12 }
INFO  17:52:23,095 - #37 if
INFO  17:52:23,096 - #15 (
INFO  17:52:23,096 - #50 i
INFO  17:52:23,096 - #31 ==
INFO  17:52:23,097 - #48 3
INFO  17:52:23,097 - #29 &&
INFO  17:52:23,097 - #50 verify
INFO  17:52:23,098 - #15 (
INFO  17:52:23,098 - #16 )
INFO  17:52:23,098 - #16 )
INFO  17:52:23,098 - #5 print
INFO  17:52:23,098 - #15 (
INFO  17:52:23,099 - #26 -
INFO  17:52:23,099 - #48 4
INFO  17:52:23,099 - #16 )
INFO  17:52:23,099 - #17 ;
INFO  17:52:23,099 - #38 else
INFO  17:52:23,099 - #5 print
INFO  17:52:23,099 - #15 (
INFO  17:52:23,099 - #48 4
INFO  17:52:23,100 - #16 )
INFO  17:52:23,100 - #17 ;
INFO  17:52:23,100 - #6 read
INFO  17:52:23,100 - #15 (
INFO  17:52:23,100 - #50 niz
INFO  17:52:23,100 - #13 [
INFO  17:52:23,100 - #48 0
INFO  17:52:23,100 - #14 ]
INFO  17:52:23,100 - #16 )
INFO  17:52:23,100 - #17 ;
INFO  17:52:23,101 - #6 read
INFO  17:52:23,101 - #15 (
INFO  17:52:23,102 - #50 niz
INFO  17:52:23,102 - #13 [
INFO  17:52:23,102 - #48 1
INFO  17:52:23,102 - #14 ]
INFO  17:52:23,102 - #16 )
INFO  17:52:23,102 - #17 ;
INFO  17:52:23,102 - #6 read
INFO  17:52:23,103 - #15 (
INFO  17:52:23,104 - #50 niz
INFO  17:52:23,104 - #13 [
INFO  17:52:23,104 - #48 2
INFO  17:52:23,104 - #14 ]
INFO  17:52:23,104 - #16 )
INFO  17:52:23,104 - #17 ;
INFO  17:52:23,104 - #5 print
INFO  17:52:23,104 - #15 (
INFO  17:52:23,104 - #50 eol
INFO  17:52:23,104 - #16 )
INFO  17:52:23,104 - #17 ;
INFO  17:52:23,104 - #5 print
INFO  17:52:23,104 - #15 (
INFO  17:52:23,104 - #50 sum
INFO  17:52:23,104 - #15 (
INFO  17:52:23,104 - #50 sum
INFO  17:52:23,104 - #15 (
INFO  17:52:23,104 - #50 niz
INFO  17:52:23,105 - #13 [
INFO  17:52:23,105 - #48 0
INFO  17:52:23,105 - #14 ]
INFO  17:52:23,105 - #20 ,
INFO  17:52:23,105 - #50 niz
INFO  17:52:23,105 - #13 [
INFO  17:52:23,105 - #48 1
INFO  17:52:23,105 - #14 ]
INFO  17:52:23,105 - #16 )
INFO  17:52:23,105 - #20 ,
INFO  17:52:23,106 - #50 niz
INFO  17:52:23,106 - #13 [
INFO  17:52:23,106 - #48 2
INFO  17:52:23,106 - #14 ]
INFO  17:52:23,106 - #16 )
INFO  17:52:23,106 - #16 )
INFO  17:52:23,106 - #17 ;
INFO  17:52:23,106 - #5 print
INFO  17:52:23,106 - #15 (
INFO  17:52:23,106 - #50 eol
INFO  17:52:23,106 - #16 )
INFO  17:52:23,107 - #17 ;
INFO  17:52:23,107 - #5 print
INFO  17:52:23,107 - #15 (
INFO  17:52:23,107 - #50 inkrement
INFO  17:52:23,107 - #15 (
INFO  17:52:23,107 - #50 niz
INFO  17:52:23,107 - #13 [
INFO  17:52:23,107 - #48 2
INFO  17:52:23,107 - #14 ]
INFO  17:52:23,108 - #20 ,
INFO  17:52:23,108 - #48 2
INFO  17:52:23,108 - #16 )
INFO  17:52:23,108 - #16 )
INFO  17:52:23,108 - #17 ;
INFO  17:52:23,108 - #50 a
INFO  17:52:23,108 - #8 =
INFO  17:52:23,108 - #48 3
INFO  17:52:23,108 - #17 ;
INFO  17:52:23,108 - #50 i
INFO  17:52:23,108 - #8 =
INFO  17:52:23,108 - #48 0
INFO  17:52:23,108 - #17 ;
INFO  17:52:23,109 - #40 while
INFO  17:52:23,109 - #15 (
INFO  17:52:23,109 - #50 i
INFO  17:52:23,109 - #35 <
INFO  17:52:23,109 - #48 3
INFO  17:52:23,109 - #16 )
INFO  17:52:23,109 - #11 {
INFO  17:52:23,109 - #50 niz
INFO  17:52:23,109 - #13 [
INFO  17:52:23,109 - #50 i
INFO  17:52:23,109 - #14 ]
INFO  17:52:23,109 - #8 =
INFO  17:52:23,110 - #50 niz
INFO  17:52:23,110 - #13 [
INFO  17:52:23,110 - #50 i
INFO  17:52:23,110 - #14 ]
INFO  17:52:23,110 - #22 *
INFO  17:52:23,110 - #48 2
INFO  17:52:23,110 - #22 *
INFO  17:52:23,110 - #50 a
INFO  17:52:23,110 - #17 ;
INFO  17:52:23,110 - #50 i
INFO  17:52:23,110 - #27 ++
INFO  17:52:23,110 - #17 ;
INFO  17:52:23,110 - #12 }
INFO  17:52:23,110 - #50 niz
INFO  17:52:23,111 - #19 .
INFO  17:52:23,111 - #10 foreach
INFO  17:52:23,111 - #15 (
INFO  17:52:23,111 - #50 curr
INFO  17:52:23,111 - #8 =
ERROR 17:52:23,111 - 
Syntax error on line 92
INFO  17:52:23,111 - #33 >
INFO  17:52:23,111 - #5 print
INFO  17:52:23,111 - #15 (
INFO  17:52:23,113 - #50 curr
INFO  17:52:23,113 - #16 )
INFO  17:52:23,113 - #17 ;
INFO  17:52:23,113 - #16 )
INFO  17:52:23,113 - #17 ;
INFO  17:52:23,113 - #5 print
INFO  17:52:23,114 - #15 (
INFO  17:52:23,114 - #50 eol
ERROR 17:52:23,114 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:52:23,124 - #16 )
INFO  17:52:23,124 - #17 ;
INFO  17:52:23,124 - #50 niz2
INFO  17:52:23,124 - #8 =
INFO  17:52:23,125 - #48 0
INFO  17:52:23,125 - #17 ;
INFO  17:52:23,125 - #50 niz
INFO  17:52:23,125 - #19 .
INFO  17:52:23,125 - #10 foreach
INFO  17:52:23,125 - #15 (
INFO  17:52:23,125 - #50 curr
INFO  17:52:23,125 - #8 =
ERROR 17:52:23,125 - 
Syntax error on line 96
INFO  17:52:23,125 - #33 >
INFO  17:52:23,125 - #11 {
INFO  17:52:23,125 - #50 niz2
INFO  17:52:23,125 - #8 =
INFO  17:52:23,125 - #50 niz2
INFO  17:52:23,125 - #25 +
INFO  17:52:23,125 - #50 curr
INFO  17:52:23,126 - #22 *
INFO  17:52:23,126 - #50 curr
INFO  17:52:23,126 - #17 ;
INFO  17:52:23,126 - #12 }
INFO  17:52:23,126 - #16 )
INFO  17:52:23,126 - #17 ;
INFO  17:52:23,126 - #5 print
INFO  17:52:23,126 - #15 (
INFO  17:52:23,126 - #50 niz2
ERROR 17:52:23,126 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:52:23,126 - #16 )
INFO  17:52:23,126 - #17 ;
INFO  17:52:23,126 - #12 }
INFO  17:52:23,126 - #12 }
INFO  17:52:23,163 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:52:23,163 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:52:23,163 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:52:23,163 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:52:23,163 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:52:23,163 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:52:23,163 - Detektovana deklaracija globalne promenljive curr Linija: 13
INFO  17:52:23,164 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:52:23,164 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:52:23,170 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
INFO  17:52:23,170 - Detektovan poziv globalne funkcije programa sum Linija: 29
ERROR 17:52:23,170 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:52:23,170 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:52:23,171 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:52:23,171 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
INFO  17:52:23,171 - Detektovan poziv globalne funkcije programa sum Linija: 57
ERROR 17:52:23,171 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 58
ERROR 17:52:23,171 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
ERROR 17:52:23,171 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
INFO  17:52:23,172 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  17:52:23,172 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 17:52:23,172 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 63
ERROR 17:52:23,172 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 64
ERROR 17:52:23,172 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 17:52:23,172 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 69
ERROR 17:52:23,172 - Greska - break moze da se koristi samo unutar while / foreach petlji!
INFO  17:52:23,173 - Detektovan poziv globalne funkcije programa inkrement Linija: 70
ERROR 17:52:23,173 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
ERROR 17:52:23,173 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 73
ERROR 17:52:23,173 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
INFO  17:52:23,173 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:52:23,173 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:52:23,173 - Detektovan poziv globalne funkcije programa inkrement Linija: 83
ERROR 17:52:23,173 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 87
ERROR 17:52:23,174 - Parsiranje NIJE uspesno zavrseno!
