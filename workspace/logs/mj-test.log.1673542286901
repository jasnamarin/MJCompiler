INFO  17:50:35,573 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:50:35,909 - #2 program
INFO  17:50:35,910 - #50 test302
INFO  17:50:35,910 - #7 const
INFO  17:50:35,918 - #50 int
INFO  17:50:35,918 - #50 jedan
INFO  17:50:35,922 - #8 =
INFO  17:50:35,922 - #48 1
INFO  17:50:35,922 - #17 ;
INFO  17:50:35,929 - #50 int
INFO  17:50:35,932 - #50 i
INFO  17:50:35,933 - #17 ;
INFO  17:50:35,933 - #50 bool
INFO  17:50:35,934 - #50 ibool
INFO  17:50:35,934 - #17 ;
INFO  17:50:35,935 - #50 int
INFO  17:50:35,935 - #50 niz2
INFO  17:50:35,935 - #17 ;
INFO  17:50:35,935 - #50 int
INFO  17:50:35,935 - #50 niz
INFO  17:50:35,935 - #13 [
INFO  17:50:35,937 - #14 ]
INFO  17:50:35,938 - #17 ;
INFO  17:50:35,938 - #50 int
INFO  17:50:35,938 - #50 a
INFO  17:50:35,938 - #20 ,
INFO  17:50:35,938 - #50 curr
INFO  17:50:35,938 - #17 ;
INFO  17:50:35,939 - #11 {
INFO  17:50:35,939 - #50 int
INFO  17:50:35,941 - #50 sum
INFO  17:50:35,941 - #15 (
INFO  17:50:35,944 - #50 int
INFO  17:50:35,944 - #50 z
INFO  17:50:35,944 - #20 ,
INFO  17:50:35,944 - #50 int
INFO  17:50:35,944 - #50 d
INFO  17:50:35,944 - #16 )
INFO  17:50:35,945 - #11 {
INFO  17:50:35,947 - #3 return
INFO  17:50:35,950 - #50 z
INFO  17:50:35,950 - #25 +
INFO  17:50:35,951 - #50 d
INFO  17:50:35,955 - #17 ;
INFO  17:50:35,955 - #12 }
INFO  17:50:35,956 - #50 int
INFO  17:50:35,956 - #50 inkrement
INFO  17:50:35,956 - #15 (
INFO  17:50:35,989 - #50 int
INFO  17:50:35,989 - #50 a
INFO  17:50:35,989 - #20 ,
INFO  17:50:35,996 - #50 int
INFO  17:50:35,997 - #50 inc
INFO  17:50:35,997 - #16 )
INFO  17:50:35,997 - #50 int
INFO  17:50:35,997 - #50 pom
INFO  17:50:35,997 - #17 ;
INFO  17:50:35,997 - #11 {
INFO  17:50:35,998 - #37 if
INFO  17:50:35,998 - #15 (
INFO  17:50:35,998 - #50 inc
INFO  17:50:35,998 - #31 ==
INFO  17:50:35,999 - #50 jedan
INFO  17:50:36,006 - #16 )
INFO  17:50:36,007 - #50 pom
INFO  17:50:36,007 - #8 =
INFO  17:50:36,008 - #48 1
INFO  17:50:36,010 - #17 ;
INFO  17:50:36,011 - #38 else
INFO  17:50:36,011 - #37 if
INFO  17:50:36,011 - #15 (
INFO  17:50:36,012 - #50 inc
INFO  17:50:36,012 - #31 ==
INFO  17:50:36,012 - #48 2
INFO  17:50:36,012 - #16 )
INFO  17:50:36,012 - #50 pom
INFO  17:50:36,012 - #8 =
INFO  17:50:36,012 - #50 a
INFO  17:50:36,012 - #17 ;
INFO  17:50:36,012 - #3 return
INFO  17:50:36,013 - #50 sum
INFO  17:50:36,013 - #15 (
INFO  17:50:36,014 - #50 a
INFO  17:50:36,014 - #20 ,
INFO  17:50:36,014 - #50 pom
INFO  17:50:36,014 - #16 )
INFO  17:50:36,015 - #17 ;
INFO  17:50:36,015 - #12 }
INFO  17:50:36,016 - #50 bool
INFO  17:50:36,016 - #50 verify
INFO  17:50:36,016 - #15 (
INFO  17:50:36,016 - #16 )
INFO  17:50:36,016 - #11 {
INFO  17:50:36,016 - #5 print
INFO  17:50:36,016 - #15 (
INFO  17:50:36,017 - #49 v
INFO  17:50:36,017 - #16 )
INFO  17:50:36,017 - #17 ;
INFO  17:50:36,017 - #3 return
INFO  17:50:36,018 - #47 false
INFO  17:50:36,018 - #17 ;
INFO  17:50:36,018 - #12 }
INFO  17:50:36,018 - #4 void
INFO  17:50:36,019 - #50 main
INFO  17:50:36,021 - #15 (
INFO  17:50:36,021 - #16 )
INFO  17:50:36,021 - #11 {
INFO  17:50:36,022 - #37 if
INFO  17:50:36,022 - #15 (
INFO  17:50:36,022 - #48 1
INFO  17:50:36,022 - #32 !=
INFO  17:50:36,022 - #48 1
INFO  17:50:36,024 - #16 )
INFO  17:50:36,024 - #5 print
INFO  17:50:36,024 - #15 (
INFO  17:50:36,024 - #26 -
INFO  17:50:36,024 - #48 6
INFO  17:50:36,024 - #16 )
INFO  17:50:36,025 - #17 ;
INFO  17:50:36,025 - #38 else
INFO  17:50:36,025 - #5 print
INFO  17:50:36,025 - #15 (
INFO  17:50:36,025 - #48 0
INFO  17:50:36,025 - #16 )
INFO  17:50:36,025 - #17 ;
INFO  17:50:36,025 - #50 ibool
INFO  17:50:36,025 - #8 =
INFO  17:50:36,026 - #47 false
INFO  17:50:36,026 - #17 ;
INFO  17:50:36,026 - #50 i
INFO  17:50:36,026 - #8 =
INFO  17:50:36,026 - #48 0
INFO  17:50:36,026 - #17 ;
INFO  17:50:36,026 - #40 while
INFO  17:50:36,026 - #15 (
INFO  17:50:36,027 - #50 i
INFO  17:50:36,027 - #35 <
INFO  17:50:36,027 - #48 5
INFO  17:50:36,029 - #16 )
INFO  17:50:36,029 - #11 {
INFO  17:50:36,029 - #37 if
INFO  17:50:36,029 - #15 (
INFO  17:50:36,029 - #50 i
INFO  17:50:36,029 - #31 ==
INFO  17:50:36,029 - #48 2
INFO  17:50:36,140 - #16 )
INFO  17:50:36,140 - #50 ibool
INFO  17:50:36,141 - #8 =
INFO  17:50:36,141 - #47 true
INFO  17:50:36,141 - #17 ;
INFO  17:50:36,141 - #50 i
INFO  17:50:36,141 - #27 ++
INFO  17:50:36,141 - #17 ;
INFO  17:50:36,143 - #12 }
INFO  17:50:36,144 - #37 if
INFO  17:50:36,144 - #15 (
INFO  17:50:36,144 - #50 ibool
INFO  17:50:36,144 - #16 )
INFO  17:50:36,145 - #37 if
INFO  17:50:36,145 - #15 (
INFO  17:50:36,145 - #50 i
INFO  17:50:36,145 - #31 ==
INFO  17:50:36,145 - #48 5
INFO  17:50:36,145 - #16 )
INFO  17:50:36,145 - #5 print
INFO  17:50:36,145 - #15 (
INFO  17:50:36,145 - #48 1
INFO  17:50:36,146 - #16 )
INFO  17:50:36,146 - #17 ;
INFO  17:50:36,146 - #38 else
INFO  17:50:36,146 - #5 print
INFO  17:50:36,146 - #15 (
INFO  17:50:36,146 - #26 -
INFO  17:50:36,146 - #48 1
INFO  17:50:36,146 - #16 )
INFO  17:50:36,146 - #17 ;
INFO  17:50:36,146 - #50 a
INFO  17:50:36,147 - #8 =
INFO  17:50:36,147 - #48 2
INFO  17:50:36,147 - #17 ;
INFO  17:50:36,147 - #50 niz
INFO  17:50:36,147 - #8 =
INFO  17:50:36,147 - #46 new
INFO  17:50:36,147 - #50 int
INFO  17:50:36,147 - #13 [
INFO  17:50:36,147 - #48 3
INFO  17:50:36,148 - #14 ]
INFO  17:50:36,148 - #17 ;
INFO  17:50:36,148 - #50 niz
INFO  17:50:36,148 - #13 [
INFO  17:50:36,149 - #48 0
INFO  17:50:36,149 - #14 ]
INFO  17:50:36,149 - #8 =
INFO  17:50:36,149 - #48 1
INFO  17:50:36,149 - #22 *
INFO  17:50:36,149 - #50 a
INFO  17:50:36,154 - #17 ;
INFO  17:50:36,155 - #50 niz
INFO  17:50:36,155 - #13 [
INFO  17:50:36,155 - #48 1
INFO  17:50:36,155 - #14 ]
INFO  17:50:36,155 - #8 =
INFO  17:50:36,155 - #48 2
INFO  17:50:36,155 - #22 *
INFO  17:50:36,155 - #50 a
INFO  17:50:36,156 - #17 ;
INFO  17:50:36,156 - #50 niz
INFO  17:50:36,156 - #13 [
INFO  17:50:36,156 - #48 2
INFO  17:50:36,156 - #14 ]
INFO  17:50:36,156 - #8 =
INFO  17:50:36,156 - #50 sum
INFO  17:50:36,156 - #15 (
INFO  17:50:36,156 - #50 niz
INFO  17:50:36,156 - #13 [
INFO  17:50:36,156 - #48 1
INFO  17:50:36,156 - #14 ]
INFO  17:50:36,157 - #20 ,
INFO  17:50:36,157 - #50 niz
INFO  17:50:36,157 - #13 [
INFO  17:50:36,157 - #48 0
INFO  17:50:36,157 - #14 ]
INFO  17:50:36,157 - #16 )
INFO  17:50:36,157 - #22 *
INFO  17:50:36,157 - #50 a
INFO  17:50:36,157 - #25 +
INFO  17:50:36,157 - #48 1
INFO  17:50:36,157 - #17 ;
INFO  17:50:36,157 - #37 if
INFO  17:50:36,158 - #15 (
INFO  17:50:36,158 - #50 verify
INFO  17:50:36,158 - #15 (
INFO  17:50:36,158 - #16 )
INFO  17:50:36,158 - #30 ||
INFO  17:50:36,158 - #50 niz
INFO  17:50:36,158 - #13 [
INFO  17:50:36,158 - #48 2
INFO  17:50:36,158 - #14 ]
INFO  17:50:36,158 - #31 ==
INFO  17:50:36,159 - #48 4
INFO  17:50:36,159 - #16 )
INFO  17:50:36,159 - #5 print
INFO  17:50:36,159 - #15 (
INFO  17:50:36,160 - #50 ord
INFO  17:50:36,160 - #15 (
INFO  17:50:36,160 - #49 A
INFO  17:50:36,160 - #16 )
INFO  17:50:36,160 - #16 )
INFO  17:50:36,160 - #17 ;
INFO  17:50:36,160 - #38 else
INFO  17:50:36,160 - #5 print
INFO  17:50:36,160 - #15 (
INFO  17:50:36,160 - #50 ord
INFO  17:50:36,160 - #15 (
INFO  17:50:36,160 - #49 a
INFO  17:50:36,161 - #16 )
INFO  17:50:36,161 - #16 )
INFO  17:50:36,161 - #17 ;
INFO  17:50:36,161 - #5 print
INFO  17:50:36,161 - #15 (
INFO  17:50:36,161 - #50 eol
INFO  17:50:36,161 - #16 )
INFO  17:50:36,162 - #17 ;
INFO  17:50:36,162 - #50 i
INFO  17:50:36,162 - #8 =
INFO  17:50:36,162 - #48 0
INFO  17:50:36,162 - #17 ;
INFO  17:50:36,163 - #40 while
INFO  17:50:36,163 - #15 (
INFO  17:50:36,163 - #50 i
INFO  17:50:36,163 - #35 <
INFO  17:50:36,163 - #48 10
INFO  17:50:36,163 - #16 )
INFO  17:50:36,164 - #11 {
INFO  17:50:36,164 - #37 if
INFO  17:50:36,164 - #15 (
INFO  17:50:36,164 - #50 i
INFO  17:50:36,164 - #31 ==
INFO  17:50:36,164 - #48 3
INFO  17:50:36,164 - #16 )
INFO  17:50:36,164 - #11 {
INFO  17:50:36,165 - #50 i
INFO  17:50:36,165 - #27 ++
INFO  17:50:36,165 - #17 ;
INFO  17:50:36,165 - #42 continue
INFO  17:50:36,165 - #17 ;
INFO  17:50:36,165 - #12 }
INFO  17:50:36,168 - #37 if
INFO  17:50:36,168 - #15 (
INFO  17:50:36,168 - #50 i
INFO  17:50:36,168 - #31 ==
INFO  17:50:36,168 - #48 4
INFO  17:50:36,168 - #16 )
INFO  17:50:36,168 - #41 break
INFO  17:50:36,168 - #17 ;
INFO  17:50:36,168 - #50 i
INFO  17:50:36,171 - #8 =
INFO  17:50:36,171 - #50 inkrement
INFO  17:50:36,171 - #15 (
INFO  17:50:36,171 - #50 i
INFO  17:50:36,171 - #20 ,
INFO  17:50:36,171 - #48 1
INFO  17:50:36,172 - #16 )
INFO  17:50:36,172 - #17 ;
INFO  17:50:36,172 - #12 }
INFO  17:50:36,172 - #37 if
INFO  17:50:36,172 - #15 (
INFO  17:50:36,172 - #50 i
INFO  17:50:36,172 - #31 ==
INFO  17:50:36,172 - #48 3
INFO  17:50:36,173 - #29 &&
INFO  17:50:36,173 - #50 verify
INFO  17:50:36,173 - #15 (
INFO  17:50:36,173 - #16 )
INFO  17:50:36,173 - #16 )
INFO  17:50:36,173 - #5 print
INFO  17:50:36,173 - #15 (
INFO  17:50:36,173 - #26 -
INFO  17:50:36,173 - #48 4
INFO  17:50:36,173 - #16 )
INFO  17:50:36,173 - #17 ;
INFO  17:50:36,173 - #38 else
INFO  17:50:36,174 - #5 print
INFO  17:50:36,174 - #15 (
INFO  17:50:36,174 - #48 4
INFO  17:50:36,174 - #16 )
INFO  17:50:36,174 - #17 ;
INFO  17:50:36,174 - #6 read
INFO  17:50:36,174 - #15 (
INFO  17:50:36,174 - #50 niz
INFO  17:50:36,174 - #13 [
INFO  17:50:36,174 - #48 0
INFO  17:50:36,174 - #14 ]
INFO  17:50:36,174 - #16 )
INFO  17:50:36,174 - #17 ;
INFO  17:50:36,175 - #6 read
INFO  17:50:36,175 - #15 (
INFO  17:50:36,175 - #50 niz
INFO  17:50:36,175 - #13 [
INFO  17:50:36,175 - #48 1
INFO  17:50:36,175 - #14 ]
INFO  17:50:36,175 - #16 )
INFO  17:50:36,175 - #17 ;
INFO  17:50:36,175 - #6 read
INFO  17:50:36,175 - #15 (
INFO  17:50:36,175 - #50 niz
INFO  17:50:36,176 - #13 [
INFO  17:50:36,176 - #48 2
INFO  17:50:36,176 - #14 ]
INFO  17:50:36,176 - #16 )
INFO  17:50:36,176 - #17 ;
INFO  17:50:36,176 - #5 print
INFO  17:50:36,176 - #15 (
INFO  17:50:36,176 - #50 eol
INFO  17:50:36,176 - #16 )
INFO  17:50:36,177 - #17 ;
INFO  17:50:36,177 - #5 print
INFO  17:50:36,177 - #15 (
INFO  17:50:36,177 - #50 sum
INFO  17:50:36,177 - #15 (
INFO  17:50:36,177 - #50 sum
INFO  17:50:36,177 - #15 (
INFO  17:50:36,177 - #50 niz
INFO  17:50:36,177 - #13 [
INFO  17:50:36,177 - #48 0
INFO  17:50:36,177 - #14 ]
INFO  17:50:36,177 - #20 ,
INFO  17:50:36,177 - #50 niz
INFO  17:50:36,177 - #13 [
INFO  17:50:36,177 - #48 1
INFO  17:50:36,177 - #14 ]
INFO  17:50:36,177 - #16 )
INFO  17:50:36,177 - #20 ,
INFO  17:50:36,178 - #50 niz
INFO  17:50:36,178 - #13 [
INFO  17:50:36,178 - #48 2
INFO  17:50:36,178 - #14 ]
INFO  17:50:36,178 - #16 )
INFO  17:50:36,178 - #16 )
INFO  17:50:36,178 - #17 ;
INFO  17:50:36,178 - #5 print
INFO  17:50:36,178 - #15 (
INFO  17:50:36,178 - #50 eol
INFO  17:50:36,178 - #16 )
INFO  17:50:36,178 - #17 ;
INFO  17:50:36,179 - #5 print
INFO  17:50:36,179 - #15 (
INFO  17:50:36,179 - #50 inkrement
INFO  17:50:36,179 - #15 (
INFO  17:50:36,179 - #50 niz
INFO  17:50:36,179 - #13 [
INFO  17:50:36,179 - #48 2
INFO  17:50:36,179 - #14 ]
INFO  17:50:36,179 - #20 ,
INFO  17:50:36,179 - #48 2
INFO  17:50:36,179 - #16 )
INFO  17:50:36,179 - #16 )
INFO  17:50:36,180 - #17 ;
INFO  17:50:36,180 - #50 a
INFO  17:50:36,180 - #8 =
INFO  17:50:36,180 - #48 3
INFO  17:50:36,180 - #17 ;
INFO  17:50:36,180 - #50 i
INFO  17:50:36,180 - #8 =
INFO  17:50:36,180 - #48 0
INFO  17:50:36,180 - #17 ;
INFO  17:50:36,180 - #40 while
INFO  17:50:36,180 - #15 (
INFO  17:50:36,180 - #50 i
INFO  17:50:36,181 - #35 <
INFO  17:50:36,181 - #48 3
INFO  17:50:36,181 - #16 )
INFO  17:50:36,181 - #11 {
INFO  17:50:36,181 - #50 niz
INFO  17:50:36,181 - #13 [
INFO  17:50:36,181 - #50 i
INFO  17:50:36,181 - #14 ]
INFO  17:50:36,181 - #8 =
INFO  17:50:36,181 - #50 niz
INFO  17:50:36,181 - #13 [
INFO  17:50:36,182 - #50 i
INFO  17:50:36,182 - #14 ]
INFO  17:50:36,182 - #22 *
INFO  17:50:36,182 - #48 2
INFO  17:50:36,182 - #22 *
INFO  17:50:36,182 - #50 a
INFO  17:50:36,182 - #17 ;
INFO  17:50:36,182 - #50 i
INFO  17:50:36,183 - #27 ++
INFO  17:50:36,183 - #17 ;
INFO  17:50:36,183 - #12 }
INFO  17:50:36,183 - #50 niz
INFO  17:50:36,183 - #19 .
INFO  17:50:36,183 - #10 foreach
INFO  17:50:36,183 - #15 (
INFO  17:50:36,183 - #50 curr
INFO  17:50:36,183 - #8 =
ERROR 17:50:36,183 - 
Syntax error on line 92
INFO  17:50:36,184 - #33 >
INFO  17:50:36,184 - #5 print
INFO  17:50:36,184 - #15 (
INFO  17:50:36,185 - #50 curr
INFO  17:50:36,185 - #16 )
INFO  17:50:36,185 - #17 ;
INFO  17:50:36,185 - #16 )
INFO  17:50:36,185 - #17 ;
INFO  17:50:36,186 - #5 print
INFO  17:50:36,186 - #15 (
INFO  17:50:36,186 - #50 eol
ERROR 17:50:36,186 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:50:36,194 - #16 )
INFO  17:50:36,194 - #17 ;
INFO  17:50:36,194 - #50 niz2
INFO  17:50:36,194 - #8 =
INFO  17:50:36,194 - #48 0
INFO  17:50:36,195 - #17 ;
INFO  17:50:36,195 - #50 niz
INFO  17:50:36,195 - #19 .
INFO  17:50:36,195 - #10 foreach
INFO  17:50:36,195 - #15 (
INFO  17:50:36,195 - #50 curr
INFO  17:50:36,195 - #8 =
ERROR 17:50:36,195 - 
Syntax error on line 96
INFO  17:50:36,195 - #33 >
INFO  17:50:36,195 - #11 {
INFO  17:50:36,195 - #50 niz2
INFO  17:50:36,196 - #8 =
INFO  17:50:36,196 - #50 niz2
INFO  17:50:36,196 - #25 +
INFO  17:50:36,196 - #50 curr
INFO  17:50:36,196 - #22 *
INFO  17:50:36,196 - #50 curr
INFO  17:50:36,196 - #17 ;
INFO  17:50:36,196 - #12 }
INFO  17:50:36,196 - #16 )
INFO  17:50:36,196 - #17 ;
INFO  17:50:36,197 - #5 print
INFO  17:50:36,197 - #15 (
INFO  17:50:36,197 - #50 niz2
ERROR 17:50:36,197 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:50:36,197 - #16 )
INFO  17:50:36,197 - #17 ;
INFO  17:50:36,197 - #12 }
INFO  17:50:36,197 - #12 }
INFO  17:50:36,239 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:50:36,239 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:50:36,239 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:50:36,240 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:50:36,240 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:50:36,240 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:50:36,240 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 17:50:36,240 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  17:50:36,240 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:50:36,240 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:50:36,244 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
INFO  17:50:36,245 - Detektovan poziv globalne funkcije programa sum Linija: 29
ERROR 17:50:36,245 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 17:50:36,245 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 17:50:36,245 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:50:36,245 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:50:36,245 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:50:36,245 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
INFO  17:50:36,246 - Detektovan poziv globalne funkcije programa sum Linija: 57
ERROR 17:50:36,246 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 58
ERROR 17:50:36,246 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
ERROR 17:50:36,246 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 58
INFO  17:50:36,246 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  17:50:36,247 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 17:50:36,247 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 63
ERROR 17:50:36,247 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 64
ERROR 17:50:36,247 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 17:50:36,247 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 69
ERROR 17:50:36,247 - Greska - break moze da se koristi samo unutar while / foreach petlji!
INFO  17:50:36,248 - Detektovan poziv globalne funkcije programa inkrement Linija: 70
ERROR 17:50:36,248 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
ERROR 17:50:36,248 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 73
ERROR 17:50:36,248 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 73
INFO  17:50:36,248 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:50:36,248 - Detektovan poziv globalne funkcije programa sum Linija: 80
INFO  17:50:36,248 - Detektovan poziv globalne funkcije programa inkrement Linija: 83
ERROR 17:50:36,248 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 87
ERROR 17:50:36,250 - Parsiranje NIJE uspesno zavrseno!
