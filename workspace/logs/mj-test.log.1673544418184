INFO  18:26:34,811 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  18:26:35,023 - #2 program
INFO  18:26:35,023 - #50 test302
INFO  18:26:35,023 - #7 const
INFO  18:26:35,027 - #50 int
INFO  18:26:35,028 - #50 jedan
INFO  18:26:35,029 - #8 =
INFO  18:26:35,030 - #48 1
INFO  18:26:35,031 - #17 ;
INFO  18:26:35,033 - #50 int
INFO  18:26:35,037 - #50 i
INFO  18:26:35,037 - #17 ;
INFO  18:26:35,037 - #50 bool
INFO  18:26:35,037 - #50 ibool
INFO  18:26:35,037 - #17 ;
INFO  18:26:35,038 - #50 int
INFO  18:26:35,038 - #50 niz2
INFO  18:26:35,038 - #17 ;
INFO  18:26:35,038 - #50 int
INFO  18:26:35,038 - #50 niz
INFO  18:26:35,038 - #13 [
INFO  18:26:35,040 - #14 ]
INFO  18:26:35,040 - #17 ;
INFO  18:26:35,040 - #50 int
INFO  18:26:35,040 - #50 a
INFO  18:26:35,040 - #20 ,
INFO  18:26:35,040 - #50 curr
INFO  18:26:35,040 - #17 ;
INFO  18:26:35,041 - #11 {
INFO  18:26:35,041 - #50 int
INFO  18:26:35,043 - #50 sum
INFO  18:26:35,043 - #15 (
INFO  18:26:35,045 - #50 int
INFO  18:26:35,045 - #50 z
INFO  18:26:35,046 - #20 ,
INFO  18:26:35,046 - #50 int
INFO  18:26:35,046 - #50 d
INFO  18:26:35,046 - #16 )
INFO  18:26:35,046 - #11 {
INFO  18:26:35,048 - #3 return
INFO  18:26:35,049 - #50 z
INFO  18:26:35,049 - #25 +
INFO  18:26:35,050 - #50 d
INFO  18:26:35,053 - #17 ;
INFO  18:26:35,053 - #12 }
INFO  18:26:35,054 - #50 int
INFO  18:26:35,054 - #50 inkrement
INFO  18:26:35,054 - #15 (
INFO  18:26:35,054 - #50 int
INFO  18:26:35,054 - #50 a
INFO  18:26:35,055 - #20 ,
INFO  18:26:35,058 - #50 int
INFO  18:26:35,060 - #50 inc
INFO  18:26:35,060 - #16 )
INFO  18:26:35,060 - #50 int
INFO  18:26:35,060 - #50 pom
INFO  18:26:35,060 - #17 ;
INFO  18:26:35,060 - #11 {
INFO  18:26:35,060 - #37 if
INFO  18:26:35,060 - #15 (
INFO  18:26:35,060 - #50 inc
INFO  18:26:35,060 - #31 ==
INFO  18:26:35,060 - #50 jedan
INFO  18:26:35,065 - #16 )
INFO  18:26:35,065 - #50 pom
INFO  18:26:35,065 - #8 =
INFO  18:26:35,065 - #48 1
INFO  18:26:35,067 - #17 ;
INFO  18:26:35,068 - #38 else
INFO  18:26:35,068 - #37 if
INFO  18:26:35,068 - #15 (
INFO  18:26:35,068 - #50 inc
INFO  18:26:35,068 - #31 ==
INFO  18:26:35,069 - #48 2
INFO  18:26:35,069 - #16 )
INFO  18:26:35,069 - #50 pom
INFO  18:26:35,069 - #8 =
INFO  18:26:35,069 - #50 a
INFO  18:26:35,069 - #17 ;
INFO  18:26:35,069 - #3 return
INFO  18:26:35,070 - #50 sum
INFO  18:26:35,070 - #15 (
INFO  18:26:35,070 - #50 a
INFO  18:26:35,070 - #20 ,
INFO  18:26:35,070 - #50 pom
INFO  18:26:35,070 - #16 )
INFO  18:26:35,071 - #17 ;
INFO  18:26:35,071 - #12 }
INFO  18:26:35,071 - #50 bool
INFO  18:26:35,071 - #50 verify
INFO  18:26:35,071 - #15 (
INFO  18:26:35,071 - #16 )
INFO  18:26:35,071 - #11 {
INFO  18:26:35,071 - #5 print
INFO  18:26:35,072 - #15 (
INFO  18:26:35,072 - #49 v
INFO  18:26:35,072 - #16 )
INFO  18:26:35,072 - #17 ;
INFO  18:26:35,072 - #3 return
INFO  18:26:35,072 - #47 false
INFO  18:26:35,073 - #17 ;
INFO  18:26:35,073 - #12 }
INFO  18:26:35,073 - #4 void
INFO  18:26:35,073 - #50 main
INFO  18:26:35,075 - #15 (
INFO  18:26:35,075 - #16 )
INFO  18:26:35,075 - #11 {
INFO  18:26:35,076 - #37 if
INFO  18:26:35,076 - #15 (
INFO  18:26:35,076 - #48 1
INFO  18:26:35,076 - #32 !=
INFO  18:26:35,076 - #48 1
INFO  18:26:35,079 - #16 )
INFO  18:26:35,079 - #5 print
INFO  18:26:35,079 - #15 (
INFO  18:26:35,079 - #26 -
INFO  18:26:35,079 - #48 6
INFO  18:26:35,079 - #16 )
INFO  18:26:35,079 - #17 ;
INFO  18:26:35,079 - #38 else
INFO  18:26:35,079 - #5 print
INFO  18:26:35,079 - #15 (
INFO  18:26:35,080 - #48 0
INFO  18:26:35,080 - #16 )
INFO  18:26:35,080 - #17 ;
INFO  18:26:35,080 - #50 ibool
INFO  18:26:35,080 - #8 =
INFO  18:26:35,080 - #47 false
INFO  18:26:35,081 - #17 ;
INFO  18:26:35,081 - #50 i
INFO  18:26:35,081 - #8 =
INFO  18:26:35,081 - #48 0
INFO  18:26:35,081 - #17 ;
INFO  18:26:35,081 - #40 while
INFO  18:26:35,081 - #15 (
INFO  18:26:35,081 - #50 i
INFO  18:26:35,081 - #35 <
INFO  18:26:35,081 - #48 5
INFO  18:26:35,084 - #16 )
INFO  18:26:35,084 - #11 {
INFO  18:26:35,084 - #37 if
INFO  18:26:35,085 - #15 (
INFO  18:26:35,085 - #50 i
INFO  18:26:35,085 - #31 ==
INFO  18:26:35,085 - #48 2
INFO  18:26:35,085 - #16 )
INFO  18:26:35,085 - #50 ibool
INFO  18:26:35,085 - #8 =
INFO  18:26:35,085 - #47 true
INFO  18:26:35,085 - #17 ;
INFO  18:26:35,085 - #50 i
INFO  18:26:35,085 - #27 ++
INFO  18:26:35,085 - #17 ;
INFO  18:26:35,087 - #12 }
INFO  18:26:35,087 - #37 if
INFO  18:26:35,087 - #15 (
INFO  18:26:35,087 - #50 ibool
INFO  18:26:35,087 - #16 )
INFO  18:26:35,089 - #37 if
INFO  18:26:35,089 - #15 (
INFO  18:26:35,089 - #50 i
INFO  18:26:35,089 - #31 ==
INFO  18:26:35,089 - #48 5
INFO  18:26:35,089 - #16 )
INFO  18:26:35,089 - #5 print
INFO  18:26:35,089 - #15 (
INFO  18:26:35,089 - #48 1
INFO  18:26:35,089 - #16 )
INFO  18:26:35,089 - #17 ;
INFO  18:26:35,089 - #38 else
INFO  18:26:35,089 - #5 print
INFO  18:26:35,090 - #15 (
INFO  18:26:35,090 - #26 -
INFO  18:26:35,090 - #48 1
INFO  18:26:35,090 - #16 )
INFO  18:26:35,090 - #17 ;
INFO  18:26:35,090 - #50 a
INFO  18:26:35,090 - #8 =
INFO  18:26:35,090 - #48 2
INFO  18:26:35,090 - #17 ;
INFO  18:26:35,090 - #50 niz
INFO  18:26:35,090 - #8 =
INFO  18:26:35,090 - #46 new
INFO  18:26:35,090 - #50 int
INFO  18:26:35,090 - #13 [
INFO  18:26:35,090 - #48 3
INFO  18:26:35,090 - #14 ]
INFO  18:26:35,090 - #17 ;
INFO  18:26:35,090 - #50 niz
INFO  18:26:35,090 - #13 [
INFO  18:26:35,090 - #48 0
INFO  18:26:35,090 - #14 ]
INFO  18:26:35,090 - #8 =
INFO  18:26:35,091 - #48 1
INFO  18:26:35,091 - #22 *
INFO  18:26:35,091 - #50 a
INFO  18:26:35,094 - #17 ;
INFO  18:26:35,095 - #50 niz
INFO  18:26:35,095 - #13 [
INFO  18:26:35,095 - #48 1
INFO  18:26:35,095 - #14 ]
INFO  18:26:35,095 - #8 =
INFO  18:26:35,095 - #48 2
INFO  18:26:35,095 - #22 *
INFO  18:26:35,095 - #50 a
INFO  18:26:35,095 - #17 ;
INFO  18:26:35,095 - #50 niz
INFO  18:26:35,095 - #13 [
INFO  18:26:35,095 - #48 2
INFO  18:26:35,096 - #14 ]
INFO  18:26:35,096 - #8 =
INFO  18:26:35,096 - #50 sum
INFO  18:26:35,096 - #15 (
INFO  18:26:35,096 - #50 niz
INFO  18:26:35,096 - #13 [
INFO  18:26:35,096 - #48 1
INFO  18:26:35,096 - #14 ]
INFO  18:26:35,096 - #20 ,
INFO  18:26:35,096 - #50 niz
INFO  18:26:35,096 - #13 [
INFO  18:26:35,096 - #48 0
INFO  18:26:35,097 - #14 ]
INFO  18:26:35,097 - #16 )
INFO  18:26:35,097 - #22 *
INFO  18:26:35,097 - #50 a
INFO  18:26:35,097 - #25 +
INFO  18:26:35,098 - #48 1
INFO  18:26:35,098 - #17 ;
INFO  18:26:35,098 - #37 if
INFO  18:26:35,098 - #15 (
INFO  18:26:35,098 - #50 verify
INFO  18:26:35,098 - #15 (
INFO  18:26:35,098 - #16 )
INFO  18:26:35,098 - #30 ||
INFO  18:26:35,099 - #50 niz
INFO  18:26:35,099 - #13 [
INFO  18:26:35,099 - #48 2
INFO  18:26:35,099 - #14 ]
INFO  18:26:35,099 - #31 ==
INFO  18:26:35,099 - #48 4
INFO  18:26:35,099 - #16 )
INFO  18:26:35,099 - #5 print
INFO  18:26:35,099 - #15 (
INFO  18:26:35,099 - #50 ord
INFO  18:26:35,099 - #15 (
INFO  18:26:35,099 - #49 A
INFO  18:26:35,099 - #16 )
INFO  18:26:35,099 - #16 )
INFO  18:26:35,099 - #17 ;
INFO  18:26:35,099 - #38 else
INFO  18:26:35,099 - #5 print
INFO  18:26:35,099 - #15 (
INFO  18:26:35,099 - #50 ord
INFO  18:26:35,100 - #15 (
INFO  18:26:35,100 - #49 a
INFO  18:26:35,100 - #16 )
INFO  18:26:35,100 - #16 )
INFO  18:26:35,100 - #17 ;
INFO  18:26:35,100 - #5 print
INFO  18:26:35,100 - #15 (
INFO  18:26:35,100 - #50 eol
INFO  18:26:35,100 - #16 )
INFO  18:26:35,100 - #17 ;
INFO  18:26:35,100 - #50 i
INFO  18:26:35,100 - #8 =
INFO  18:26:35,100 - #48 0
INFO  18:26:35,100 - #17 ;
INFO  18:26:35,101 - #40 while
INFO  18:26:35,102 - #15 (
INFO  18:26:35,102 - #50 i
INFO  18:26:35,102 - #35 <
INFO  18:26:35,102 - #48 10
INFO  18:26:35,102 - #16 )
INFO  18:26:35,102 - #11 {
INFO  18:26:35,102 - #37 if
INFO  18:26:35,102 - #15 (
INFO  18:26:35,102 - #50 i
INFO  18:26:35,102 - #31 ==
INFO  18:26:35,102 - #48 3
INFO  18:26:35,102 - #16 )
INFO  18:26:35,102 - #11 {
INFO  18:26:35,102 - #50 i
INFO  18:26:35,102 - #27 ++
INFO  18:26:35,103 - #17 ;
INFO  18:26:35,103 - #42 continue
INFO  18:26:35,103 - #17 ;
INFO  18:26:35,103 - #12 }
INFO  18:26:35,105 - #37 if
INFO  18:26:35,105 - #15 (
INFO  18:26:35,105 - #50 i
INFO  18:26:35,105 - #31 ==
INFO  18:26:35,105 - #48 4
INFO  18:26:35,106 - #16 )
INFO  18:26:35,106 - #41 break
INFO  18:26:35,106 - #17 ;
INFO  18:26:35,106 - #50 i
INFO  18:26:35,108 - #8 =
INFO  18:26:35,108 - #50 inkrement
INFO  18:26:35,108 - #15 (
INFO  18:26:35,108 - #50 i
INFO  18:26:35,108 - #20 ,
INFO  18:26:35,108 - #48 1
INFO  18:26:35,108 - #16 )
INFO  18:26:35,108 - #17 ;
INFO  18:26:35,109 - #12 }
INFO  18:26:35,110 - #37 if
INFO  18:26:35,110 - #15 (
INFO  18:26:35,110 - #50 i
INFO  18:26:35,110 - #31 ==
INFO  18:26:35,110 - #48 3
INFO  18:26:35,110 - #29 &&
INFO  18:26:35,110 - #50 verify
INFO  18:26:35,110 - #15 (
INFO  18:26:35,110 - #16 )
INFO  18:26:35,110 - #16 )
INFO  18:26:35,111 - #5 print
INFO  18:26:35,111 - #15 (
INFO  18:26:35,111 - #26 -
INFO  18:26:35,111 - #48 4
INFO  18:26:35,111 - #16 )
INFO  18:26:35,111 - #17 ;
INFO  18:26:35,111 - #38 else
INFO  18:26:35,111 - #5 print
INFO  18:26:35,111 - #15 (
INFO  18:26:35,111 - #48 4
INFO  18:26:35,111 - #16 )
INFO  18:26:35,111 - #17 ;
INFO  18:26:35,111 - #6 read
INFO  18:26:35,111 - #15 (
INFO  18:26:35,111 - #50 niz
INFO  18:26:35,111 - #13 [
INFO  18:26:35,112 - #48 0
INFO  18:26:35,112 - #14 ]
INFO  18:26:35,112 - #16 )
INFO  18:26:35,112 - #17 ;
INFO  18:26:35,112 - #6 read
INFO  18:26:35,112 - #15 (
INFO  18:26:35,112 - #50 niz
INFO  18:26:35,112 - #13 [
INFO  18:26:35,112 - #48 1
INFO  18:26:35,112 - #14 ]
INFO  18:26:35,113 - #16 )
INFO  18:26:35,113 - #17 ;
INFO  18:26:35,113 - #6 read
INFO  18:26:35,113 - #15 (
INFO  18:26:35,113 - #50 niz
INFO  18:26:35,113 - #13 [
INFO  18:26:35,113 - #48 2
INFO  18:26:35,113 - #14 ]
INFO  18:26:35,113 - #16 )
INFO  18:26:35,113 - #17 ;
INFO  18:26:35,113 - #5 print
INFO  18:26:35,113 - #15 (
INFO  18:26:35,114 - #50 eol
INFO  18:26:35,114 - #16 )
INFO  18:26:35,114 - #17 ;
INFO  18:26:35,115 - #5 print
INFO  18:26:35,115 - #15 (
INFO  18:26:35,115 - #50 sum
INFO  18:26:35,115 - #15 (
INFO  18:26:35,115 - #50 sum
INFO  18:26:35,115 - #15 (
INFO  18:26:35,115 - #50 niz
INFO  18:26:35,115 - #13 [
INFO  18:26:35,115 - #48 0
INFO  18:26:35,115 - #14 ]
INFO  18:26:35,115 - #20 ,
INFO  18:26:35,115 - #50 niz
INFO  18:26:35,115 - #13 [
INFO  18:26:35,116 - #48 1
INFO  18:26:35,116 - #14 ]
INFO  18:26:35,116 - #16 )
INFO  18:26:35,116 - #20 ,
INFO  18:26:35,116 - #50 niz
INFO  18:26:35,116 - #13 [
INFO  18:26:35,116 - #48 2
INFO  18:26:35,116 - #14 ]
INFO  18:26:35,117 - #16 )
INFO  18:26:35,117 - #16 )
INFO  18:26:35,117 - #17 ;
INFO  18:26:35,117 - #5 print
INFO  18:26:35,117 - #15 (
INFO  18:26:35,117 - #50 eol
INFO  18:26:35,117 - #16 )
INFO  18:26:35,117 - #17 ;
INFO  18:26:35,117 - #5 print
INFO  18:26:35,117 - #15 (
INFO  18:26:35,117 - #50 inkrement
INFO  18:26:35,117 - #15 (
INFO  18:26:35,117 - #50 niz
INFO  18:26:35,117 - #13 [
INFO  18:26:35,117 - #48 2
INFO  18:26:35,117 - #14 ]
INFO  18:26:35,118 - #20 ,
INFO  18:26:35,118 - #48 2
INFO  18:26:35,118 - #16 )
INFO  18:26:35,118 - #16 )
INFO  18:26:35,118 - #17 ;
INFO  18:26:35,118 - #50 a
INFO  18:26:35,118 - #8 =
INFO  18:26:35,118 - #48 3
INFO  18:26:35,118 - #17 ;
INFO  18:26:35,118 - #50 i
INFO  18:26:35,118 - #8 =
INFO  18:26:35,119 - #48 0
INFO  18:26:35,119 - #17 ;
INFO  18:26:35,119 - #40 while
INFO  18:26:35,119 - #15 (
INFO  18:26:35,119 - #50 i
INFO  18:26:35,119 - #35 <
INFO  18:26:35,119 - #48 3
INFO  18:26:35,119 - #16 )
INFO  18:26:35,119 - #11 {
INFO  18:26:35,119 - #50 niz
INFO  18:26:35,119 - #13 [
INFO  18:26:35,120 - #50 i
INFO  18:26:35,120 - #14 ]
INFO  18:26:35,120 - #8 =
INFO  18:26:35,120 - #50 niz
INFO  18:26:35,120 - #13 [
INFO  18:26:35,120 - #50 i
INFO  18:26:35,120 - #14 ]
INFO  18:26:35,120 - #22 *
INFO  18:26:35,120 - #48 2
INFO  18:26:35,120 - #22 *
INFO  18:26:35,120 - #50 a
INFO  18:26:35,120 - #17 ;
INFO  18:26:35,120 - #50 i
INFO  18:26:35,120 - #27 ++
INFO  18:26:35,120 - #17 ;
INFO  18:26:35,120 - #12 }
INFO  18:26:35,121 - #50 niz
INFO  18:26:35,121 - #19 .
INFO  18:26:35,121 - #10 foreach
INFO  18:26:35,121 - #15 (
INFO  18:26:35,121 - #50 curr
INFO  18:26:35,121 - #8 =
ERROR 18:26:35,121 - 
Syntax error on line 92
INFO  18:26:35,121 - #33 >
INFO  18:26:35,121 - #5 print
INFO  18:26:35,121 - #15 (
INFO  18:26:35,123 - #50 curr
INFO  18:26:35,123 - #16 )
INFO  18:26:35,123 - #17 ;
INFO  18:26:35,123 - #16 )
INFO  18:26:35,123 - #17 ;
INFO  18:26:35,123 - #5 print
INFO  18:26:35,124 - #15 (
INFO  18:26:35,124 - #50 eol
ERROR 18:26:35,124 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  18:26:35,129 - #16 )
INFO  18:26:35,129 - #17 ;
INFO  18:26:35,129 - #50 niz2
INFO  18:26:35,129 - #8 =
INFO  18:26:35,129 - #48 0
INFO  18:26:35,129 - #17 ;
INFO  18:26:35,129 - #50 niz
INFO  18:26:35,129 - #19 .
INFO  18:26:35,129 - #10 foreach
INFO  18:26:35,129 - #15 (
INFO  18:26:35,129 - #50 curr
INFO  18:26:35,129 - #8 =
ERROR 18:26:35,129 - 
Syntax error on line 96
INFO  18:26:35,129 - #33 >
INFO  18:26:35,129 - #11 {
INFO  18:26:35,129 - #50 niz2
INFO  18:26:35,129 - #8 =
INFO  18:26:35,129 - #50 niz2
INFO  18:26:35,129 - #25 +
INFO  18:26:35,130 - #50 curr
INFO  18:26:35,130 - #22 *
INFO  18:26:35,130 - #50 curr
INFO  18:26:35,130 - #17 ;
INFO  18:26:35,130 - #12 }
INFO  18:26:35,130 - #16 )
INFO  18:26:35,130 - #17 ;
INFO  18:26:35,130 - #5 print
INFO  18:26:35,130 - #15 (
INFO  18:26:35,130 - #50 niz2
ERROR 18:26:35,130 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  18:26:35,130 - #16 )
INFO  18:26:35,130 - #17 ;
INFO  18:26:35,130 - #12 }
INFO  18:26:35,130 - #12 }
INFO  18:26:35,153 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  18:26:35,153 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  18:26:35,155 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  18:26:35,155 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  18:26:35,155 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  18:26:35,155 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  18:26:35,155 - Detektovana deklaracija globalne promenljive curr Linija: 13
INFO  18:26:35,155 - Detektovana deklaracija lokalne promenljive pom Linija: 24
INFO  18:26:35,159 - Detektovan poziv globalne funkcije programa sum Linija: 29
INFO  18:26:35,160 - Detektovan poziv globalne funkcije programa sum Linija: 57
INFO  18:26:35,160 - Detektovan poziv globalne funkcije programa verify Linija: 58
INFO  18:26:35,160 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  18:26:35,161 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 18:26:35,162 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 18:26:35,162 - Greska - break moze da se koristi samo unutar while / foreach petlji!
ERROR 18:26:35,162 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 70
