INFO  16:54:09,068 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  16:54:09,259 - #2 program
INFO  16:54:09,259 - #50 test302
INFO  16:54:09,259 - #7 const
INFO  16:54:09,263 - #50 int
INFO  16:54:09,263 - #50 jedan
INFO  16:54:09,265 - #8 =
INFO  16:54:09,265 - #48 1
INFO  16:54:09,266 - #17 ;
INFO  16:54:09,271 - #50 int
INFO  16:54:09,274 - #50 i
INFO  16:54:09,275 - #17 ;
INFO  16:54:09,275 - #50 bool
INFO  16:54:09,276 - #50 ibool
INFO  16:54:09,276 - #17 ;
INFO  16:54:09,276 - #50 int
INFO  16:54:09,276 - #50 niz2
INFO  16:54:09,276 - #17 ;
INFO  16:54:09,277 - #50 int
INFO  16:54:09,277 - #50 niz
INFO  16:54:09,277 - #13 [
INFO  16:54:09,279 - #14 ]
INFO  16:54:09,279 - #17 ;
INFO  16:54:09,279 - #50 int
INFO  16:54:09,279 - #50 a
INFO  16:54:09,279 - #20 ,
INFO  16:54:09,279 - #50 curr
INFO  16:54:09,280 - #17 ;
INFO  16:54:09,280 - #11 {
INFO  16:54:09,280 - #50 int
INFO  16:54:09,282 - #50 sum
INFO  16:54:09,282 - #15 (
INFO  16:54:09,284 - #50 int
INFO  16:54:09,284 - #50 z
INFO  16:54:09,284 - #20 ,
INFO  16:54:09,284 - #50 int
INFO  16:54:09,284 - #50 d
INFO  16:54:09,284 - #16 )
INFO  16:54:09,284 - #11 {
INFO  16:54:09,286 - #3 return
INFO  16:54:09,289 - #50 z
INFO  16:54:09,289 - #25 +
INFO  16:54:09,289 - #50 d
INFO  16:54:09,294 - #17 ;
INFO  16:54:09,294 - #12 }
INFO  16:54:09,294 - #50 int
INFO  16:54:09,295 - #50 inkrement
INFO  16:54:09,295 - #15 (
INFO  16:54:09,295 - #50 int
INFO  16:54:09,295 - #50 a
INFO  16:54:09,295 - #20 ,
INFO  16:54:09,299 - #50 int
INFO  16:54:09,299 - #50 inc
INFO  16:54:09,299 - #16 )
INFO  16:54:09,300 - #50 int
INFO  16:54:09,300 - #50 pom
INFO  16:54:09,300 - #17 ;
INFO  16:54:09,300 - #11 {
INFO  16:54:09,300 - #37 if
INFO  16:54:09,300 - #15 (
INFO  16:54:09,300 - #50 inc
INFO  16:54:09,300 - #31 ==
INFO  16:54:09,300 - #50 jedan
INFO  16:54:09,304 - #16 )
INFO  16:54:09,304 - #50 pom
INFO  16:54:09,304 - #8 =
INFO  16:54:09,305 - #48 1
INFO  16:54:09,306 - #17 ;
INFO  16:54:09,307 - #38 else
INFO  16:54:09,307 - #37 if
INFO  16:54:09,307 - #15 (
INFO  16:54:09,307 - #50 inc
INFO  16:54:09,307 - #31 ==
INFO  16:54:09,308 - #48 2
INFO  16:54:09,308 - #16 )
INFO  16:54:09,308 - #50 pom
INFO  16:54:09,308 - #8 =
INFO  16:54:09,308 - #50 a
INFO  16:54:09,308 - #17 ;
INFO  16:54:09,308 - #3 return
INFO  16:54:09,309 - #50 sum
INFO  16:54:09,309 - #15 (
INFO  16:54:09,309 - #50 a
INFO  16:54:09,309 - #20 ,
INFO  16:54:09,310 - #50 pom
INFO  16:54:09,310 - #16 )
INFO  16:54:09,311 - #17 ;
INFO  16:54:09,311 - #12 }
INFO  16:54:09,311 - #50 bool
INFO  16:54:09,311 - #50 verify
INFO  16:54:09,312 - #15 (
INFO  16:54:09,312 - #16 )
INFO  16:54:09,312 - #11 {
INFO  16:54:09,312 - #5 print
INFO  16:54:09,312 - #15 (
INFO  16:54:09,312 - #49 v
INFO  16:54:09,312 - #16 )
INFO  16:54:09,313 - #17 ;
INFO  16:54:09,313 - #3 return
INFO  16:54:09,313 - #47 false
INFO  16:54:09,313 - #17 ;
INFO  16:54:09,314 - #12 }
INFO  16:54:09,314 - #4 void
INFO  16:54:09,314 - #50 main
INFO  16:54:09,316 - #15 (
INFO  16:54:09,316 - #16 )
INFO  16:54:09,316 - #11 {
INFO  16:54:09,317 - #37 if
INFO  16:54:09,317 - #15 (
INFO  16:54:09,317 - #48 1
INFO  16:54:09,317 - #32 !=
INFO  16:54:09,317 - #48 1
INFO  16:54:09,318 - #16 )
INFO  16:54:09,319 - #5 print
INFO  16:54:09,319 - #15 (
INFO  16:54:09,319 - #26 -
INFO  16:54:09,319 - #48 6
INFO  16:54:09,319 - #16 )
INFO  16:54:09,319 - #17 ;
INFO  16:54:09,319 - #38 else
INFO  16:54:09,320 - #5 print
INFO  16:54:09,320 - #15 (
INFO  16:54:09,320 - #48 0
INFO  16:54:09,320 - #16 )
INFO  16:54:09,320 - #17 ;
INFO  16:54:09,320 - #50 ibool
INFO  16:54:09,320 - #8 =
INFO  16:54:09,320 - #47 false
INFO  16:54:09,320 - #17 ;
INFO  16:54:09,320 - #50 i
INFO  16:54:09,321 - #8 =
INFO  16:54:09,321 - #48 0
INFO  16:54:09,321 - #17 ;
INFO  16:54:09,321 - #40 while
INFO  16:54:09,321 - #15 (
INFO  16:54:09,321 - #50 i
INFO  16:54:09,321 - #35 <
INFO  16:54:09,321 - #48 5
INFO  16:54:09,324 - #16 )
INFO  16:54:09,324 - #11 {
INFO  16:54:09,324 - #37 if
INFO  16:54:09,325 - #15 (
INFO  16:54:09,325 - #50 i
INFO  16:54:09,325 - #31 ==
INFO  16:54:09,325 - #48 2
INFO  16:54:09,325 - #16 )
INFO  16:54:09,325 - #50 ibool
INFO  16:54:09,325 - #8 =
INFO  16:54:09,325 - #47 true
INFO  16:54:09,325 - #17 ;
INFO  16:54:09,326 - #50 i
INFO  16:54:09,326 - #27 ++
INFO  16:54:09,326 - #17 ;
INFO  16:54:09,328 - #12 }
INFO  16:54:09,328 - #37 if
INFO  16:54:09,328 - #15 (
INFO  16:54:09,328 - #50 ibool
INFO  16:54:09,328 - #16 )
INFO  16:54:09,329 - #37 if
INFO  16:54:09,329 - #15 (
INFO  16:54:09,329 - #50 i
INFO  16:54:09,329 - #31 ==
INFO  16:54:09,329 - #48 5
INFO  16:54:09,329 - #16 )
INFO  16:54:09,329 - #5 print
INFO  16:54:09,329 - #15 (
INFO  16:54:09,329 - #48 1
INFO  16:54:09,330 - #16 )
INFO  16:54:09,330 - #17 ;
INFO  16:54:09,330 - #38 else
INFO  16:54:09,330 - #5 print
INFO  16:54:09,330 - #15 (
INFO  16:54:09,330 - #26 -
INFO  16:54:09,330 - #48 1
INFO  16:54:09,330 - #16 )
INFO  16:54:09,330 - #17 ;
INFO  16:54:09,330 - #50 a
INFO  16:54:09,331 - #8 =
INFO  16:54:09,331 - #48 2
INFO  16:54:09,331 - #17 ;
INFO  16:54:09,331 - #50 niz
INFO  16:54:09,331 - #8 =
INFO  16:54:09,331 - #46 new
INFO  16:54:09,331 - #50 int
INFO  16:54:09,331 - #13 [
INFO  16:54:09,331 - #48 3
INFO  16:54:09,332 - #14 ]
INFO  16:54:09,332 - #17 ;
INFO  16:54:09,332 - #50 niz
INFO  16:54:09,332 - #13 [
INFO  16:54:09,332 - #48 0
INFO  16:54:09,333 - #14 ]
INFO  16:54:09,333 - #8 =
INFO  16:54:09,333 - #48 1
INFO  16:54:09,333 - #22 *
INFO  16:54:09,333 - #50 a
INFO  16:54:09,337 - #17 ;
INFO  16:54:09,337 - #50 niz
INFO  16:54:09,338 - #13 [
INFO  16:54:09,338 - #48 1
INFO  16:54:09,338 - #14 ]
INFO  16:54:09,338 - #8 =
INFO  16:54:09,338 - #48 2
INFO  16:54:09,338 - #22 *
INFO  16:54:09,338 - #50 a
INFO  16:54:09,338 - #17 ;
INFO  16:54:09,338 - #50 niz
INFO  16:54:09,339 - #13 [
INFO  16:54:09,339 - #48 2
INFO  16:54:09,339 - #14 ]
INFO  16:54:09,339 - #8 =
INFO  16:54:09,339 - #50 sum
INFO  16:54:09,339 - #15 (
INFO  16:54:09,339 - #50 niz
INFO  16:54:09,339 - #13 [
INFO  16:54:09,339 - #48 1
INFO  16:54:09,339 - #14 ]
INFO  16:54:09,339 - #20 ,
INFO  16:54:09,339 - #50 niz
INFO  16:54:09,340 - #13 [
INFO  16:54:09,340 - #48 0
INFO  16:54:09,340 - #14 ]
INFO  16:54:09,340 - #16 )
INFO  16:54:09,340 - #22 *
INFO  16:54:09,340 - #50 a
INFO  16:54:09,340 - #25 +
INFO  16:54:09,340 - #48 1
INFO  16:54:09,340 - #17 ;
INFO  16:54:09,340 - #37 if
INFO  16:54:09,340 - #15 (
INFO  16:54:09,341 - #50 verify
INFO  16:54:09,341 - #15 (
INFO  16:54:09,341 - #16 )
INFO  16:54:09,341 - #30 ||
INFO  16:54:09,341 - #50 niz
INFO  16:54:09,341 - #13 [
INFO  16:54:09,341 - #48 2
INFO  16:54:09,341 - #14 ]
INFO  16:54:09,342 - #31 ==
INFO  16:54:09,342 - #48 4
INFO  16:54:09,342 - #16 )
INFO  16:54:09,342 - #5 print
INFO  16:54:09,342 - #15 (
INFO  16:54:09,342 - #50 ord
INFO  16:54:09,342 - #15 (
INFO  16:54:09,343 - #49 A
INFO  16:54:09,343 - #16 )
INFO  16:54:09,343 - #16 )
INFO  16:54:09,343 - #17 ;
INFO  16:54:09,343 - #38 else
INFO  16:54:09,343 - #5 print
INFO  16:54:09,343 - #15 (
INFO  16:54:09,343 - #50 ord
INFO  16:54:09,343 - #15 (
INFO  16:54:09,343 - #49 a
INFO  16:54:09,343 - #16 )
INFO  16:54:09,344 - #16 )
INFO  16:54:09,344 - #17 ;
INFO  16:54:09,344 - #5 print
INFO  16:54:09,344 - #15 (
INFO  16:54:09,344 - #50 eol
INFO  16:54:09,344 - #16 )
INFO  16:54:09,344 - #17 ;
INFO  16:54:09,345 - #50 i
INFO  16:54:09,345 - #8 =
INFO  16:54:09,345 - #48 0
INFO  16:54:09,345 - #17 ;
INFO  16:54:09,345 - #40 while
INFO  16:54:09,345 - #15 (
INFO  16:54:09,345 - #50 i
INFO  16:54:09,345 - #35 <
INFO  16:54:09,345 - #48 10
INFO  16:54:09,345 - #16 )
INFO  16:54:09,345 - #11 {
INFO  16:54:09,345 - #37 if
INFO  16:54:09,346 - #15 (
INFO  16:54:09,346 - #50 i
INFO  16:54:09,346 - #31 ==
INFO  16:54:09,346 - #48 3
INFO  16:54:09,346 - #16 )
INFO  16:54:09,346 - #11 {
INFO  16:54:09,346 - #50 i
INFO  16:54:09,346 - #27 ++
INFO  16:54:09,346 - #17 ;
INFO  16:54:09,347 - #42 continue
INFO  16:54:09,347 - #17 ;
INFO  16:54:09,347 - #12 }
INFO  16:54:09,349 - #37 if
INFO  16:54:09,349 - #15 (
INFO  16:54:09,349 - #50 i
INFO  16:54:09,349 - #31 ==
INFO  16:54:09,349 - #48 4
INFO  16:54:09,349 - #16 )
INFO  16:54:09,349 - #41 break
INFO  16:54:09,350 - #17 ;
INFO  16:54:09,351 - #50 i
INFO  16:54:09,353 - #8 =
INFO  16:54:09,353 - #50 inkrement
INFO  16:54:09,353 - #15 (
INFO  16:54:09,353 - #50 i
INFO  16:54:09,353 - #20 ,
INFO  16:54:09,353 - #48 1
INFO  16:54:09,353 - #16 )
INFO  16:54:09,353 - #17 ;
INFO  16:54:09,354 - #12 }
INFO  16:54:09,354 - #37 if
INFO  16:54:09,354 - #15 (
INFO  16:54:09,354 - #50 i
INFO  16:54:09,354 - #31 ==
INFO  16:54:09,354 - #48 3
INFO  16:54:09,354 - #29 &&
INFO  16:54:09,354 - #50 verify
INFO  16:54:09,354 - #15 (
INFO  16:54:09,354 - #16 )
INFO  16:54:09,354 - #16 )
INFO  16:54:09,354 - #5 print
INFO  16:54:09,355 - #15 (
INFO  16:54:09,355 - #26 -
INFO  16:54:09,355 - #48 4
INFO  16:54:09,355 - #16 )
INFO  16:54:09,355 - #17 ;
INFO  16:54:09,355 - #38 else
INFO  16:54:09,355 - #5 print
INFO  16:54:09,355 - #15 (
INFO  16:54:09,355 - #48 4
INFO  16:54:09,356 - #16 )
INFO  16:54:09,356 - #17 ;
INFO  16:54:09,356 - #6 read
INFO  16:54:09,356 - #15 (
INFO  16:54:09,356 - #50 niz
INFO  16:54:09,356 - #13 [
INFO  16:54:09,356 - #48 0
INFO  16:54:09,356 - #14 ]
INFO  16:54:09,356 - #16 )
INFO  16:54:09,356 - #17 ;
INFO  16:54:09,356 - #6 read
INFO  16:54:09,357 - #15 (
INFO  16:54:09,357 - #50 niz
INFO  16:54:09,357 - #13 [
INFO  16:54:09,357 - #48 1
INFO  16:54:09,357 - #14 ]
INFO  16:54:09,357 - #16 )
INFO  16:54:09,357 - #17 ;
INFO  16:54:09,357 - #6 read
INFO  16:54:09,357 - #15 (
INFO  16:54:09,357 - #50 niz
INFO  16:54:09,357 - #13 [
INFO  16:54:09,357 - #48 2
INFO  16:54:09,357 - #14 ]
INFO  16:54:09,358 - #16 )
INFO  16:54:09,358 - #17 ;
INFO  16:54:09,358 - #5 print
INFO  16:54:09,358 - #15 (
INFO  16:54:09,358 - #50 eol
INFO  16:54:09,358 - #16 )
INFO  16:54:09,358 - #17 ;
INFO  16:54:09,359 - #5 print
INFO  16:54:09,359 - #15 (
INFO  16:54:09,359 - #50 sum
INFO  16:54:09,359 - #15 (
INFO  16:54:09,360 - #50 sum
INFO  16:54:09,360 - #15 (
INFO  16:54:09,360 - #50 niz
INFO  16:54:09,360 - #13 [
INFO  16:54:09,360 - #48 0
INFO  16:54:09,360 - #14 ]
INFO  16:54:09,360 - #20 ,
INFO  16:54:09,360 - #50 niz
INFO  16:54:09,361 - #13 [
INFO  16:54:09,361 - #48 1
INFO  16:54:09,361 - #14 ]
INFO  16:54:09,361 - #16 )
INFO  16:54:09,361 - #20 ,
INFO  16:54:09,361 - #50 niz
INFO  16:54:09,361 - #13 [
INFO  16:54:09,361 - #48 2
INFO  16:54:09,362 - #14 ]
INFO  16:54:09,362 - #16 )
INFO  16:54:09,362 - #16 )
INFO  16:54:09,362 - #17 ;
INFO  16:54:09,362 - #5 print
INFO  16:54:09,362 - #15 (
INFO  16:54:09,362 - #50 eol
INFO  16:54:09,362 - #16 )
INFO  16:54:09,362 - #17 ;
INFO  16:54:09,362 - #5 print
INFO  16:54:09,363 - #15 (
INFO  16:54:09,363 - #50 inkrement
INFO  16:54:09,363 - #15 (
INFO  16:54:09,363 - #50 niz
INFO  16:54:09,363 - #13 [
INFO  16:54:09,363 - #48 2
INFO  16:54:09,363 - #14 ]
INFO  16:54:09,363 - #20 ,
INFO  16:54:09,363 - #48 2
INFO  16:54:09,363 - #16 )
INFO  16:54:09,363 - #16 )
INFO  16:54:09,363 - #17 ;
INFO  16:54:09,363 - #50 a
INFO  16:54:09,363 - #8 =
INFO  16:54:09,364 - #48 3
INFO  16:54:09,364 - #17 ;
INFO  16:54:09,364 - #50 i
INFO  16:54:09,364 - #8 =
INFO  16:54:09,364 - #48 0
INFO  16:54:09,364 - #17 ;
INFO  16:54:09,364 - #40 while
INFO  16:54:09,364 - #15 (
INFO  16:54:09,364 - #50 i
INFO  16:54:09,364 - #35 <
INFO  16:54:09,364 - #48 3
INFO  16:54:09,364 - #16 )
INFO  16:54:09,364 - #11 {
INFO  16:54:09,364 - #50 niz
INFO  16:54:09,365 - #13 [
INFO  16:54:09,365 - #50 i
INFO  16:54:09,365 - #14 ]
INFO  16:54:09,365 - #8 =
INFO  16:54:09,365 - #50 niz
INFO  16:54:09,365 - #13 [
INFO  16:54:09,365 - #50 i
INFO  16:54:09,365 - #14 ]
INFO  16:54:09,365 - #22 *
INFO  16:54:09,365 - #48 2
INFO  16:54:09,365 - #22 *
INFO  16:54:09,365 - #50 a
INFO  16:54:09,365 - #17 ;
INFO  16:54:09,365 - #50 i
INFO  16:54:09,365 - #27 ++
INFO  16:54:09,366 - #17 ;
INFO  16:54:09,366 - #12 }
INFO  16:54:09,366 - #50 niz
INFO  16:54:09,366 - #19 .
INFO  16:54:09,366 - #10 foreach
INFO  16:54:09,366 - #15 (
INFO  16:54:09,366 - #50 curr
INFO  16:54:09,366 - #8 =
ERROR 16:54:09,366 - 
Syntax error on line 92
INFO  16:54:09,367 - #33 >
INFO  16:54:09,367 - #5 print
INFO  16:54:09,367 - #15 (
INFO  16:54:09,368 - #50 curr
INFO  16:54:09,368 - #16 )
INFO  16:54:09,369 - #17 ;
INFO  16:54:09,369 - #16 )
INFO  16:54:09,369 - #17 ;
INFO  16:54:09,369 - #5 print
INFO  16:54:09,369 - #15 (
INFO  16:54:09,369 - #50 eol
ERROR 16:54:09,369 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  16:54:09,377 - #16 )
INFO  16:54:09,378 - #17 ;
INFO  16:54:09,378 - #50 niz2
INFO  16:54:09,378 - #8 =
INFO  16:54:09,378 - #48 0
INFO  16:54:09,378 - #17 ;
INFO  16:54:09,378 - #50 niz
INFO  16:54:09,378 - #19 .
INFO  16:54:09,378 - #10 foreach
INFO  16:54:09,378 - #15 (
INFO  16:54:09,378 - #50 curr
INFO  16:54:09,378 - #8 =
ERROR 16:54:09,378 - 
Syntax error on line 96
INFO  16:54:09,379 - #33 >
INFO  16:54:09,379 - #11 {
INFO  16:54:09,379 - #50 niz2
INFO  16:54:09,379 - #8 =
INFO  16:54:09,379 - #50 niz2
INFO  16:54:09,379 - #25 +
INFO  16:54:09,379 - #50 curr
INFO  16:54:09,379 - #22 *
INFO  16:54:09,379 - #50 curr
INFO  16:54:09,379 - #17 ;
INFO  16:54:09,379 - #12 }
INFO  16:54:09,379 - #16 )
INFO  16:54:09,379 - #17 ;
INFO  16:54:09,379 - #5 print
INFO  16:54:09,379 - #15 (
INFO  16:54:09,379 - #50 niz2
ERROR 16:54:09,379 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  16:54:09,379 - #16 )
INFO  16:54:09,380 - #17 ;
INFO  16:54:09,380 - #12 }
INFO  16:54:09,380 - #12 }
INFO  16:54:09,404 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  16:54:09,405 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  16:54:09,405 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  16:54:09,405 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  16:54:09,405 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  16:54:09,405 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  16:54:09,405 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 16:54:09,406 - Greska - korisceno ime nikada nije deklarisano! Linija: 19
ERROR 16:54:09,406 - Greska - jedini tip dozvoljen kod operacije sabiranja je int! Linija: 19
ERROR 16:54:09,406 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  16:54:09,406 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 16:54:09,406 - Greska - korisceno ime nikada nije deklarisano! Linija: 26
ERROR 16:54:09,407 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 16:54:09,411 - Greska - korisceno ime nikada nije deklarisano! Linija: 27
ERROR 16:54:09,411 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
ERROR 16:54:09,411 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 29
ERROR 16:54:09,411 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 16:54:09,412 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 16:54:09,412 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 16:54:09,412 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 16:54:09,412 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 16:54:09,412 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
ERROR 16:54:09,412 - Greska - broj formalnih i stvarnih parametara funkcije nije isti! Linija: 57
