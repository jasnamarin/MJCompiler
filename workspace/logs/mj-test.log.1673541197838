INFO  17:01:55,281 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:01:55,599 - #2 program
INFO  17:01:55,600 - #50 test302
INFO  17:01:55,600 - #7 const
INFO  17:01:55,605 - #50 int
INFO  17:01:55,605 - #50 jedan
INFO  17:01:55,608 - #8 =
INFO  17:01:55,609 - #48 1
INFO  17:01:55,609 - #17 ;
INFO  17:01:55,614 - #50 int
INFO  17:01:55,617 - #50 i
INFO  17:01:55,617 - #17 ;
INFO  17:01:55,618 - #50 bool
INFO  17:01:55,619 - #50 ibool
INFO  17:01:55,619 - #17 ;
INFO  17:01:55,619 - #50 int
INFO  17:01:55,620 - #50 niz2
INFO  17:01:55,620 - #17 ;
INFO  17:01:55,620 - #50 int
INFO  17:01:55,620 - #50 niz
INFO  17:01:55,620 - #13 [
INFO  17:01:55,622 - #14 ]
INFO  17:01:55,622 - #17 ;
INFO  17:01:55,623 - #50 int
INFO  17:01:55,623 - #50 a
INFO  17:01:55,623 - #20 ,
INFO  17:01:55,623 - #50 curr
INFO  17:01:55,623 - #17 ;
INFO  17:01:55,624 - #11 {
INFO  17:01:55,624 - #50 int
INFO  17:01:55,627 - #50 sum
INFO  17:01:55,627 - #15 (
INFO  17:01:55,630 - #50 int
INFO  17:01:55,630 - #50 z
INFO  17:01:55,630 - #20 ,
INFO  17:01:55,631 - #50 int
INFO  17:01:55,631 - #50 d
INFO  17:01:55,631 - #16 )
INFO  17:01:55,632 - #11 {
INFO  17:01:55,635 - #3 return
INFO  17:01:55,637 - #50 z
INFO  17:01:55,637 - #25 +
INFO  17:01:55,639 - #50 d
INFO  17:01:55,643 - #17 ;
INFO  17:01:55,644 - #12 }
INFO  17:01:55,645 - #50 int
INFO  17:01:55,646 - #50 inkrement
INFO  17:01:55,646 - #15 (
INFO  17:01:55,646 - #50 int
INFO  17:01:55,646 - #50 a
INFO  17:01:55,646 - #20 ,
INFO  17:01:55,646 - #50 int
INFO  17:01:55,647 - #50 inc
INFO  17:01:55,647 - #16 )
INFO  17:01:55,652 - #50 int
INFO  17:01:55,653 - #50 pom
INFO  17:01:55,653 - #17 ;
INFO  17:01:55,653 - #11 {
INFO  17:01:55,653 - #37 if
INFO  17:01:55,653 - #15 (
INFO  17:01:55,653 - #50 inc
INFO  17:01:55,653 - #31 ==
INFO  17:01:55,654 - #50 jedan
INFO  17:01:55,659 - #16 )
INFO  17:01:55,661 - #50 pom
INFO  17:01:55,661 - #8 =
INFO  17:01:55,661 - #48 1
INFO  17:01:55,663 - #17 ;
INFO  17:01:55,664 - #38 else
INFO  17:01:55,665 - #37 if
INFO  17:01:55,665 - #15 (
INFO  17:01:55,665 - #50 inc
INFO  17:01:55,665 - #31 ==
INFO  17:01:55,665 - #48 2
INFO  17:01:55,665 - #16 )
INFO  17:01:55,665 - #50 pom
INFO  17:01:55,666 - #8 =
INFO  17:01:55,666 - #50 a
INFO  17:01:55,666 - #17 ;
INFO  17:01:55,666 - #3 return
INFO  17:01:55,667 - #50 sum
INFO  17:01:55,667 - #15 (
INFO  17:01:55,667 - #50 a
INFO  17:01:55,667 - #20 ,
INFO  17:01:55,668 - #50 pom
INFO  17:01:55,668 - #16 )
INFO  17:01:55,668 - #17 ;
INFO  17:01:55,669 - #12 }
INFO  17:01:55,669 - #50 bool
INFO  17:01:55,669 - #50 verify
INFO  17:01:55,669 - #15 (
INFO  17:01:55,669 - #16 )
INFO  17:01:55,669 - #11 {
INFO  17:01:55,669 - #5 print
INFO  17:01:55,670 - #15 (
INFO  17:01:55,670 - #49 v
INFO  17:01:55,670 - #16 )
INFO  17:01:55,670 - #17 ;
INFO  17:01:55,671 - #3 return
INFO  17:01:55,671 - #47 false
INFO  17:01:55,671 - #17 ;
INFO  17:01:55,671 - #12 }
INFO  17:01:55,671 - #4 void
INFO  17:01:55,672 - #50 main
INFO  17:01:55,674 - #15 (
INFO  17:01:55,674 - #16 )
INFO  17:01:55,675 - #11 {
INFO  17:01:55,675 - #37 if
INFO  17:01:55,675 - #15 (
INFO  17:01:55,675 - #48 1
INFO  17:01:55,675 - #32 !=
INFO  17:01:55,675 - #48 1
INFO  17:01:55,677 - #16 )
INFO  17:01:55,678 - #5 print
INFO  17:01:55,678 - #15 (
INFO  17:01:55,678 - #26 -
INFO  17:01:55,678 - #48 6
INFO  17:01:55,678 - #16 )
INFO  17:01:55,678 - #17 ;
INFO  17:01:55,679 - #38 else
INFO  17:01:55,679 - #5 print
INFO  17:01:55,679 - #15 (
INFO  17:01:55,679 - #48 0
INFO  17:01:55,679 - #16 )
INFO  17:01:55,679 - #17 ;
INFO  17:01:55,679 - #50 ibool
INFO  17:01:55,679 - #8 =
INFO  17:01:55,680 - #47 false
INFO  17:01:55,680 - #17 ;
INFO  17:01:55,680 - #50 i
INFO  17:01:55,680 - #8 =
INFO  17:01:55,680 - #48 0
INFO  17:01:55,680 - #17 ;
INFO  17:01:55,680 - #40 while
INFO  17:01:55,681 - #15 (
INFO  17:01:55,681 - #50 i
INFO  17:01:55,681 - #35 <
INFO  17:01:55,681 - #48 5
INFO  17:01:55,684 - #16 )
INFO  17:01:55,684 - #11 {
INFO  17:01:55,684 - #37 if
INFO  17:01:55,684 - #15 (
INFO  17:01:55,684 - #50 i
INFO  17:01:55,684 - #31 ==
INFO  17:01:55,684 - #48 2
INFO  17:01:55,684 - #16 )
INFO  17:01:55,684 - #50 ibool
INFO  17:01:55,684 - #8 =
INFO  17:01:55,685 - #47 true
INFO  17:01:55,685 - #17 ;
INFO  17:01:55,685 - #50 i
INFO  17:01:55,685 - #27 ++
INFO  17:01:55,685 - #17 ;
INFO  17:01:55,688 - #12 }
INFO  17:01:55,688 - #37 if
INFO  17:01:55,688 - #15 (
INFO  17:01:55,689 - #50 ibool
INFO  17:01:55,689 - #16 )
INFO  17:01:55,689 - #37 if
INFO  17:01:55,689 - #15 (
INFO  17:01:55,689 - #50 i
INFO  17:01:55,689 - #31 ==
INFO  17:01:55,689 - #48 5
INFO  17:01:55,690 - #16 )
INFO  17:01:55,690 - #5 print
INFO  17:01:55,690 - #15 (
INFO  17:01:55,690 - #48 1
INFO  17:01:55,690 - #16 )
INFO  17:01:55,690 - #17 ;
INFO  17:01:55,690 - #38 else
INFO  17:01:55,690 - #5 print
INFO  17:01:55,690 - #15 (
INFO  17:01:55,691 - #26 -
INFO  17:01:55,691 - #48 1
INFO  17:01:55,691 - #16 )
INFO  17:01:55,691 - #17 ;
INFO  17:01:55,691 - #50 a
INFO  17:01:55,691 - #8 =
INFO  17:01:55,691 - #48 2
INFO  17:01:55,691 - #17 ;
INFO  17:01:55,691 - #50 niz
INFO  17:01:55,692 - #8 =
INFO  17:01:55,692 - #46 new
INFO  17:01:55,693 - #50 int
INFO  17:01:55,693 - #13 [
INFO  17:01:55,693 - #48 3
INFO  17:01:55,693 - #14 ]
INFO  17:01:55,693 - #17 ;
INFO  17:01:55,693 - #50 niz
INFO  17:01:55,693 - #13 [
INFO  17:01:55,694 - #48 0
INFO  17:01:55,694 - #14 ]
INFO  17:01:55,694 - #8 =
INFO  17:01:55,694 - #48 1
INFO  17:01:55,694 - #22 *
INFO  17:01:55,694 - #50 a
INFO  17:01:55,702 - #17 ;
INFO  17:01:55,702 - #50 niz
INFO  17:01:55,702 - #13 [
INFO  17:01:55,702 - #48 1
INFO  17:01:55,702 - #14 ]
INFO  17:01:55,702 - #8 =
INFO  17:01:55,702 - #48 2
INFO  17:01:55,702 - #22 *
INFO  17:01:55,702 - #50 a
INFO  17:01:55,702 - #17 ;
INFO  17:01:55,703 - #50 niz
INFO  17:01:55,703 - #13 [
INFO  17:01:55,703 - #48 2
INFO  17:01:55,703 - #14 ]
INFO  17:01:55,703 - #8 =
INFO  17:01:55,703 - #50 sum
INFO  17:01:55,703 - #15 (
INFO  17:01:55,703 - #50 niz
INFO  17:01:55,703 - #13 [
INFO  17:01:55,703 - #48 1
INFO  17:01:55,703 - #14 ]
INFO  17:01:55,704 - #20 ,
INFO  17:01:55,704 - #50 niz
INFO  17:01:55,704 - #13 [
INFO  17:01:55,704 - #48 0
INFO  17:01:55,704 - #14 ]
INFO  17:01:55,704 - #16 )
INFO  17:01:55,704 - #22 *
INFO  17:01:55,704 - #50 a
INFO  17:01:55,704 - #25 +
INFO  17:01:55,704 - #48 1
INFO  17:01:55,704 - #17 ;
INFO  17:01:55,705 - #37 if
INFO  17:01:55,705 - #15 (
INFO  17:01:55,705 - #50 verify
INFO  17:01:55,705 - #15 (
INFO  17:01:55,705 - #16 )
INFO  17:01:55,705 - #30 ||
INFO  17:01:55,705 - #50 niz
INFO  17:01:55,706 - #13 [
INFO  17:01:55,706 - #48 2
INFO  17:01:55,706 - #14 ]
INFO  17:01:55,706 - #31 ==
INFO  17:01:55,706 - #48 4
INFO  17:01:55,706 - #16 )
INFO  17:01:55,706 - #5 print
INFO  17:01:55,707 - #15 (
INFO  17:01:55,707 - #50 ord
INFO  17:01:55,707 - #15 (
INFO  17:01:55,707 - #49 A
INFO  17:01:55,707 - #16 )
INFO  17:01:55,707 - #16 )
INFO  17:01:55,707 - #17 ;
INFO  17:01:55,707 - #38 else
INFO  17:01:55,707 - #5 print
INFO  17:01:55,707 - #15 (
INFO  17:01:55,708 - #50 ord
INFO  17:01:55,708 - #15 (
INFO  17:01:55,708 - #49 a
INFO  17:01:55,708 - #16 )
INFO  17:01:55,709 - #16 )
INFO  17:01:55,709 - #17 ;
INFO  17:01:55,709 - #5 print
INFO  17:01:55,709 - #15 (
INFO  17:01:55,709 - #50 eol
INFO  17:01:55,709 - #16 )
INFO  17:01:55,709 - #17 ;
INFO  17:01:55,709 - #50 i
INFO  17:01:55,710 - #8 =
INFO  17:01:55,710 - #48 0
INFO  17:01:55,710 - #17 ;
INFO  17:01:55,710 - #40 while
INFO  17:01:55,710 - #15 (
INFO  17:01:55,710 - #50 i
INFO  17:01:55,711 - #35 <
INFO  17:01:55,711 - #48 10
INFO  17:01:55,711 - #16 )
INFO  17:01:55,712 - #11 {
INFO  17:01:55,712 - #37 if
INFO  17:01:55,712 - #15 (
INFO  17:01:55,712 - #50 i
INFO  17:01:55,712 - #31 ==
INFO  17:01:55,712 - #48 3
INFO  17:01:55,712 - #16 )
INFO  17:01:55,713 - #11 {
INFO  17:01:55,713 - #50 i
INFO  17:01:55,713 - #27 ++
INFO  17:01:55,713 - #17 ;
INFO  17:01:55,713 - #42 continue
INFO  17:01:55,713 - #17 ;
INFO  17:01:55,713 - #12 }
INFO  17:01:55,717 - #37 if
INFO  17:01:55,717 - #15 (
INFO  17:01:55,717 - #50 i
INFO  17:01:55,717 - #31 ==
INFO  17:01:55,717 - #48 4
INFO  17:01:55,718 - #16 )
INFO  17:01:55,718 - #41 break
INFO  17:01:55,718 - #17 ;
INFO  17:01:55,718 - #50 i
INFO  17:01:55,720 - #8 =
INFO  17:01:55,720 - #50 inkrement
INFO  17:01:55,721 - #15 (
INFO  17:01:55,721 - #50 i
INFO  17:01:55,721 - #20 ,
INFO  17:01:55,721 - #48 1
INFO  17:01:55,721 - #16 )
INFO  17:01:55,721 - #17 ;
INFO  17:01:55,721 - #12 }
INFO  17:01:55,721 - #37 if
INFO  17:01:55,721 - #15 (
INFO  17:01:55,722 - #50 i
INFO  17:01:55,722 - #31 ==
INFO  17:01:55,722 - #48 3
INFO  17:01:55,722 - #29 &&
INFO  17:01:55,722 - #50 verify
INFO  17:01:55,722 - #15 (
INFO  17:01:55,722 - #16 )
INFO  17:01:55,722 - #16 )
INFO  17:01:55,723 - #5 print
INFO  17:01:55,723 - #15 (
INFO  17:01:55,723 - #26 -
INFO  17:01:55,723 - #48 4
INFO  17:01:55,723 - #16 )
INFO  17:01:55,723 - #17 ;
INFO  17:01:55,723 - #38 else
INFO  17:01:55,723 - #5 print
INFO  17:01:55,724 - #15 (
INFO  17:01:55,724 - #48 4
INFO  17:01:55,724 - #16 )
INFO  17:01:55,724 - #17 ;
INFO  17:01:55,724 - #6 read
INFO  17:01:55,724 - #15 (
INFO  17:01:55,724 - #50 niz
INFO  17:01:55,724 - #13 [
INFO  17:01:55,724 - #48 0
INFO  17:01:55,725 - #14 ]
INFO  17:01:55,725 - #16 )
INFO  17:01:55,725 - #17 ;
INFO  17:01:55,725 - #6 read
INFO  17:01:55,725 - #15 (
INFO  17:01:55,726 - #50 niz
INFO  17:01:55,726 - #13 [
INFO  17:01:55,726 - #48 1
INFO  17:01:55,726 - #14 ]
INFO  17:01:55,726 - #16 )
INFO  17:01:55,726 - #17 ;
INFO  17:01:55,727 - #6 read
INFO  17:01:55,727 - #15 (
INFO  17:01:55,727 - #50 niz
INFO  17:01:55,727 - #13 [
INFO  17:01:55,727 - #48 2
INFO  17:01:55,727 - #14 ]
INFO  17:01:55,727 - #16 )
INFO  17:01:55,727 - #17 ;
INFO  17:01:55,727 - #5 print
INFO  17:01:55,727 - #15 (
INFO  17:01:55,727 - #50 eol
INFO  17:01:55,727 - #16 )
INFO  17:01:55,727 - #17 ;
INFO  17:01:55,728 - #5 print
INFO  17:01:55,728 - #15 (
INFO  17:01:55,728 - #50 sum
INFO  17:01:55,728 - #15 (
INFO  17:01:55,729 - #50 sum
INFO  17:01:55,729 - #15 (
INFO  17:01:55,729 - #50 niz
INFO  17:01:55,729 - #13 [
INFO  17:01:55,729 - #48 0
INFO  17:01:55,729 - #14 ]
INFO  17:01:55,729 - #20 ,
INFO  17:01:55,729 - #50 niz
INFO  17:01:55,729 - #13 [
INFO  17:01:55,729 - #48 1
INFO  17:01:55,729 - #14 ]
INFO  17:01:55,729 - #16 )
INFO  17:01:55,730 - #20 ,
INFO  17:01:55,730 - #50 niz
INFO  17:01:55,730 - #13 [
INFO  17:01:55,730 - #48 2
INFO  17:01:55,730 - #14 ]
INFO  17:01:55,730 - #16 )
INFO  17:01:55,730 - #16 )
INFO  17:01:55,730 - #17 ;
INFO  17:01:55,730 - #5 print
INFO  17:01:55,730 - #15 (
INFO  17:01:55,730 - #50 eol
INFO  17:01:55,730 - #16 )
INFO  17:01:55,731 - #17 ;
INFO  17:01:55,731 - #5 print
INFO  17:01:55,731 - #15 (
INFO  17:01:55,731 - #50 inkrement
INFO  17:01:55,731 - #15 (
INFO  17:01:55,731 - #50 niz
INFO  17:01:55,731 - #13 [
INFO  17:01:55,731 - #48 2
INFO  17:01:55,731 - #14 ]
INFO  17:01:55,731 - #20 ,
INFO  17:01:55,731 - #48 2
INFO  17:01:55,731 - #16 )
INFO  17:01:55,731 - #16 )
INFO  17:01:55,731 - #17 ;
INFO  17:01:55,731 - #50 a
INFO  17:01:55,732 - #8 =
INFO  17:01:55,732 - #48 3
INFO  17:01:55,732 - #17 ;
INFO  17:01:55,732 - #50 i
INFO  17:01:55,732 - #8 =
INFO  17:01:55,732 - #48 0
INFO  17:01:55,732 - #17 ;
INFO  17:01:55,732 - #40 while
INFO  17:01:55,733 - #15 (
INFO  17:01:55,733 - #50 i
INFO  17:01:55,733 - #35 <
INFO  17:01:55,733 - #48 3
INFO  17:01:55,733 - #16 )
INFO  17:01:55,733 - #11 {
INFO  17:01:55,733 - #50 niz
INFO  17:01:55,733 - #13 [
INFO  17:01:55,733 - #50 i
INFO  17:01:55,733 - #14 ]
INFO  17:01:55,733 - #8 =
INFO  17:01:55,733 - #50 niz
INFO  17:01:55,733 - #13 [
INFO  17:01:55,734 - #50 i
INFO  17:01:55,734 - #14 ]
INFO  17:01:55,734 - #22 *
INFO  17:01:55,734 - #48 2
INFO  17:01:55,734 - #22 *
INFO  17:01:55,734 - #50 a
INFO  17:01:55,734 - #17 ;
INFO  17:01:55,734 - #50 i
INFO  17:01:55,734 - #27 ++
INFO  17:01:55,734 - #17 ;
INFO  17:01:55,734 - #12 }
INFO  17:01:55,734 - #50 niz
INFO  17:01:55,735 - #19 .
INFO  17:01:55,735 - #10 foreach
INFO  17:01:55,735 - #15 (
INFO  17:01:55,735 - #50 curr
INFO  17:01:55,735 - #8 =
ERROR 17:01:55,735 - 
Syntax error on line 92
INFO  17:01:55,735 - #33 >
INFO  17:01:55,735 - #5 print
INFO  17:01:55,736 - #15 (
INFO  17:01:55,737 - #50 curr
INFO  17:01:55,737 - #16 )
INFO  17:01:55,738 - #17 ;
INFO  17:01:55,738 - #16 )
INFO  17:01:55,738 - #17 ;
INFO  17:01:55,738 - #5 print
INFO  17:01:55,738 - #15 (
INFO  17:01:55,738 - #50 eol
ERROR 17:01:55,738 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:01:55,745 - #16 )
INFO  17:01:55,745 - #17 ;
INFO  17:01:55,745 - #50 niz2
INFO  17:01:55,746 - #8 =
INFO  17:01:55,746 - #48 0
INFO  17:01:55,746 - #17 ;
INFO  17:01:55,746 - #50 niz
INFO  17:01:55,746 - #19 .
INFO  17:01:55,746 - #10 foreach
INFO  17:01:55,746 - #15 (
INFO  17:01:55,746 - #50 curr
INFO  17:01:55,746 - #8 =
ERROR 17:01:55,746 - 
Syntax error on line 96
INFO  17:01:55,746 - #33 >
INFO  17:01:55,746 - #11 {
INFO  17:01:55,746 - #50 niz2
INFO  17:01:55,746 - #8 =
INFO  17:01:55,747 - #50 niz2
INFO  17:01:55,747 - #25 +
INFO  17:01:55,747 - #50 curr
INFO  17:01:55,747 - #22 *
INFO  17:01:55,747 - #50 curr
INFO  17:01:55,747 - #17 ;
INFO  17:01:55,747 - #12 }
INFO  17:01:55,747 - #16 )
INFO  17:01:55,747 - #17 ;
INFO  17:01:55,747 - #5 print
INFO  17:01:55,747 - #15 (
INFO  17:01:55,747 - #50 niz2
ERROR 17:01:55,747 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:01:55,747 - #16 )
INFO  17:01:55,748 - #17 ;
INFO  17:01:55,748 - #12 }
INFO  17:01:55,748 - #12 }
INFO  17:01:55,793 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:01:55,793 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:01:55,793 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:01:55,793 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:01:55,793 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:01:55,794 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:01:55,794 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 17:01:55,794 - Greska - korisceno ime nikada nije deklarisano! Linija: 19
ERROR 17:01:55,794 - Greska - jedini tip dozvoljen kod operacije sabiranja je int! Linija: 19
ERROR 17:01:55,794 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  17:01:55,794 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:01:55,795 - Greska - korisceno ime nikada nije deklarisano! Linija: 26
ERROR 17:01:55,795 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:01:55,811 - Greska - korisceno ime nikada nije deklarisano! Linija: 27
ERROR 17:01:55,811 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
ERROR 17:15:13,031 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 29
ERROR 17:15:13,032 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 17:15:13,033 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 17:15:13,033 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:15:13,034 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:15:13,034 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:15:13,034 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
ERROR 17:15:13,034 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 57
