INFO  17:35:27,749 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  17:35:27,971 - #2 program
INFO  17:35:27,971 - #50 test302
INFO  17:35:27,971 - #7 const
INFO  17:35:27,978 - #50 int
INFO  17:35:27,979 - #50 jedan
INFO  17:35:27,983 - #8 =
INFO  17:35:27,984 - #48 1
INFO  17:35:27,984 - #17 ;
INFO  17:35:27,990 - #50 int
INFO  17:35:27,993 - #50 i
INFO  17:35:27,993 - #17 ;
INFO  17:35:27,995 - #50 bool
INFO  17:35:27,995 - #50 ibool
INFO  17:35:27,996 - #17 ;
INFO  17:35:27,996 - #50 int
INFO  17:35:27,996 - #50 niz2
INFO  17:35:27,996 - #17 ;
INFO  17:35:27,996 - #50 int
INFO  17:35:27,997 - #50 niz
INFO  17:35:27,997 - #13 [
INFO  17:35:27,997 - #14 ]
INFO  17:35:27,997 - #17 ;
INFO  17:35:27,998 - #50 int
INFO  17:35:27,998 - #50 a
INFO  17:35:27,998 - #20 ,
INFO  17:35:27,998 - #50 curr
INFO  17:35:27,998 - #17 ;
INFO  17:35:27,999 - #11 {
INFO  17:35:27,999 - #50 int
INFO  17:35:28,001 - #50 sum
INFO  17:35:28,002 - #15 (
INFO  17:35:28,006 - #50 int
INFO  17:35:28,006 - #50 z
INFO  17:35:28,006 - #20 ,
INFO  17:35:28,007 - #50 int
INFO  17:35:28,007 - #50 d
INFO  17:35:28,007 - #16 )
INFO  17:35:28,008 - #11 {
INFO  17:35:28,010 - #3 return
INFO  17:35:28,012 - #50 z
INFO  17:35:28,013 - #25 +
INFO  17:35:28,014 - #50 d
INFO  17:35:28,018 - #17 ;
INFO  17:35:28,019 - #12 }
INFO  17:35:28,019 - #50 int
INFO  17:35:28,021 - #50 inkrement
INFO  17:35:28,021 - #15 (
INFO  17:35:28,021 - #50 int
INFO  17:35:28,021 - #50 a
INFO  17:35:28,021 - #20 ,
INFO  17:35:28,021 - #50 int
INFO  17:35:28,021 - #50 inc
INFO  17:35:28,021 - #16 )
INFO  17:35:28,026 - #50 int
INFO  17:35:28,027 - #50 pom
INFO  17:35:28,027 - #17 ;
INFO  17:35:28,027 - #11 {
INFO  17:35:28,027 - #37 if
INFO  17:35:28,028 - #15 (
INFO  17:35:28,028 - #50 inc
INFO  17:35:28,028 - #31 ==
INFO  17:35:28,028 - #50 jedan
INFO  17:35:28,033 - #16 )
INFO  17:35:28,034 - #50 pom
INFO  17:35:28,034 - #8 =
INFO  17:35:28,035 - #48 1
INFO  17:35:28,037 - #17 ;
INFO  17:35:28,038 - #38 else
INFO  17:35:28,039 - #37 if
INFO  17:35:28,039 - #15 (
INFO  17:35:28,039 - #50 inc
INFO  17:35:28,039 - #31 ==
INFO  17:35:28,039 - #48 2
INFO  17:35:28,039 - #16 )
INFO  17:35:28,039 - #50 pom
INFO  17:35:28,040 - #8 =
INFO  17:35:28,040 - #50 a
INFO  17:35:28,040 - #17 ;
INFO  17:35:28,040 - #3 return
INFO  17:35:28,041 - #50 sum
INFO  17:35:28,041 - #15 (
INFO  17:35:28,041 - #50 a
INFO  17:35:28,041 - #20 ,
INFO  17:35:28,041 - #50 pom
INFO  17:35:28,042 - #16 )
INFO  17:35:28,042 - #17 ;
INFO  17:35:28,043 - #12 }
INFO  17:35:28,043 - #50 bool
INFO  17:35:28,043 - #50 verify
INFO  17:35:28,043 - #15 (
INFO  17:35:28,043 - #16 )
INFO  17:35:28,043 - #11 {
INFO  17:35:28,043 - #5 print
INFO  17:35:28,043 - #15 (
INFO  17:35:28,044 - #49 v
INFO  17:35:28,044 - #16 )
INFO  17:35:28,044 - #17 ;
INFO  17:35:28,044 - #3 return
INFO  17:35:28,045 - #47 false
INFO  17:35:28,045 - #17 ;
INFO  17:35:28,045 - #12 }
INFO  17:35:28,045 - #4 void
INFO  17:35:28,046 - #50 main
INFO  17:35:28,048 - #15 (
INFO  17:35:28,048 - #16 )
INFO  17:35:28,048 - #11 {
INFO  17:35:28,049 - #37 if
INFO  17:35:28,049 - #15 (
INFO  17:35:28,049 - #48 1
INFO  17:35:28,049 - #32 !=
INFO  17:35:28,049 - #48 1
INFO  17:35:28,052 - #16 )
INFO  17:35:28,052 - #5 print
INFO  17:35:28,052 - #15 (
INFO  17:35:28,052 - #26 -
INFO  17:35:28,052 - #48 6
INFO  17:35:28,052 - #16 )
INFO  17:35:28,053 - #17 ;
INFO  17:35:28,053 - #38 else
INFO  17:35:28,053 - #5 print
INFO  17:35:28,053 - #15 (
INFO  17:35:28,053 - #48 0
INFO  17:35:28,053 - #16 )
INFO  17:35:28,054 - #17 ;
INFO  17:35:28,054 - #50 ibool
INFO  17:35:28,054 - #8 =
INFO  17:35:28,054 - #47 false
INFO  17:35:28,054 - #17 ;
INFO  17:35:28,054 - #50 i
INFO  17:35:28,054 - #8 =
INFO  17:35:28,055 - #48 0
INFO  17:35:28,055 - #17 ;
INFO  17:35:28,055 - #40 while
INFO  17:35:28,055 - #15 (
INFO  17:35:28,055 - #50 i
INFO  17:35:28,055 - #35 <
INFO  17:35:28,055 - #48 5
INFO  17:35:28,058 - #16 )
INFO  17:35:28,058 - #11 {
INFO  17:35:28,058 - #37 if
INFO  17:35:28,058 - #15 (
INFO  17:35:28,058 - #50 i
INFO  17:35:28,058 - #31 ==
INFO  17:35:28,058 - #48 2
INFO  17:35:28,058 - #16 )
INFO  17:35:28,059 - #50 ibool
INFO  17:35:28,059 - #8 =
INFO  17:35:28,059 - #47 true
INFO  17:35:28,059 - #17 ;
INFO  17:35:28,059 - #50 i
INFO  17:35:28,059 - #27 ++
INFO  17:35:28,059 - #17 ;
INFO  17:35:28,062 - #12 }
INFO  17:35:28,062 - #37 if
INFO  17:35:28,063 - #15 (
INFO  17:35:28,063 - #50 ibool
INFO  17:35:28,063 - #16 )
INFO  17:35:28,063 - #37 if
INFO  17:35:28,063 - #15 (
INFO  17:35:28,063 - #50 i
INFO  17:35:28,063 - #31 ==
INFO  17:35:28,064 - #48 5
INFO  17:35:28,064 - #16 )
INFO  17:35:28,064 - #5 print
INFO  17:35:28,064 - #15 (
INFO  17:35:28,064 - #48 1
INFO  17:35:28,064 - #16 )
INFO  17:35:28,064 - #17 ;
INFO  17:35:28,064 - #38 else
INFO  17:35:28,064 - #5 print
INFO  17:35:28,065 - #15 (
INFO  17:35:28,065 - #26 -
INFO  17:35:28,065 - #48 1
INFO  17:35:28,065 - #16 )
INFO  17:35:28,065 - #17 ;
INFO  17:35:28,065 - #50 a
INFO  17:35:28,065 - #8 =
INFO  17:35:28,065 - #48 2
INFO  17:35:28,065 - #17 ;
INFO  17:35:28,066 - #50 niz
INFO  17:35:28,066 - #8 =
INFO  17:35:28,066 - #46 new
INFO  17:35:28,066 - #50 int
INFO  17:35:28,066 - #13 [
INFO  17:35:28,066 - #48 3
INFO  17:35:28,066 - #14 ]
INFO  17:35:28,066 - #17 ;
INFO  17:35:28,067 - #50 niz
INFO  17:35:28,067 - #13 [
INFO  17:35:28,067 - #48 0
INFO  17:35:28,067 - #14 ]
INFO  17:35:28,067 - #8 =
INFO  17:35:28,068 - #48 1
INFO  17:35:28,068 - #22 *
INFO  17:35:28,068 - #50 a
INFO  17:35:28,073 - #17 ;
INFO  17:35:28,073 - #50 niz
INFO  17:35:28,074 - #13 [
INFO  17:35:28,074 - #48 1
INFO  17:35:28,074 - #14 ]
INFO  17:35:28,074 - #8 =
INFO  17:35:28,074 - #48 2
INFO  17:35:28,074 - #22 *
INFO  17:35:28,074 - #50 a
INFO  17:35:28,074 - #17 ;
INFO  17:35:28,075 - #50 niz
INFO  17:35:28,075 - #13 [
INFO  17:35:28,075 - #48 2
INFO  17:35:28,075 - #14 ]
INFO  17:35:28,075 - #8 =
INFO  17:35:28,075 - #50 sum
INFO  17:35:28,075 - #15 (
INFO  17:35:28,075 - #50 niz
INFO  17:35:28,075 - #13 [
INFO  17:35:28,075 - #48 1
INFO  17:35:28,075 - #14 ]
INFO  17:35:28,076 - #20 ,
INFO  17:35:28,076 - #50 niz
INFO  17:35:28,076 - #13 [
INFO  17:35:28,076 - #48 0
INFO  17:35:28,076 - #14 ]
INFO  17:35:28,076 - #16 )
INFO  17:35:28,076 - #22 *
INFO  17:35:28,076 - #50 a
INFO  17:35:28,076 - #25 +
INFO  17:35:28,076 - #48 1
INFO  17:35:28,076 - #17 ;
INFO  17:35:28,077 - #37 if
INFO  17:35:28,077 - #15 (
INFO  17:35:28,077 - #50 verify
INFO  17:35:28,077 - #15 (
INFO  17:35:28,077 - #16 )
INFO  17:35:28,077 - #30 ||
INFO  17:35:28,077 - #50 niz
INFO  17:35:28,077 - #13 [
INFO  17:35:28,078 - #48 2
INFO  17:35:28,078 - #14 ]
INFO  17:35:28,078 - #31 ==
INFO  17:35:28,078 - #48 4
INFO  17:35:28,078 - #16 )
INFO  17:35:28,078 - #5 print
INFO  17:35:28,078 - #15 (
INFO  17:35:28,079 - #50 ord
INFO  17:35:28,079 - #15 (
INFO  17:35:28,079 - #49 A
INFO  17:35:28,079 - #16 )
INFO  17:35:28,079 - #16 )
INFO  17:35:28,079 - #17 ;
INFO  17:35:28,079 - #38 else
INFO  17:35:28,079 - #5 print
INFO  17:35:28,079 - #15 (
INFO  17:35:28,079 - #50 ord
INFO  17:35:28,080 - #15 (
INFO  17:35:28,080 - #49 a
INFO  17:35:28,080 - #16 )
INFO  17:35:28,080 - #16 )
INFO  17:35:28,080 - #17 ;
INFO  17:35:28,080 - #5 print
INFO  17:35:28,081 - #15 (
INFO  17:35:28,081 - #50 eol
INFO  17:35:28,081 - #16 )
INFO  17:35:28,081 - #17 ;
INFO  17:35:28,081 - #50 i
INFO  17:35:28,081 - #8 =
INFO  17:35:28,081 - #48 0
INFO  17:35:28,081 - #17 ;
INFO  17:35:28,081 - #40 while
INFO  17:35:28,082 - #15 (
INFO  17:35:28,082 - #50 i
INFO  17:35:28,082 - #35 <
INFO  17:35:28,082 - #48 10
INFO  17:35:28,082 - #16 )
INFO  17:35:28,082 - #11 {
INFO  17:35:28,082 - #37 if
INFO  17:35:28,082 - #15 (
INFO  17:35:28,082 - #50 i
INFO  17:35:28,082 - #31 ==
INFO  17:35:28,083 - #48 3
INFO  17:35:28,083 - #16 )
INFO  17:35:28,083 - #11 {
INFO  17:35:28,083 - #50 i
INFO  17:35:28,083 - #27 ++
INFO  17:35:28,083 - #17 ;
INFO  17:35:28,083 - #42 continue
INFO  17:35:28,083 - #17 ;
INFO  17:35:28,083 - #12 }
INFO  17:35:28,086 - #37 if
INFO  17:35:28,086 - #15 (
INFO  17:35:28,086 - #50 i
INFO  17:35:28,086 - #31 ==
INFO  17:35:28,087 - #48 4
INFO  17:35:28,087 - #16 )
INFO  17:35:28,087 - #41 break
INFO  17:35:28,087 - #17 ;
INFO  17:35:28,087 - #50 i
INFO  17:35:28,090 - #8 =
INFO  17:35:28,090 - #50 inkrement
INFO  17:35:28,090 - #15 (
INFO  17:35:28,090 - #50 i
INFO  17:35:28,090 - #20 ,
INFO  17:35:28,090 - #48 1
INFO  17:35:28,090 - #16 )
INFO  17:35:28,090 - #17 ;
INFO  17:35:28,091 - #12 }
INFO  17:35:28,091 - #37 if
INFO  17:35:28,091 - #15 (
INFO  17:35:28,091 - #50 i
INFO  17:35:28,091 - #31 ==
INFO  17:35:28,091 - #48 3
INFO  17:35:28,091 - #29 &&
INFO  17:35:28,091 - #50 verify
INFO  17:35:28,091 - #15 (
INFO  17:35:28,091 - #16 )
INFO  17:35:28,092 - #16 )
INFO  17:35:28,092 - #5 print
INFO  17:35:28,092 - #15 (
INFO  17:35:28,092 - #26 -
INFO  17:35:28,092 - #48 4
INFO  17:35:28,092 - #16 )
INFO  17:35:28,093 - #17 ;
INFO  17:35:28,093 - #38 else
INFO  17:35:28,093 - #5 print
INFO  17:35:28,093 - #15 (
INFO  17:35:28,093 - #48 4
INFO  17:35:28,093 - #16 )
INFO  17:35:28,093 - #17 ;
INFO  17:35:28,093 - #6 read
INFO  17:35:28,093 - #15 (
INFO  17:35:28,094 - #50 niz
INFO  17:35:28,094 - #13 [
INFO  17:35:28,094 - #48 0
INFO  17:35:28,094 - #14 ]
INFO  17:35:28,094 - #16 )
INFO  17:35:28,094 - #17 ;
INFO  17:35:28,094 - #6 read
INFO  17:35:28,094 - #15 (
INFO  17:35:28,095 - #50 niz
INFO  17:35:28,095 - #13 [
INFO  17:35:28,095 - #48 1
INFO  17:35:28,095 - #14 ]
INFO  17:35:28,095 - #16 )
INFO  17:35:28,095 - #17 ;
INFO  17:35:28,095 - #6 read
INFO  17:35:28,095 - #15 (
INFO  17:35:28,095 - #50 niz
INFO  17:35:28,095 - #13 [
INFO  17:35:28,095 - #48 2
INFO  17:35:28,095 - #14 ]
INFO  17:35:28,096 - #16 )
INFO  17:35:28,096 - #17 ;
INFO  17:35:28,096 - #5 print
INFO  17:35:28,096 - #15 (
INFO  17:35:28,096 - #50 eol
INFO  17:35:28,096 - #16 )
INFO  17:35:28,096 - #17 ;
INFO  17:35:28,096 - #5 print
INFO  17:35:28,096 - #15 (
INFO  17:35:28,096 - #50 sum
INFO  17:35:28,096 - #15 (
INFO  17:35:28,096 - #50 sum
INFO  17:35:28,097 - #15 (
INFO  17:35:28,097 - #50 niz
INFO  17:35:28,097 - #13 [
INFO  17:35:28,097 - #48 0
INFO  17:35:28,097 - #14 ]
INFO  17:35:28,097 - #20 ,
INFO  17:35:28,097 - #50 niz
INFO  17:35:28,097 - #13 [
INFO  17:35:28,097 - #48 1
INFO  17:35:28,097 - #14 ]
INFO  17:35:28,097 - #16 )
INFO  17:35:28,098 - #20 ,
INFO  17:35:28,098 - #50 niz
INFO  17:35:28,098 - #13 [
INFO  17:35:28,098 - #48 2
INFO  17:35:28,098 - #14 ]
INFO  17:35:28,098 - #16 )
INFO  17:35:28,098 - #16 )
INFO  17:35:28,098 - #17 ;
INFO  17:35:28,098 - #5 print
INFO  17:35:28,098 - #15 (
INFO  17:35:28,098 - #50 eol
INFO  17:35:28,099 - #16 )
INFO  17:35:28,099 - #17 ;
INFO  17:35:28,099 - #5 print
INFO  17:35:28,099 - #15 (
INFO  17:35:28,099 - #50 inkrement
INFO  17:35:28,099 - #15 (
INFO  17:35:28,099 - #50 niz
INFO  17:35:28,099 - #13 [
INFO  17:35:28,099 - #48 2
INFO  17:35:28,099 - #14 ]
INFO  17:35:28,100 - #20 ,
INFO  17:35:28,100 - #48 2
INFO  17:35:28,100 - #16 )
INFO  17:35:28,100 - #16 )
INFO  17:35:28,100 - #17 ;
INFO  17:35:28,100 - #50 a
INFO  17:35:28,100 - #8 =
INFO  17:35:28,100 - #48 3
INFO  17:35:28,100 - #17 ;
INFO  17:35:28,100 - #50 i
INFO  17:35:28,100 - #8 =
INFO  17:35:28,101 - #48 0
INFO  17:35:28,101 - #17 ;
INFO  17:35:28,101 - #40 while
INFO  17:35:28,101 - #15 (
INFO  17:35:28,101 - #50 i
INFO  17:35:28,101 - #35 <
INFO  17:35:28,101 - #48 3
INFO  17:35:28,101 - #16 )
INFO  17:35:28,101 - #11 {
INFO  17:35:28,101 - #50 niz
INFO  17:35:28,101 - #13 [
INFO  17:35:28,101 - #50 i
INFO  17:35:28,102 - #14 ]
INFO  17:35:28,102 - #8 =
INFO  17:35:28,102 - #50 niz
INFO  17:35:28,102 - #13 [
INFO  17:35:28,102 - #50 i
INFO  17:35:28,102 - #14 ]
INFO  17:35:28,102 - #22 *
INFO  17:35:28,102 - #48 2
INFO  17:35:28,102 - #22 *
INFO  17:35:28,102 - #50 a
INFO  17:35:28,102 - #17 ;
INFO  17:35:28,103 - #50 i
INFO  17:35:28,103 - #27 ++
INFO  17:35:28,103 - #17 ;
INFO  17:35:28,103 - #12 }
INFO  17:35:28,103 - #50 niz
INFO  17:35:28,103 - #19 .
INFO  17:35:28,103 - #10 foreach
INFO  17:35:28,103 - #15 (
INFO  17:35:28,103 - #50 curr
INFO  17:35:28,103 - #8 =
ERROR 17:35:28,103 - 
Syntax error on line 92
INFO  17:35:28,104 - #33 >
INFO  17:35:28,104 - #5 print
INFO  17:35:28,104 - #15 (
INFO  17:35:28,105 - #50 curr
INFO  17:35:28,106 - #16 )
INFO  17:35:28,106 - #17 ;
INFO  17:35:28,106 - #16 )
INFO  17:35:28,106 - #17 ;
INFO  17:35:28,106 - #5 print
INFO  17:35:28,106 - #15 (
INFO  17:35:28,106 - #50 eol
ERROR 17:35:28,106 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  17:35:28,112 - #16 )
INFO  17:35:28,113 - #17 ;
INFO  17:35:28,113 - #50 niz2
INFO  17:35:28,113 - #8 =
INFO  17:35:28,113 - #48 0
INFO  17:35:28,113 - #17 ;
INFO  17:35:28,113 - #50 niz
INFO  17:35:28,113 - #19 .
INFO  17:35:28,113 - #10 foreach
INFO  17:35:28,113 - #15 (
INFO  17:35:28,113 - #50 curr
INFO  17:35:28,113 - #8 =
ERROR 17:35:28,113 - 
Syntax error on line 96
INFO  17:35:28,113 - #33 >
INFO  17:35:28,114 - #11 {
INFO  17:35:28,114 - #50 niz2
INFO  17:35:28,114 - #8 =
INFO  17:35:28,114 - #50 niz2
INFO  17:35:28,114 - #25 +
INFO  17:35:28,114 - #50 curr
INFO  17:35:28,114 - #22 *
INFO  17:35:28,114 - #50 curr
INFO  17:35:28,114 - #17 ;
INFO  17:35:28,114 - #12 }
INFO  17:35:28,114 - #16 )
INFO  17:35:28,114 - #17 ;
INFO  17:35:28,114 - #5 print
INFO  17:35:28,114 - #15 (
INFO  17:35:28,115 - #50 niz2
ERROR 17:35:28,115 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  17:35:28,115 - #16 )
INFO  17:35:28,115 - #17 ;
INFO  17:35:28,115 - #12 }
INFO  17:35:28,115 - #12 }
INFO  17:35:28,150 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  17:35:28,151 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  17:35:28,151 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  17:35:28,151 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  17:35:28,151 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  17:35:28,151 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  17:35:28,151 - Detektovana deklaracija globalne promenljive curr Linija: 13
ERROR 17:35:28,152 - Greska - korisceno ime nikada nije deklarisano! Linija: 19
ERROR 17:35:28,152 - Greska - jedini tip dozvoljen kod operacije sabiranja je int! Linija: 19
ERROR 17:35:28,152 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 19
INFO  17:35:28,152 - Detektovana deklaracija lokalne promenljive pom Linija: 24
ERROR 17:35:28,152 - Greska - korisceno ime nikada nije deklarisano! Linija: 26
ERROR 17:35:28,152 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 26
ERROR 17:35:28,156 - Greska - korisceno ime nikada nije deklarisano! Linija: 27
ERROR 17:35:28,156 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 27
ERROR 17:49:12,371 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 29
ERROR 17:49:12,372 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 29
ERROR 17:49:12,373 - Greska - tip izraza mora da bude ekvivalentan povratnom tipu tekuce globalne funkcije! Linija: 34
ERROR 17:49:12,374 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 40
ERROR 17:49:12,374 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 45
ERROR 17:49:12,374 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 46
ERROR 17:49:12,374 - Greska - izraz unutar uslova mora da bude tipa bool! Linija: 51
ERROR 17:49:12,375 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 57
