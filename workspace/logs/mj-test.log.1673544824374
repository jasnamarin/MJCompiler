INFO  18:31:42,866 - Compiling source file: C:\Users\jasna\OneDrive\Desktop\PP-22-23\MJCompiler-repo\workspace\MJCompiler\test\program.mj
INFO  18:31:43,013 - #2 program
INFO  18:31:43,013 - #50 test302
INFO  18:31:43,014 - #7 const
INFO  18:31:43,016 - #50 int
INFO  18:31:43,017 - #50 jedan
INFO  18:31:43,018 - #8 =
INFO  18:31:43,018 - #48 1
INFO  18:31:43,018 - #17 ;
INFO  18:31:43,021 - #50 int
INFO  18:31:43,024 - #50 i
INFO  18:31:43,024 - #17 ;
INFO  18:31:43,024 - #50 bool
INFO  18:31:43,025 - #50 ibool
INFO  18:31:43,026 - #17 ;
INFO  18:31:43,026 - #50 int
INFO  18:31:43,026 - #50 niz2
INFO  18:31:43,026 - #17 ;
INFO  18:31:43,026 - #50 int
INFO  18:31:43,026 - #50 niz
INFO  18:31:43,026 - #13 [
INFO  18:31:43,027 - #14 ]
INFO  18:31:43,027 - #17 ;
INFO  18:31:43,028 - #50 int
INFO  18:31:43,028 - #50 a
INFO  18:31:43,028 - #20 ,
INFO  18:31:43,028 - #50 curr
INFO  18:31:43,028 - #17 ;
INFO  18:31:43,028 - #11 {
INFO  18:31:43,028 - #50 int
INFO  18:31:43,030 - #50 sum
INFO  18:31:43,031 - #15 (
INFO  18:31:43,032 - #50 int
INFO  18:31:43,032 - #50 z
INFO  18:31:43,032 - #20 ,
INFO  18:31:43,033 - #50 int
INFO  18:31:43,033 - #50 d
INFO  18:31:43,033 - #16 )
INFO  18:31:43,033 - #11 {
INFO  18:31:43,034 - #3 return
INFO  18:31:43,036 - #50 z
INFO  18:31:43,036 - #25 +
INFO  18:31:43,037 - #50 d
INFO  18:31:43,040 - #17 ;
INFO  18:31:43,040 - #12 }
INFO  18:31:43,040 - #50 int
INFO  18:31:43,041 - #50 inkrement
INFO  18:31:43,041 - #15 (
INFO  18:31:43,041 - #50 int
INFO  18:31:43,041 - #50 a
INFO  18:31:43,041 - #20 ,
INFO  18:31:43,041 - #50 int
INFO  18:31:43,041 - #50 inc
INFO  18:31:43,041 - #16 )
INFO  18:31:43,044 - #50 int
INFO  18:31:43,044 - #50 pom
INFO  18:31:43,044 - #17 ;
INFO  18:31:43,044 - #11 {
INFO  18:31:43,044 - #37 if
INFO  18:31:43,044 - #15 (
INFO  18:31:43,044 - #50 inc
INFO  18:31:43,044 - #31 ==
INFO  18:31:43,044 - #50 jedan
INFO  18:31:43,047 - #16 )
INFO  18:31:43,047 - #50 pom
INFO  18:31:43,048 - #8 =
INFO  18:31:43,048 - #48 1
INFO  18:31:43,050 - #17 ;
INFO  18:31:43,050 - #38 else
INFO  18:31:43,050 - #37 if
INFO  18:31:43,050 - #15 (
INFO  18:31:43,050 - #50 inc
INFO  18:31:43,050 - #31 ==
INFO  18:31:43,050 - #48 2
INFO  18:31:43,050 - #16 )
INFO  18:31:43,050 - #50 pom
INFO  18:31:43,050 - #8 =
INFO  18:31:43,050 - #50 a
INFO  18:31:43,050 - #17 ;
INFO  18:31:43,050 - #3 return
INFO  18:31:43,051 - #50 sum
INFO  18:31:43,051 - #15 (
INFO  18:31:43,051 - #50 a
INFO  18:31:43,051 - #20 ,
INFO  18:31:43,051 - #50 pom
INFO  18:31:43,051 - #16 )
INFO  18:31:43,052 - #17 ;
INFO  18:31:43,052 - #12 }
INFO  18:31:43,052 - #50 bool
INFO  18:31:43,052 - #50 verify
INFO  18:31:43,052 - #15 (
INFO  18:31:43,052 - #16 )
INFO  18:31:43,052 - #11 {
INFO  18:31:43,052 - #5 print
INFO  18:31:43,052 - #15 (
INFO  18:31:43,052 - #49 v
INFO  18:31:43,053 - #16 )
INFO  18:31:43,053 - #17 ;
INFO  18:31:43,053 - #3 return
INFO  18:31:43,053 - #47 false
INFO  18:31:43,053 - #17 ;
INFO  18:31:43,053 - #12 }
INFO  18:31:43,054 - #4 void
INFO  18:31:43,054 - #50 main
INFO  18:31:43,055 - #15 (
INFO  18:31:43,055 - #16 )
INFO  18:31:43,055 - #11 {
INFO  18:31:43,056 - #37 if
INFO  18:31:43,056 - #15 (
INFO  18:31:43,056 - #48 1
INFO  18:31:43,056 - #32 !=
INFO  18:31:43,056 - #48 1
INFO  18:31:43,057 - #16 )
INFO  18:31:43,057 - #5 print
INFO  18:31:43,057 - #15 (
INFO  18:31:43,057 - #26 -
INFO  18:31:43,057 - #48 6
INFO  18:31:43,058 - #16 )
INFO  18:31:43,058 - #17 ;
INFO  18:31:43,058 - #38 else
INFO  18:31:43,058 - #5 print
INFO  18:31:43,058 - #15 (
INFO  18:31:43,058 - #48 0
INFO  18:31:43,058 - #16 )
INFO  18:31:43,058 - #17 ;
INFO  18:31:43,058 - #50 ibool
INFO  18:31:43,058 - #8 =
INFO  18:31:43,058 - #47 false
INFO  18:31:43,058 - #17 ;
INFO  18:31:43,059 - #50 i
INFO  18:31:43,059 - #8 =
INFO  18:31:43,059 - #48 0
INFO  18:31:43,059 - #17 ;
INFO  18:31:43,059 - #40 while
INFO  18:31:43,059 - #15 (
INFO  18:31:43,059 - #50 i
INFO  18:31:43,059 - #35 <
INFO  18:31:43,059 - #48 5
INFO  18:31:43,061 - #16 )
INFO  18:31:43,061 - #11 {
INFO  18:31:43,061 - #37 if
INFO  18:31:43,061 - #15 (
INFO  18:31:43,061 - #50 i
INFO  18:31:43,061 - #31 ==
INFO  18:31:43,061 - #48 2
INFO  18:31:43,061 - #16 )
INFO  18:31:43,061 - #50 ibool
INFO  18:31:43,061 - #8 =
INFO  18:31:43,061 - #47 true
INFO  18:31:43,061 - #17 ;
INFO  18:31:43,061 - #50 i
INFO  18:31:43,062 - #27 ++
INFO  18:31:43,062 - #17 ;
INFO  18:31:43,063 - #12 }
INFO  18:31:43,063 - #37 if
INFO  18:31:43,063 - #15 (
INFO  18:31:43,064 - #50 ibool
INFO  18:31:43,064 - #16 )
INFO  18:31:43,064 - #37 if
INFO  18:31:43,064 - #15 (
INFO  18:31:43,064 - #50 i
INFO  18:31:43,064 - #31 ==
INFO  18:31:43,064 - #48 5
INFO  18:31:43,064 - #16 )
INFO  18:31:43,064 - #5 print
INFO  18:31:43,064 - #15 (
INFO  18:31:43,064 - #48 1
INFO  18:31:43,064 - #16 )
INFO  18:31:43,064 - #17 ;
INFO  18:31:43,064 - #38 else
INFO  18:31:43,064 - #5 print
INFO  18:31:43,065 - #15 (
INFO  18:31:43,065 - #26 -
INFO  18:31:43,065 - #48 1
INFO  18:31:43,065 - #16 )
INFO  18:31:43,065 - #17 ;
INFO  18:31:43,065 - #50 a
INFO  18:31:43,065 - #8 =
INFO  18:31:43,065 - #48 2
INFO  18:31:43,065 - #17 ;
INFO  18:31:43,065 - #50 niz
INFO  18:31:43,065 - #8 =
INFO  18:31:43,065 - #46 new
INFO  18:31:43,065 - #50 int
INFO  18:31:43,065 - #13 [
INFO  18:31:43,065 - #48 3
INFO  18:31:43,065 - #14 ]
INFO  18:31:43,065 - #17 ;
INFO  18:31:43,066 - #50 niz
INFO  18:31:43,066 - #13 [
INFO  18:31:43,066 - #48 0
INFO  18:31:43,066 - #14 ]
INFO  18:31:43,066 - #8 =
INFO  18:31:43,066 - #48 1
INFO  18:31:43,066 - #22 *
INFO  18:31:43,066 - #50 a
INFO  18:31:43,069 - #17 ;
INFO  18:31:43,069 - #50 niz
INFO  18:31:43,069 - #13 [
INFO  18:31:43,069 - #48 1
INFO  18:31:43,069 - #14 ]
INFO  18:31:43,070 - #8 =
INFO  18:31:43,070 - #48 2
INFO  18:31:43,070 - #22 *
INFO  18:31:43,070 - #50 a
INFO  18:31:43,070 - #17 ;
INFO  18:31:43,070 - #50 niz
INFO  18:31:43,070 - #13 [
INFO  18:31:43,070 - #48 2
INFO  18:31:43,070 - #14 ]
INFO  18:31:43,070 - #8 =
INFO  18:31:43,070 - #50 sum
INFO  18:31:43,070 - #15 (
INFO  18:31:43,070 - #50 niz
INFO  18:31:43,070 - #13 [
INFO  18:31:43,070 - #48 1
INFO  18:31:43,070 - #14 ]
INFO  18:31:43,070 - #20 ,
INFO  18:31:43,070 - #50 niz
INFO  18:31:43,070 - #13 [
INFO  18:31:43,070 - #48 0
INFO  18:31:43,070 - #14 ]
INFO  18:31:43,070 - #16 )
INFO  18:31:43,070 - #22 *
INFO  18:31:43,070 - #50 a
INFO  18:31:43,071 - #25 +
INFO  18:31:43,071 - #48 1
INFO  18:31:43,071 - #17 ;
INFO  18:31:43,071 - #37 if
INFO  18:31:43,071 - #15 (
INFO  18:31:43,071 - #50 verify
INFO  18:31:43,071 - #15 (
INFO  18:31:43,071 - #16 )
INFO  18:31:43,071 - #30 ||
INFO  18:31:43,071 - #50 niz
INFO  18:31:43,071 - #13 [
INFO  18:31:43,071 - #48 2
INFO  18:31:43,071 - #14 ]
INFO  18:31:43,071 - #31 ==
INFO  18:31:43,071 - #48 4
INFO  18:31:43,071 - #16 )
INFO  18:31:43,072 - #5 print
INFO  18:31:43,072 - #15 (
INFO  18:31:43,072 - #50 ord
INFO  18:31:43,072 - #15 (
INFO  18:31:43,072 - #49 A
INFO  18:31:43,072 - #16 )
INFO  18:31:43,072 - #16 )
INFO  18:31:43,072 - #17 ;
INFO  18:31:43,072 - #38 else
INFO  18:31:43,072 - #5 print
INFO  18:31:43,072 - #15 (
INFO  18:31:43,072 - #50 ord
INFO  18:31:43,072 - #15 (
INFO  18:31:43,072 - #49 a
INFO  18:31:43,072 - #16 )
INFO  18:31:43,073 - #16 )
INFO  18:31:43,073 - #17 ;
INFO  18:31:43,073 - #5 print
INFO  18:31:43,073 - #15 (
INFO  18:31:43,073 - #50 eol
INFO  18:31:43,073 - #16 )
INFO  18:31:43,073 - #17 ;
INFO  18:31:43,073 - #50 i
INFO  18:31:43,073 - #8 =
INFO  18:31:43,073 - #48 0
INFO  18:31:43,073 - #17 ;
INFO  18:31:43,073 - #40 while
INFO  18:31:43,073 - #15 (
INFO  18:31:43,073 - #50 i
INFO  18:31:43,073 - #35 <
INFO  18:31:43,073 - #48 10
INFO  18:31:43,073 - #16 )
INFO  18:31:43,073 - #11 {
INFO  18:31:43,074 - #37 if
INFO  18:31:43,074 - #15 (
INFO  18:31:43,074 - #50 i
INFO  18:31:43,074 - #31 ==
INFO  18:31:43,074 - #48 3
INFO  18:31:43,074 - #16 )
INFO  18:31:43,074 - #11 {
INFO  18:31:43,074 - #50 i
INFO  18:31:43,074 - #27 ++
INFO  18:31:43,074 - #17 ;
INFO  18:31:43,074 - #42 continue
INFO  18:31:43,074 - #17 ;
INFO  18:31:43,074 - #12 }
INFO  18:31:43,076 - #37 if
INFO  18:31:43,076 - #15 (
INFO  18:31:43,076 - #50 i
INFO  18:31:43,077 - #31 ==
INFO  18:31:43,077 - #48 4
INFO  18:31:43,077 - #16 )
INFO  18:31:43,077 - #41 break
INFO  18:31:43,077 - #17 ;
INFO  18:31:43,077 - #50 i
INFO  18:31:43,078 - #8 =
INFO  18:31:43,079 - #50 inkrement
INFO  18:31:43,079 - #15 (
INFO  18:31:43,079 - #50 i
INFO  18:31:43,079 - #20 ,
INFO  18:31:43,079 - #48 1
INFO  18:31:43,079 - #16 )
INFO  18:31:43,079 - #17 ;
INFO  18:31:43,079 - #12 }
INFO  18:31:43,079 - #37 if
INFO  18:31:43,079 - #15 (
INFO  18:31:43,079 - #50 i
INFO  18:31:43,079 - #31 ==
INFO  18:31:43,079 - #48 3
INFO  18:31:43,079 - #29 &&
INFO  18:31:43,079 - #50 verify
INFO  18:31:43,079 - #15 (
INFO  18:31:43,079 - #16 )
INFO  18:31:43,080 - #16 )
INFO  18:31:43,080 - #5 print
INFO  18:31:43,080 - #15 (
INFO  18:31:43,080 - #26 -
INFO  18:31:43,080 - #48 4
INFO  18:31:43,080 - #16 )
INFO  18:31:43,080 - #17 ;
INFO  18:31:43,080 - #38 else
INFO  18:31:43,080 - #5 print
INFO  18:31:43,080 - #15 (
INFO  18:31:43,080 - #48 4
INFO  18:31:43,080 - #16 )
INFO  18:31:43,080 - #17 ;
INFO  18:31:43,080 - #6 read
INFO  18:31:43,080 - #15 (
INFO  18:31:43,080 - #50 niz
INFO  18:31:43,081 - #13 [
INFO  18:31:43,081 - #48 0
INFO  18:31:43,081 - #14 ]
INFO  18:31:43,081 - #16 )
INFO  18:31:43,081 - #17 ;
INFO  18:31:43,081 - #6 read
INFO  18:31:43,081 - #15 (
INFO  18:31:43,081 - #50 niz
INFO  18:31:43,081 - #13 [
INFO  18:31:43,081 - #48 1
INFO  18:31:43,081 - #14 ]
INFO  18:31:43,081 - #16 )
INFO  18:31:43,081 - #17 ;
INFO  18:31:43,081 - #6 read
INFO  18:31:43,081 - #15 (
INFO  18:31:43,081 - #50 niz
INFO  18:31:43,081 - #13 [
INFO  18:31:43,082 - #48 2
INFO  18:31:43,082 - #14 ]
INFO  18:31:43,082 - #16 )
INFO  18:31:43,082 - #17 ;
INFO  18:31:43,082 - #5 print
INFO  18:31:43,082 - #15 (
INFO  18:31:43,082 - #50 eol
INFO  18:31:43,082 - #16 )
INFO  18:31:43,082 - #17 ;
INFO  18:31:43,082 - #5 print
INFO  18:31:43,082 - #15 (
INFO  18:31:43,082 - #50 sum
INFO  18:31:43,082 - #15 (
INFO  18:31:43,082 - #50 sum
INFO  18:31:43,082 - #15 (
INFO  18:31:43,082 - #50 niz
INFO  18:31:43,082 - #13 [
INFO  18:31:43,082 - #48 0
INFO  18:31:43,082 - #14 ]
INFO  18:31:43,082 - #20 ,
INFO  18:31:43,082 - #50 niz
INFO  18:31:43,082 - #13 [
INFO  18:31:43,082 - #48 1
INFO  18:31:43,082 - #14 ]
INFO  18:31:43,082 - #16 )
INFO  18:31:43,083 - #20 ,
INFO  18:31:43,083 - #50 niz
INFO  18:31:43,083 - #13 [
INFO  18:31:43,083 - #48 2
INFO  18:31:43,083 - #14 ]
INFO  18:31:43,083 - #16 )
INFO  18:31:43,083 - #16 )
INFO  18:31:43,083 - #17 ;
INFO  18:31:43,083 - #5 print
INFO  18:31:43,083 - #15 (
INFO  18:31:43,083 - #50 eol
INFO  18:31:43,083 - #16 )
INFO  18:31:43,083 - #17 ;
INFO  18:31:43,083 - #5 print
INFO  18:31:43,083 - #15 (
INFO  18:31:43,083 - #50 inkrement
INFO  18:31:43,083 - #15 (
INFO  18:31:43,083 - #50 niz
INFO  18:31:43,083 - #13 [
INFO  18:31:43,083 - #48 2
INFO  18:31:43,083 - #14 ]
INFO  18:31:43,084 - #20 ,
INFO  18:31:43,084 - #48 2
INFO  18:31:43,084 - #16 )
INFO  18:31:43,084 - #16 )
INFO  18:31:43,084 - #17 ;
INFO  18:31:43,084 - #50 a
INFO  18:31:43,084 - #8 =
INFO  18:31:43,084 - #48 3
INFO  18:31:43,084 - #17 ;
INFO  18:31:43,084 - #50 i
INFO  18:31:43,084 - #8 =
INFO  18:31:43,084 - #48 0
INFO  18:31:43,084 - #17 ;
INFO  18:31:43,084 - #40 while
INFO  18:31:43,084 - #15 (
INFO  18:31:43,084 - #50 i
INFO  18:31:43,084 - #35 <
INFO  18:31:43,084 - #48 3
INFO  18:31:43,084 - #16 )
INFO  18:31:43,084 - #11 {
INFO  18:31:43,085 - #50 niz
INFO  18:31:43,085 - #13 [
INFO  18:31:43,085 - #50 i
INFO  18:31:43,085 - #14 ]
INFO  18:31:43,085 - #8 =
INFO  18:31:43,085 - #50 niz
INFO  18:31:43,085 - #13 [
INFO  18:31:43,085 - #50 i
INFO  18:31:43,085 - #14 ]
INFO  18:31:43,085 - #22 *
INFO  18:31:43,085 - #48 2
INFO  18:31:43,085 - #22 *
INFO  18:31:43,085 - #50 a
INFO  18:31:43,085 - #17 ;
INFO  18:31:43,085 - #50 i
INFO  18:31:43,085 - #27 ++
INFO  18:31:43,085 - #17 ;
INFO  18:31:43,085 - #12 }
INFO  18:31:43,085 - #50 niz
INFO  18:31:43,085 - #19 .
INFO  18:31:43,086 - #10 foreach
INFO  18:31:43,086 - #15 (
INFO  18:31:43,086 - #50 curr
INFO  18:31:43,086 - #8 =
ERROR 18:31:43,086 - 
Syntax error on line 92
INFO  18:31:43,086 - #33 >
INFO  18:31:43,086 - #5 print
INFO  18:31:43,086 - #15 (
INFO  18:31:43,087 - #50 curr
INFO  18:31:43,087 - #16 )
INFO  18:31:43,087 - #17 ;
INFO  18:31:43,087 - #16 )
INFO  18:31:43,087 - #17 ;
INFO  18:31:43,087 - #5 print
INFO  18:31:43,087 - #15 (
INFO  18:31:43,087 - #50 eol
ERROR 18:31:43,088 - Syntax error in designator expression. Recovery until SEMI on line 92
INFO  18:31:43,092 - #16 )
INFO  18:31:43,092 - #17 ;
INFO  18:31:43,092 - #50 niz2
INFO  18:31:43,092 - #8 =
INFO  18:31:43,092 - #48 0
INFO  18:31:43,092 - #17 ;
INFO  18:31:43,092 - #50 niz
INFO  18:31:43,092 - #19 .
INFO  18:31:43,092 - #10 foreach
INFO  18:31:43,092 - #15 (
INFO  18:31:43,092 - #50 curr
INFO  18:31:43,092 - #8 =
ERROR 18:31:43,092 - 
Syntax error on line 96
INFO  18:31:43,093 - #33 >
INFO  18:31:43,093 - #11 {
INFO  18:31:43,093 - #50 niz2
INFO  18:31:43,093 - #8 =
INFO  18:31:43,093 - #50 niz2
INFO  18:31:43,093 - #25 +
INFO  18:31:43,093 - #50 curr
INFO  18:31:43,093 - #22 *
INFO  18:31:43,093 - #50 curr
INFO  18:31:43,093 - #17 ;
INFO  18:31:43,093 - #12 }
INFO  18:31:43,093 - #16 )
INFO  18:31:43,093 - #17 ;
INFO  18:31:43,093 - #5 print
INFO  18:31:43,093 - #15 (
INFO  18:31:43,093 - #50 niz2
ERROR 18:31:43,093 - Syntax error in designator expression. Recovery until SEMI on line 96
INFO  18:31:43,093 - #16 )
INFO  18:31:43,093 - #17 ;
INFO  18:31:43,093 - #12 }
INFO  18:31:43,093 - #12 }
INFO  18:31:43,115 - Detektovana deklaracija konstante jedan sa vrednoscu NumVal(
 1
) [NumVal] Linija: 5
INFO  18:31:43,115 - Detektovana deklaracija globalne promenljive i Linija: 7
INFO  18:31:43,115 - Detektovana deklaracija globalne promenljive ibool Linija: 8
INFO  18:31:43,115 - Detektovana deklaracija globalne promenljive niz2 Linija: 10
INFO  18:31:43,115 - Detektovana globalna deklaracija niza niz Linija: 12
INFO  18:31:43,116 - Detektovana deklaracija globalne promenljive a Linija: 13
INFO  18:31:43,116 - Detektovana deklaracija globalne promenljive curr Linija: 13
INFO  18:31:43,116 - Detektovana deklaracija lokalne promenljive pom Linija: 24
INFO  18:33:32,080 - Detektovan poziv globalne funkcije programa sum Linija: 29
INFO  18:33:32,080 - Detektovan poziv globalne funkcije programa sum Linija: 57
INFO  18:33:32,080 - Detektovan poziv globalne funkcije programa verify Linija: 58
INFO  18:33:32,081 - Detektovan poziv globalne funkcije programa ord Linija: 58
INFO  18:33:32,081 - Detektovan poziv globalne funkcije programa ord Linija: 59
ERROR 18:33:32,081 - Greska - continue moze da se koristi samo unutar while / foreach petlji!
ERROR 18:33:32,081 - Greska - break moze da se koristi samo unutar while / foreach petlji!
ERROR 18:33:32,081 - Greska - Broj formalnih i stvarnih parametara funkcije nije isti! Linija: 70
